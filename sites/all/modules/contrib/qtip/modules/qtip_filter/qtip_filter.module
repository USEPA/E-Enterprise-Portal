<?php

/**
 * Implements hook_init().
 */
function qtip_filter_init() {
  // Only load qtip.admin.js file if currently viewing qTip settings page
  if (request_uri() == base_path() . 'admin/config/user-interface/qtip/settings/filter') {
    drupal_add_js(drupal_get_path('module', 'qtip_filter') . '/js/qtip_filter.admin.js');
  }
}

/**
 * Implements hook_filter_info().
 */
function qtip_filter_filter_info() {
  $filters['qtip'] = array(
    'title'             => t('qTip: Add stylish jQuery tooltips to text'),
    'process callback'  => '_qtip_filter_process',
    'settings callback' => '_qtip_filter_settings',
    'tips callback'     => '_qtip_filter_tips',
  );

  return $filters;
}

/**
 * Private callback function for qtip_filter_filter_info().
 */
function _qtip_filter_process($text, $filter) {
  if (preg_match_all("/\[qtip\-?([a-z0-9_]*)?:([^\|\\]]+)\|([^\|\\]]+)?\|?([^\|\\]]*)?\]/i", $text, $match)) {
    foreach ($match[0] as $key => $value) {
      $search[] = $match[0][$key];

      // Check to see if $match[1] is a qTip instance so we know which one to load
      if (!qtip_load($match[1][$key])) {
        // Load the default instance
        $instance = $filter->settings['instance'];
      }
      else {
        // Use the overridden instance
        $instance = $match[1][$key];
      }

      $theme_variables = array(
        'instance' => $instance,
        'content'  => $match[2][$key],
        'tooltip'  => $match[3][$key],
        'title'    => $match[4][$key],
      );

      $replace[] = theme('qtip', $theme_variables);
    }

    return str_replace($search, $replace, $text);
  }
  return $text;
}

/**
 * Private callback function for qtip_filter_filter_info().
 */
function _qtip_filter_settings($form, $form_state, $filter, $format, $defaults, $filters) {
  $filter->settings += $defaults;

  $settings['info'] = array(
    '#markup' => '<strong> '. t('The qtip filter needs to be placed after the \'Limit allowed HTML tags\' filter, if used.') . '</strong>',
  );

  $settings['instance'] = qtip_fetch_instances_field($filter->settings['instance'], array('required' => TRUE, 'weight' => 100));
  // We need to make some modifications to the default field settings
  $settings['instance']['#title'] = t('Default instance');
  $settings['instance']['#description'] = t('Select the default !link that will display when using this filter. This setting can be overridden on a per-tooltip basis by using [qtip-{machine name of tooltip}...] in the filter.', array('!link' => l(t('qTip instance'), 'admin/config/user-interface/qtip', array('attributes' => array('target' => '_blank')))));

  return $settings;
}

/**
 * Private callback function for qtip_filter_filter_info().
 */
function _qtip_filter_tips($delta, $format, $long = FALSE) {
  return "Generate stylish tooltips. Format: [qtip:Text to display on page|Text to appear in tooltip]";
}
