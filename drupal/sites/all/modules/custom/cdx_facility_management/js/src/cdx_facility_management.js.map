{"version":3,"sources":["cdx_facility_management.js"],"names":["$","createProgramSelect","roles_obj","program_filter_select","program_filter_select_holder","program_single","type_filter_select_holder","management_button","first_name","count","html","each","name","append","show","hide","val","createFilterSelect","unbind","change","selected_program","this","adjustFacilityWidgetHeight","type_obj","type_filter_select","type_single","first_userRoleId","first_type","index","type_array","userRoleId","type","generateUserData","ajax","url","Drupal","settings","basePath","success","json","parsed_json","parseJSON","error","console","log","org_to_roles","organizations_to_roles","length","zero_facilities_msg","org_filter_select","org_single","create_token_ajax","done","token_data","expired","userMustLogin","token","naas_ip","server_ip","resource_url","time_logged_in","user_login_time","time_threshold","user_session_logout","temp","org_id","role_object","roles","dataflow","role_array","initial_user_role_id","updateWidget","first_org_id","first_org_name","org_obj","selected_org","click","user_role_id","cdx_facility_management_block","dialog","focus","naas_token","number_attempts","Date","now","getTime","current_time","time_logged_in_mili","time_diff","Math","abs","remove","widget_updating","user_role_waiting","must_update_widget","initFacilityManagementWidget","autoScroll","widgetDisplayType","baseServiceUrl","ImagesFolderPath","NASSToken","NAASip","onInvalidSession","new_token_return","new_naas_token","unableToConnectWidget","onServiceCall","my","at","of","window","onWidgetDataLoaded","logged_in_view","logged_out_view","logged_out_view_button","location","href","error_view","width","$facility_management_block","find","outerWidth","parent","hasClass","css","height","removeClass","addClass","document","ready","first_time_user_block","title","modal","autoOpen","maxWidth","minWidth","dialogClass","resizable","position","resize","on","jQuery"],"mappings":"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","file":"cdx_facility_management.js","sourcesContent":["(function ($) {\r\n\r\n    var cdx_facility_management_block;\r\n    var widget_updating = false;\r\n    var must_update_widget = false;\r\n    var user_role_waiting;\r\n\r\n    // Ajax request for the CDX token to authenticate Facility Widget\r\n    var create_token_ajax = $.ajax({\r\n        url: Drupal.settings.basePath + 'return_cdx_facility_management_token',\r\n        type: 'JSON'\r\n    });\r\n\r\n\r\n    function createProgramSelect(roles_obj) {\r\n        var program_filter_select = $('#fmw-program-select');\r\n        var program_filter_select_holder = $('#fmw-program-select-holder');\r\n        var program_single = $('#fmw-program-single');\r\n        var type_filter_select_holder = $('#fmw-type-select-holder');\r\n        var management_button = $('#launch-facility-management');\r\n\r\n        var first_name = \"\";\r\n        var count = 0;\r\n        program_filter_select.html('<option value=\"\">Select&hellip;</option>');\r\n        $.each(roles_obj, function (name) {\r\n            program_filter_select.append('<option value=\"' + name + '\" >' + name + '</option>');\r\n            count = count + 1;\r\n            first_name = name; // unused if count > 1\r\n        });\r\n        if (count > 1) {\r\n            program_filter_select.show();\r\n            program_single.hide();\r\n        }\r\n        else {\r\n            program_filter_select.val(first_name).hide();\r\n            program_single.html(first_name).show();\r\n            createFilterSelect(roles_obj[first_name]);\r\n        }\r\n        program_filter_select_holder.show();\r\n\r\n        program_filter_select.unbind('change').change(function () {\r\n            var selected_program = $(this).val();\r\n            management_button.hide();\r\n            type_filter_select_holder.hide();\r\n            if (selected_program != '') {\r\n                createFilterSelect(roles_obj[selected_program]);\r\n            }\r\n            adjustFacilityWidgetHeight();\r\n        });\r\n    }\r\n\r\n    function createFilterSelect(type_obj) {\r\n        var type_filter_select = $('#fmw-type-select');\r\n        var type_single = $('#fmw-type-single');\r\n        var type_filter_select_holder = $('#fmw-type-select-holder');\r\n        var count = 0;\r\n        var first_userRoleId = \"\";\r\n        var first_type = \"\";\r\n        var management_button = $('#launch-facility-management');\r\n\r\n        type_filter_select.html('<option value=\"\">Select a Role Type</option>');\r\n\r\n        $.each(type_obj, function (index, type_array) {\r\n            type_filter_select.append('<option value=\"' + type_array.userRoleId + '\" >' + type_array.type + '</option>');\r\n            count = count + 1;\r\n            first_userRoleId = type_array.userRoleId;\r\n            first_type = type_array.type;\r\n        });\r\n\r\n        if (count > 1) {\r\n            type_filter_select.show();\r\n            type_single.hide();\r\n        }\r\n        else {\r\n            type_filter_select.val(first_userRoleId).hide();\r\n            type_single.html(first_type).show();\r\n            management_button.show();\r\n        }\r\n\r\n        type_filter_select.unbind('change').change(function () {\r\n            if ($(this).val() == '') {\r\n                management_button.hide();\r\n            }\r\n            else {\r\n                management_button.show();\r\n            }\r\n            adjustFacilityWidgetHeight();\r\n        });\r\n        type_filter_select_holder.show();\r\n    }\r\n\r\n\r\n    function generateUserData() {\r\n        $.ajax({\r\n            url: Drupal.settings.basePath + 'retrieve_cdx_user_data',\r\n            success: function (json) {\r\n                var parsed_json = $.parseJSON(json);\r\n                if (!parsed_json.error) {\r\n                    var org_to_roles = parsed_json.organizations_to_roles;\r\n                    if (org_to_roles.length == 0) {\r\n                        // User does not manage any facilities\r\n                        var zero_facilities_msg = \"<p>You do not have any facilities to manage in CDX through this widget at this time.</p>\";\r\n                        $('#fmw-organization-select-holder').html(zero_facilities_msg);\r\n                    }\r\n                    else {\r\n\r\n                        //initialize filters object\r\n                        var org_filter_select = $('#fmw-organization-select');\r\n                        var org_single = $('#fmw-organization-single');\r\n                        var management_button = $('#launch-facility-management');\r\n\r\n                        var type_filter_select_holder = $('#fmw-type-select-holder');\r\n\r\n                        var program_filter_select_holder = $('#fmw-program-select-holder');\r\n                        // Wait for new token to finish\r\n                        create_token_ajax.done(function (token_data) {\r\n                            if (token_data == \"\") {\r\n                                token_data = {expired: true};\r\n                            }\r\n                            if (!token_data.expired) {\r\n                                var token = token_data.token;\r\n                                var naas_ip = token_data.server_ip;\r\n                                var resource_url = token_data.url;\r\n                                var time_logged_in = token_data.user_login_time;\r\n                                var time_threshold = token_data.user_session_logout;\r\n                                // First connect to widget initially to start CDX session;\r\n                                var temp = 0;\r\n                                $.each(org_to_roles, function (org_id, role_object) {\r\n                                    if (role_object.roles) {\r\n                                        $.each(role_object.roles, function (dataflow, role_array) {\r\n                                            if (temp == 0) {\r\n                                                var initial_user_role_id = role_array[0].userRoleId;\r\n                                                updateWidget(initial_user_role_id, token, naas_ip, resource_url, time_logged_in, time_threshold, 0);\r\n                                                temp = 1;\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n\r\n                                org_filter_select.append('<option value=\"\">Select an Organization</option>');\r\n                                var count = 0;\r\n                                var first_org_id = \"\";\r\n                                var first_org_name = \"\";\r\n                                $.each(org_to_roles, function (org_id, org_obj) {\r\n                                    if (org_obj.roles) {\r\n                                        org_filter_select.append('<option value=\"' + org_id + '\" >' + org_obj.name + '</option>');\r\n                                        count = count + 1;\r\n                                        first_org_id = org_id; // unused if count > 1\r\n                                        first_org_name = org_obj.name;\r\n                                    }\r\n                                });\r\n\r\n                                if (count == 1) {\r\n                                    org_filter_select.val(first_org_id).hide();\r\n                                    org_single.html(first_org_name).show();\r\n                                    createProgramSelect(org_to_roles[first_org_id].roles);\r\n                                }\r\n                                else {\r\n                                    org_filter_select.show();\r\n                                }\r\n\r\n\r\n                                org_filter_select.change(function () {\r\n                                    var selected_org = $(this).val();\r\n                                    program_filter_select_holder.hide();\r\n                                    type_filter_select_holder.hide();\r\n                                    management_button.hide();\r\n                                    if (selected_org != '') {\r\n                                        createProgramSelect(org_to_roles[selected_org].roles);\r\n                                    }\r\n                                });\r\n\r\n                                management_button.click(function () {\r\n                                    var user_role_id = $('#fmw-type-select').val();\r\n                                    updateWidget(user_role_id, token, naas_ip, resource_url, time_logged_in, time_threshold, 0);\r\n                                    if ($('#facility-widget').length > 0) {\r\n                                        cdx_facility_management_block.dialog('open');\r\n                                        $('.ui-dialog').focus();\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                            else {\r\n                                userMustLogin();\r\n                            }\r\n                        });\r\n                    }\r\n                } else {\r\n                    console.log(\"CDX Error\", parsed_json);\r\n                    $('#fmw-organization-select-holder').html(\"Unable to receive user data.\");\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    function updateWidget(user_role_id, naas_token, naas_ip, resource_url, time_logged_in, time_threshold, number_attempts) {\r\n\r\n        $('#facility-widget').html('');\r\n\r\n        // For IE8 and below\r\n        if (!Date.now) {\r\n            Date.now = function () {\r\n                return new Date().getTime();\r\n            }\r\n        }\r\n        var current_time = Date.now();\r\n        // convert php timestamp to miliseconds\r\n        var time_logged_in_mili = time_logged_in * 1000;\r\n        // Find time diff in minutes (millisecond * 1000 = seconds * 60 = minutes);\r\n        var time_diff = Math.abs((current_time - time_logged_in_mili) / (60 * 1000));\r\n        if (time_diff >= time_threshold) {\r\n            userMustLogin();\r\n            cdx_facility_management_block.remove();\r\n            return;\r\n        }\r\n\r\n        if (widget_updating) {\r\n            user_role_waiting = user_role_id;\r\n            must_update_widget = true;\r\n            return;\r\n        }\r\n\r\n        widget_updating = true;\r\n        $.initFacilityManagementWidget({\r\n            autoScroll: false,\r\n            widgetDisplayType: \"Edit My Facilities\",\r\n            baseServiceUrl: resource_url,\r\n            ImagesFolderPath: resource_url + '/ContentFramework/FRS%20Widget/images', //static\r\n            userRoleId: user_role_id,\r\n            NASSToken: naas_token,\r\n            NAASip: naas_ip,\r\n            onInvalidSession: function () {\r\n                create_token_ajax.done(function (new_token_return) {\r\n                    if (new_token_return.expired) {\r\n                        userMustLogin();\r\n                    }\r\n                    else {\r\n                        var new_naas_token = new_token_return.token;\r\n                        if (new_naas_token === '') {\r\n                            unableToConnectWidget(\"CDX Facility- Blank Token\");\r\n                        }\r\n                        else if (number_attempts > 2) {\r\n                            unableToConnectWidget(\"CDX Facility- Max attempts.\");\r\n                        }\r\n                        else {\r\n                            widget_updating = false;\r\n                            updateWidget(user_role_id, new_naas_token, naas_ip, resource_url, time_logged_in, time_threshold, number_attempts + 1);\r\n                        }\r\n                    }\r\n                });\r\n            },\r\n            onServiceCall: function () {\r\n                cdx_facility_management_block.dialog(\"option\", \"position\", {\r\n                    my: \"center\",\r\n                    at: \"center\",\r\n                    of: window\r\n                });\r\n            },\r\n            onWidgetDataLoaded: function () {\r\n                widget_updating = false;\r\n                if (must_update_widget) {\r\n                    updateWidget(user_role_waiting, naas_token, naas_ip, resource_url, time_logged_in, time_threshold, number_attempts);\r\n                    must_update_widget = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    function userMustLogin() {\r\n        var logged_in_view = $('#cdx-logged-in-options');\r\n        var logged_out_view = $('#cdx-logged-out-options');\r\n        var logged_out_view_button = $('#cdx-logged-out-log-out');\r\n        logged_in_view.remove();\r\n        logged_out_view.show();\r\n        logged_out_view_button.click(function () {\r\n            window.location.href = '/user/logout';\r\n        });\r\n    }\r\n\r\n    function unableToConnectWidget(error) {\r\n        console.log(error);\r\n        var logged_in_view = $('#cdx-logged-in-options');\r\n        var error_view = $('#cdx-unable-to-load');\r\n        logged_in_view.remove();\r\n        error_view.show();\r\n    }\r\n\r\n    function adjustFacilityWidgetHeight() {\r\n        var width = 0;\r\n        var $facility_management_block = $('.pane-views-cdx-facility-management-block');\r\n        $('#cdx-logged-in-options').find('div').each(function () {\r\n            width += $(this).outerWidth(true);\r\n        });\r\n        if (width > $facility_management_block.width()) {\r\n            if ($facility_management_block.parent().hasClass('expanded') &&\r\n                ($('#launch-facility-management').css('display') == 'none')) {\r\n                $facility_management_block.parent().height(\"-=40\");\r\n                $facility_management_block.parent().removeClass('expanded');\r\n            }\r\n            else if (!$('.pane-views-cdx-facility-management-block').parent().hasClass('expanded')) {\r\n                $facility_management_block.parent().height(\"+=40\");\r\n                $facility_management_block.parent().addClass('expanded');\r\n            }\r\n        }\r\n    }\r\n\r\n    $(document).ready(function () {\r\n        cdx_facility_management_block = $('#facility-widget');\r\n        var first_time_user_block = $('#first-time-user-block');\r\n\r\n\r\n        if (cdx_facility_management_block.length > 0) {\r\n            cdx_facility_management_block.dialog({\r\n                title: 'My Facility Manager',\r\n                modal: true,\r\n                autoOpen: false,\r\n                width: 'auto',\r\n                height: 'auto',\r\n                maxWidth: '1000px',\r\n                minWidth: '1000px',\r\n                dialogClass: 'cdx_facility_management_block',\r\n                resizable: false,\r\n                position: {my: \"center\", at: \"center\", of: window}\r\n            });\r\n        }\r\n\r\n\r\n        $(window).resize(function () {\r\n            cdx_facility_management_block.dialog(\"option\", \"position\", {my: \"center\", at: \"center\", of: window});\r\n        });\r\n\r\n\r\n        if (first_time_user_block.length > 0) {\r\n            $(document).on('ee:first_time_user_complete', function () {\r\n                generateUserData();\r\n            });\r\n        }\r\n        else {\r\n            generateUserData();\r\n        }\r\n    });\r\n\r\n})(jQuery);\r\n"]}