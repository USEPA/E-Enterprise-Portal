<?php

/**
 * @file
 * Performs installation and uninstallation tasks.
 */

/**
 * Implementation of hook_enable().
 */
function eenterprise_bridge_auth_enable() {
  // Check if our field is not already created.
  if (!field_info_field('field_cdx_naics_settings')) {
    $field = array(
      'field_name' => 'field_cdx_naics_settings',
      'type' => 'text_long',
      'default_value' => '{}',
    );
    field_create_field($field);

    // Create the instance on the bundle.
    $instance = array(
      'field_name' => 'field_cdx_naics_settings',
      'entity_type' => 'user',
      'label' => 'CDX NAICS User Settings',
      'bundle' => 'user',
      // If you don't set the "required" property then the field wont be required by default.
      'required' => FALSE,
      'settings' => array(
        // Here you inform either or not you want this field showing up on the registration form.
        'user_register_form' => 0,
      ),
      'widget' => array(
        'type' => 'textfield',
        'weight' => '1',
      ),
      'default_value' => '{}',
    );
    field_create_instance($instance);
  }
}

/**
 * Implements hook_requirements().
 */
function eenterprise_bridge_auth_requirements($phase) {
  $requirements = array();
  // Ensure translations don't break during installation.
  $t = get_t();

  if ($phase === 'runtime') {
    if (variable_get('eenterprise_bridge_auth_settings_valid')) {
      $requirements['eenterprise_bridge_auth'] = array(
        'title' => $t('E-Enterprise Bridge Authentication'),
        'value' => 'Configured',
        'severity' => REQUIREMENT_OK,
      );
    }
    else {
      $requirements['eenterprise_bridge_auth'] = array(
        'title' => $t('E-Enterprise Bridge Authentication'),
        'value' => 'Not configured',
        'description' => $t('E-Enterprise Bridge Authentication module has not been configured yet. !link.', array('!link' => l($t('Proceed to configuration'), 'admin/config/people/eebridge-auth'))),
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }
  return $requirements;
}

/**
 * Implements hook_uninstall().
 */
function eenterprise_bridge_auth_uninstall() {

  variable_del('eenterprise_bridge_auth_issuer');
  variable_del('eenterprise_bridge_auth_realm');
  variable_del('eenterprise_bridge_auth_reply');
}


/**
 * UPDATES
 */
function eenterprise_bridge_auth_update_7001() {
  eenterprise_bridge_auth_enable();
}