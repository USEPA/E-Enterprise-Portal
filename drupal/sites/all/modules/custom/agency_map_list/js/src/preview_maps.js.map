{"version":3,"sources":["preview_maps.js"],"names":["$","query_AGOL","url","orgid","ajax","type","async","data","q","f","num","success","status","xhr","resultJson","JSON","parse","results","setupMyMapsGalleryWithThumbs","append","childElementCount","attr","innerHTML","appendTo","dialog","autoOpen","modal","dialogClass","resizable","width","height","position","my","at","of","window","close","this","remove","fail","console","log","statusText","numGoodResults","thumbnailNum","$li_qual","$li_unqual","each","hyperlinkValid","indexOf","linkArr","split","thumbnail","description","owner","itemTags","tags","toString","hyperlinkURL","thumbnailURL","id","origURL","replace","class","data-tags","href","title","target","src","alt","data-toggle","style","html","Drupal","behaviors","agency_map_list","attach","context","settings","$field_messages","click","val","original_text","text","basePath","method","beforeSend","response","parseJSON","error","message","console_message","jQuery"],"mappings":"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","file":"preview_maps.js","sourcesContent":["(function($) {\r\n\r\n    Drupal.behaviors.agency_map_list = {\r\n        attach: function(context, settings) {\r\n            var $field_messages = $('.form-field-type-url .fieldset-description');\r\n\r\n            $('#url_preview', context).click(function () {\r\n                var url = $('#edit-field-ee-agency-map-url-und-0-value').val();\r\n                var original_text = $field_messages.text();\r\n                $.ajax({\r\n                    url: Drupal.settings.basePath + 'ajax_map_form_validate',\r\n                    data: {url: url},\r\n                    method: 'POST',\r\n                    beforeSend: function() {\r\n                        $field_messages.text('Loading...');\r\n                    },\r\n                    success: function(response) {\r\n                        var response = $.parseJSON(response);\r\n                        if (response.error) {\r\n                            $field_messages.html('<span class=\"field-suffix error\">' + response.message + '</span>');\r\n                            console.log(response.console_message);\r\n                        }\r\n                        else {\r\n                            $field_messages.text(original_text);\r\n                            query_AGOL(response.url, response.orgid);\r\n                        }\r\n                    }\r\n\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    //query AGOL/GPO REST API for publicly shared web mapping applications\r\n    //recycled from mymaps.js\r\n    function query_AGOL(url, orgid) {\r\n        $.ajax({\r\n            type: 'GET',\r\n            url: url + '/sharing/rest/search',\r\n            async: true,\r\n            data: {\r\n                q: 'orgid:' + orgid + ' -type:\"Code Attachment\" -type:\"Featured Items\" -type:\"Symbol Set\" -type:\"Color Set\" -type:\"Windows Viewer Add In\" -type:\"Windows Viewer Configuration\" (type:\"Web Mapping Application\" OR type:\"Mobile Application\")',\r\n                f: 'json',\r\n                num: '100'\r\n            },\r\n            success: function (data, status, xhr) {\r\n                var resultJson = JSON.parse(data);\r\n                var results = setupMyMapsGalleryWithThumbs(resultJson, url);\r\n                // Print results in jQuery Dialog modal (see css for sizing)\r\n                // Set up two columns, the first for qualified maps, the second for unqualified\r\n                var dialog = $(\"<h2>\").append($(\"<table/>\")\r\n                        .append($(\"<tr/>\")\r\n                            .append($(\"<td/>\")\r\n                                .append(\"<h2>Qualified Maps (\" + results[0].childElementCount + \")</h2>\").attr('style', 'width: 50%')\r\n                                .append(\"<div>\" + results[0].innerHTML + \"</div>\"))\r\n                            .append($(\"<td/>\")\r\n                                .append(\"<h2>Unqualified Maps (\" + results[1].childElementCount + \")</h2>\").attr('style', 'width: 50%')\r\n                                .append(\"<div>\" + results[1].innerHTML + \"</div>\"))).attr('style', 'width: 100%'))\r\n                        .appendTo(\"body\").dialog({\r\n                    autoOpen: true,\r\n                    modal: true,\r\n\t\t\t\t\t\t\t\t\t\tdialogClass: 'agency-map-list',                                \r\n                    resizable: false,\r\n                    width: \"90%\",\r\n                    height: \"90%\",\r\n                    position: {\r\n                            my: \"center\",\r\n                            at: \"center\",\r\n                            of: window\r\n                    },\r\n                    close: function () {\r\n                        $(this).dialog(\"destroy\").remove();\r\n                    }\r\n                });\r\n            }\r\n        }).fail(function (xhr, status) {\r\n            if (status == \"error\") {\r\n                console.log(\"Error in AGOL API request.\");\r\n                return \"Sorry but there was an error: \" + xhr.status + \" \" + xhr.statusText;\r\n            }\r\n        });\r\n    }\r\n\r\n    //create the MyMaps thumbnail gallery from the AGOL API query results\r\n    function setupMyMapsGalleryWithThumbs(data, url) {\r\n        var numGoodResults = 0;\r\n        var thumbnailNum = 0;\r\n        var $li_qual = $('<li>');\r\n        var $li_unqual = $('<li>');\r\n        //generate each thumbnail and only load it if non-default thumbnail image and a good hyperlink\r\n        $.each(data.results, function () {\r\n            //Added filter for user 'jquacken_EPA' because all of that user's WMAs are not maps - they are how-to guides\r\n            //Check for hyperlinks to most likely apps that are internal only (non default ports of 80, 443)\r\n            var hyperlinkValid;\r\n            if (this.url.indexOf('http') > -1 && this.url !== null) {\r\n                var linkArr = (this.url.split(\"://\"));\r\n                //checks if hyperlink contains port designator\r\n                if ((linkArr[1].indexOf(':') > -1)) {\r\n                    hyperlinkValid = false;\r\n                } else {\r\n                    hyperlinkValid = true;\r\n                }\r\n            } else {\r\n                hyperlinkValid = false;\r\n            }\r\n\r\n            // Qualified results\r\n            if (this.thumbnail != 'thumbnail/ago_downloaded.png' && this.thumbnail !== null && this.description !== null && this.owner != 'jquacken_EPA' && hyperlinkValid === true) {\r\n                var itemTags = this.tags.toString();\r\n                thumbnailNum += 1;\r\n                numGoodResults += 1;\r\n                var thumbnailURL = url + \"/sharing/rest/content/items/\" + this.id + \"/info/\" + this.thumbnail;\r\n                //Descriptions can contain or not contain HTML markup, to let JQuery's .text() work, we just add the p tags to all descriptions\r\n                //and all tags are remove with .text(), including descriptions which has no HTML markup which would normally throw an error\r\n                var desc = \"<p>\" + this.description + \"</p>\";\r\n                //check if hyperlink is hosted on maps.arcgis.com, if it is, switch URL to HTTPS\r\n                var origURL = this.url;\r\n                var hyperlinkURL;\r\n                if ((origURL.indexOf('http://') > -1) && (origURL.indexOf('maps.arcgis.com') > -1)) {\r\n                    //replace with HTTPS since we know maps.arcgis.com support SSL/TLS\r\n                    hyperlinkURL = origURL.replace('http://', 'https://');\r\n                } else {\r\n                    hyperlinkURL = origURL;\r\n                }\r\n\r\n                $li_qual.append(\r\n                    $('<div>').append(\r\n                        $('<a>', {\r\n                            'class': 'thumbhyperlink',\r\n                            'data-tags': itemTags,\r\n                            'href': hyperlinkURL,\r\n                            'title': this.title,\r\n                            'target': '_blank'\r\n                        }).append(\r\n                            $('<img>', {\r\n                                'class': 'thumbnailImg',\r\n                                'src': thumbnailURL, // Use temporary source as placeholder so all thumbs are not loaded at once.\r\n                                'alt': this.title,\r\n                                'title': this.title,\r\n                            })\r\n                        ),\r\n                        $('<p>', {\r\n                            'data-toggle': 'tooltip',\r\n                            'style': 'font-size:10pt',\r\n                            'class': 'ee-bootstrap-tooltip mapAppTitle ellipsis',\r\n                            'title': this.title,\r\n                            'html': this.title\r\n                        })\r\n                    )\r\n                );\r\n            } else {\r\n                // Unqualified results\r\n                var itemTags = this.tags.toString();\r\n                thumbnailNum += 1;\r\n                numGoodResults += 1;\r\n                var thumbnailURL = url + \"/sharing/rest/content/items/\" + this.id + \"/info/\" + this.thumbnail;\r\n                //Descriptions can contain or not contain HTML markup, to let JQuery's .text() work, we just add the p tags to all descriptions\r\n                //and all tags are remove with .text(), including descriptions which has no HTML markup which would normally throw an error\r\n                var desc = \"<p>\" + this.description + \"</p>\";\r\n                //check if hyperlink is hosted on maps.arcgis.com, if it is, switch URL to HTTPS\r\n                var origURL = this.url;\r\n                var hyperlinkURL;\r\n                if ((origURL.indexOf('http://') > -1) && (origURL.indexOf('maps.arcgis.com') > -1)) {\r\n                    //replace with HTTPS since we know maps.arcgis.com support SSL/TLS\r\n                    hyperlinkURL = origURL.replace('http://', 'https://');\r\n                } else {\r\n                    hyperlinkURL = origURL;\r\n                }\r\n\r\n                $li_unqual.append(\r\n                    $('<div>').append(\r\n                        $('<a>', {\r\n                            'class': 'thumbhyperlink',\r\n                            'data-tags': itemTags,\r\n                            'href': hyperlinkURL,\r\n                            'title': this.title,\r\n                            'target': '_blank'\r\n                        }).append(\r\n                            $('<img>', {\r\n                                'class': 'thumbnailImg',\r\n                                'src': thumbnailURL, // Use temporary source as placeholder so all thumbs are not loaded at once.\r\n                                'alt': this.title,\r\n                                'title': this.title,\r\n                            })\r\n                        ),\r\n                        $('<p>', {\r\n                            'data-toggle': 'tooltip',\r\n                            'style': 'font-size:10pt',\r\n                            'class': 'ee-bootstrap-tooltip mapAppTitle ellipsis',\r\n                            'title': this.title,\r\n                            'html': this.title\r\n                        })\r\n                    )\r\n                );\r\n\r\n            }\r\n        });\r\n        return [$li_qual[0], $li_unqual[0]];\r\n    }\r\n\r\n}(jQuery));\r\n"]}