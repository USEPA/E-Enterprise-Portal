<?php
/**
 * Implements hook_menu().
 **/
function recommended_resources_menu()
{
    $items = array();
    $items['generateUserLocalResourcesTable'] = array(
        'page callback' => 'generateUserLocalResourcesTable',
        'access callback' => TRUE,
    );
    $items['generateAllLocalResourcesTable'] = array(
        'page callback' => 'generateAllLocalResourcesTable',
        'access callback' => TRUE,
    );


    return $items;
}

/**
 * Implements hook_theme_registry_alter().
 */
function recommended_resources_theme_registry_alter(&$theme_registry)
{
    // Defined path to the current module.
    $module_path = drupal_get_path('module', 'recommended_resources');
    // Find all .tpl.php files in this module's folder recursively.
    $template_file_objects = drupal_find_theme_templates($theme_registry, '.tpl.php', $module_path);
    // Iterate through all found template file objects.
    foreach ($template_file_objects as $key => $template_file_object) {
        // If the template has not already been overridden by a theme.
        if (!isset($theme_registry[$key]['theme path']) || !preg_match('#/themes/#', $theme_registry[$key]['theme path'])) {
            // Alter the theme path and template elements.
            $theme_registry[$key]['theme path'] = $module_path;
            $theme_registry[$key] = array_merge($theme_registry[$key], $template_file_object);
            $theme_registry[$key]['type'] = 'module';
        }
    }
}

/**
 * Implements hook_preprocess().
 */
function recommended_resources_preprocess(&$variables, $hook)
{

    if ($hook == 'views_view' && $variables['name'] == 'lgc_manage_my_topics' && $variables['display_id'] == 'manage_my_topics_page') {
        drupal_session_start(); // use drupal session

        // Create array of user's LGC Topics
        $_SESSION['user_lgc_topics'] = array();
        global $user;
//        $user_data = user_load($user->uid);
//        $lgc_topics = $user_data->field_lgc_topics_of_interest;

// TODO: is there a way to do this without using a session variable? Ben and I are 'not thrilled about this'
$_SESSION['user_lgc_topics'][] = '172911';
$_SESSION['user_lgc_topics'][] = '172899';
$_SESSION['user_lgc_topics'][] = '172906';
    }

}

/**
 * Returns html for multiselect for lgc topics
 */
function lgc_topics_multiselect()
{
    $multi_select = "<div id='lgc-topics-filter'><select id='lgc-topics-select' multiple>";
    $vocab = taxonomy_vocabulary_machine_name_load("lgc_topics");
    $terms = taxonomy_get_tree($vocab->vid);
    foreach($terms as $obj) {
        $tid = $obj->tid;
        $name = $obj->name;
        $multi_select .= "<option value=$tid>$name</option>";
    }
    $multi_select .= "</select> <button id='apply-lgc-topics'>Apply</button></div>";
    return $multi_select;
}
/**
 * Implements hook_form_alter().
 */
function recommended_resources_form_alter(&$form, &$form_state, $form_id)
{


    global $user;
    if ($form_id == 'lgc_resource_node_form') {
        drupal_add_js(drupal_get_path('module', 'recommended_resources') . "/js/preview_url_form.js", "file");
        drupal_add_css(drupal_get_path('module', 'recommended_resources') . "/css/recommended_resources.css", "file");

        hide($form['additional_settings']);
        hide($form['actions']['preview']);

        // Make sure resource is marked as published
        $form['options']['status'] = array(
            '#type' => 'value',
            '#value' => 1
        );



        $form_state['rebuild'] = TRUE;

				$form['#attributes']['novalidate'] = '1';  
        $form['#validate'][] = 'recommended_resources_form_validate';

        $form['field_lgc_link'][LANGUAGE_NONE][0]['value']['#field_suffix'] = "<a class='usa-button' id='new-lgc-resource-url-preview' href='#'>Preview</a>";

        $form['actions']['submit']['#submit'][] = 'new_lgc_resource_form_redirect';
        $form['actions']['#suffix'] = "<div class='resource-edit-cancel-link'>" . l(t('Cancel'), '/local-resource-editor', array('attributes' => array('class' => 'link usa-button usa-button-outline'))) . "</div>";

    }
}



function recommended_resources_form_validate($form, &$form_state){
    $edit_form  = FALSE;
    $delete_form = FALSE;
    $changed_title = FALSE;

    $input_title = $form_state['input']['title'];
    $saved_title = $form['title']['#default_value'];


    if (!empty($form_state['values']['delete'])) {
        $edit_form = TRUE;
    }
    if ($form_state['input']['op'] == 'Delete') {
        $delete_form = TRUE;
    }
    if ($input_title != $saved_title) {
        $changed_title = TRUE;
    }


    if (!$delete_form) {
        $url = $form_state['values']['field_lgc_link'][LANGUAGE_NONE][0]['value'];
        if (!valid_url($url, TRUE)) {
            $message = "Invalid Web URL (include http or https prefix).";
            form_set_error('field_lgc_link', $message);
        }

        if ($changed_title || !$edit_form) {
            /// Validate Duplicates/
            if (db_query("SELECT count(*) FROM {node} WHERE type = 'lgc_resource' and  title = :title;", array(':title' => $input_title))->fetchField()) {
                // If it is, give an error
                $message = "This resource has already been added. Please enter another.";
                form_set_error('title', $message);
            }
        }
    }
}



/**
 * Hook_node_presave
 */
function recommended_resources_node_presave($node) {
    global $user;
    // Ensure custom content type is assigned to correct author
    if($node->type === 'lgc_resource') {
        $node->uid = $user->uid;
    }
}

function new_lgc_resource_form_redirect($form, &$form_state) {
    drupal_goto('/local-resource-editor');
}


function generateUserLocalResourcesTable() {
    $table =  views_embed_view('user_recommended_resources', 'block');
    print $table;
}

function generateAllLocalResourcesTable() {
    if (isset($_POST['filters'])) {
        $topics = $_POST['filters'];
        $tids = implode('+', $topics);
        $table =  views_embed_view('recommended_resources', 'block_to_be_rendered', $tids);
    }
    else
        $table =  views_embed_view('recommended_resources', 'block_to_be_rendered');
    print $table;
}



