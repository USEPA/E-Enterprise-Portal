<?php
/**
 * Implements hook_menu().
 **/
function other_items_of_interest_menu()
{
    $items = array();
    $items['generateFavoriteAreasOfInterestTable'] = array(
        'page callback' => 'generateFavoriteAreasOfInterestTable',
        'access callback' => TRUE,
    );
    $items['generateAllAreasOfInterestTable'] = array(
        'page callback' => 'generateAllAreasOfInterestTable',
        'access callback' => TRUE,
    );

    return $items;
}

/**
 * Implements hook_theme_registry_alter().
 */
function other_items_of_interest_theme_registry_alter(&$theme_registry)
{
    // Defined path to the current module.
    $module_path = drupal_get_path('module', 'other_items_of_interest');
    // Find all .tpl.php files in this module's folder recursively.
    $template_file_objects = drupal_find_theme_templates($theme_registry, '.tpl.php', $module_path);
    // Iterate through all found template file objects.
    foreach ($template_file_objects as $key => $template_file_object) {
        // If the template has not already been overridden by a theme.
        if (!isset($theme_registry[$key]['theme path']) || !preg_match('#/themes/#', $theme_registry[$key]['theme path'])) {
            // Alter the theme path and template elements.
            $theme_registry[$key]['theme path'] = $module_path;
            $theme_registry[$key] = array_merge($theme_registry[$key], $template_file_object);
            $theme_registry[$key]['type'] = 'module';
        }
    }
}


/**
 * Implements hook_form_alter().
 */
function other_items_of_interest_form_alter(&$form, &$form_state, $form_id)
{
    global $user;
    if ($form_id == 'state_resource_node_form') {
        $form_state['rebuild'] = TRUE;

        // Check if user is not admin
        if ($user->uid > 1) {
            $user_data = user_load($user->uid);
            $state = $user_data->field_admin_state[LANGUAGE_NONE][0]['safe_value'];
            hide($form['additional_settings']);
            hide($form['actions']['preview']);
            $form['title']['#value'] = $state;
            $form['title'];
            $form['title']['#attributes'] = array(
                'disabled' => 'disabled');
        }
        $form['link'] = array('#markup' => l(t('Back'), '/state-resource-editor'));
        $form['actions']['submit']['#submit'][] = 'new_state_form_redirect';
    }
}

/**
 * Hook_node_presave
 */
function other_items_of_interest_node_presave($node) {
    global $user;
   // Ensure custom content type is assigned to correct author
    if($node->type === 'state_resource') {
        $node->uid = $user->uid;
    }
}

function new_state_form_redirect($form, &$form_state) {
        drupal_goto('/state-resource-editor');
}


 function loadStateResources() {
     $state_resources = array();
     $query = new EntityFieldQuery;
     $query->entityCondition('entity_type', 'node')
         ->entityCondition('bundle', 'state_resource')
         ->propertyCondition('status', 1);

     $results = $query->execute();
     if (isset($results['node'])) {
         $nids = array_keys($results['node']);
         $state_resources = entity_load('node', $nids);
     }
    return $state_resources;
 }


function loadUserStates() {
    $states = array();
    global $user;
    $user_data = user_load($user->uid);
    $zip_codes = $user_data->field_zip_code[LANGUAGE_NONE];
    if (count($zip_codes) > 0) {
        foreach($zip_codes as $elem) {
            $zip = $elem['field_field_zip_code'][LANGUAGE_NONE][0]['value'];
            $state = zip_code_lookup($zip)['state'];
            $states[] = $state;
        }
    }
    if ( isset($_SESSION['default_location_zip'])) {
        // add default state
        $state = zip_code_lookup($_SESSION['default_location_zip'])['state'];
        $states[] = $state;
    }

    /// Add users admin state if applicable
    if (in_array('state_admin', $user->roles)) {
        if (isset($user_data->field_admin_state[LANGUAGE_NONE])) {
            $admin_state = $user_data->field_admin_state[LANGUAGE_NONE][0]['safe_value'];
            $states[] = $admin_state;
        }
    }

        return $states;
}

function generateAllAreasOfInterestTable() {
        $state_resources = loadStateResources();
        echo "<table id='other-areas-of-interest-table'>" .
            "<thead><tr><th>Source</th><th>Resource</th><th>Topic</th></tr></thead>" .
            "<tbody>";
        foreach ($state_resources as $nid => $nid_data) {
            $state = $nid_data->title;
            $source = $nid_data->field_source[LANGUAGE_NONE][0]['safe_value'];
            $url = $nid_data->field_source_url[LANGUAGE_NONE][0]['safe_value'];
            $topic = $nid_data->field_topic[LANGUAGE_NONE][0]['value'];
            echo "<tr><td>$state</td>" .
                "<td><div class='interests-url-hyperlink'><a href='" . $url . "' target='_blank'>$source</a></div>" .
                "<br /><div class='interests-url-text' title='" . $url . "'>$url</div></td>" .
                "<td>$topic</td></tr>";

        }

        echo "</tbody> </table>";

}


function generateFavoriteAreasOfInterestTable() {
    $state_resources = loadStateResources();
        echo "<table id='other-areas-of-interest-table'>" .
            "<thead><tr><th>Source</th><th>Resource</th><th>Topic</th></tr></thead>" .
            "<tbody>";
        $users_favorite_states = loadUserStates();
        foreach ($state_resources as $nid => $nid_data) {
            $state = $nid_data->title;
            if (in_array($state, $users_favorite_states)) {
                $source = $nid_data->field_source[LANGUAGE_NONE][0]['safe_value'];
                $url = $nid_data->field_source_url[LANGUAGE_NONE][0]['safe_value'];
                $topic = $nid_data->field_topic[LANGUAGE_NONE][0]['value'];
                echo "<tr><td>$state</td>" .
                    "<td><div class='interests-url-hyperlink'><a href='" . $url . "' target='_blank'>$source</a></div>" .
                    "<br /><div class='interests-url-text' title='" . $url . "'>$url</div></td>" .
                    "<td>$topic</td></tr>";

            }
        }

        echo "</tbody> </table>";
}



