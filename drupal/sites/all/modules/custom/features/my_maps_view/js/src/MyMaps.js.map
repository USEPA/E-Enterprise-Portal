{"version":3,"sources":["MyMaps.js"],"names":["$","tabs","find","on","ev","this","focus","getJSON","Drupal","settings","basePath","data","firstIsActive","firstActive","$jcarousel","jcarousel","index","currentActive","eq","$jcarouselPrev","addClass","updateJCarouselButton","$button","offset","unbind","removeClass","click","turnOnVisibleThumbs","jcarouselControl","target","notHiddenThumbs","not","start","inArray","err","end","err2","slice","each","thumbnailSrcExists","attr","err3","resizeThumbs","$jcarouselThumbs","innerWidth","width","numThumbs","css","Math","ceil","hasClass","$jcarouselNext","reloadDebounce","filterMyMapsGallery","filterType","listItems","li","show","itemTags","toLowerCase","filter","indexOf","updateTotalNumberOfMapsShowing","countThese","query_AGOL","mapsets","mapset","agency_specific_tags","id","url","match","noaatag","ajax","type","async","q","orgid","f","num","success","status","xhr","resultJson","JSON","parse","setupMyMapsGalleryWithThumbs","fail","statusText","numGoodResults","thumbnailNum","results","hyperlinkValid","linkArr","split","thumbnail","description","owner","tags","toString","hyperlinkURL","thumbnailURL","desc","origURL","replace","$li","append","class","data-accessinfo","alias","data-contactemail","contactemail","data-tags","href","title","data-map-source","alt","aria-describedby","data-toggle","html","truncate","text","tabindex","totThumbnails","randomize","dotdotdot","watch","trigger","carouselToCount","numItemsVisible","length","maxLength","truncated","substr","spaceIndex","lastIndexOf","substring","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","activeTab","countScrolls","stopAtScrolls","userrole","galleryLinkTarget","$ul","event","carousel","tab","newTab","fn","a","parent","children","sort","random","detach","appendTo","$jcarouselThumbnail","stopImmediatePropagation","key","which","keyChar","keyCode","e","focusTab","jQuery"],"mappings":"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","file":"MyMaps.js","sourcesContent":["(function ($) {\r\n  $(function () {\r\n    $( \"#myMapsFiltering\" ).tabs();\r\n    $('#myMapsFiltering').find('.ui-corner-top').on('click', function(ev) {\r\n      $(this).focus();\r\n    });\r\n    \r\n    $.getJSON(Drupal.settings.basePath + \"map_dataset\", function( data ) {\r\n      // Get map collections from JSON\r\n      var mapsets = data.mapsets,\r\n        filterType = \"mapsAll\",\r\n        countThese = \"all\",\r\n        activeTab = \"myMapsFilterAll\",\r\n        // Put agency-specific filtering tags here\r\n        noaatag = 'tags:\"oceans\"',\r\n        countScrolls = 0,\r\n        focusThumb = 0,\r\n        numItemsVisible = 0,\r\n        numThumbs = 0,\r\n        stopAtScrolls = 0,\r\n        totThumbnails = 0,\r\n        reloadDebounce = debounce(function(){\r\n          $('.jcarousel').jcarousel('reload').jcarousel('scroll', 0);\r\n          turnOnVisibleThumbs()\r\n        }, 300);\r\n\r\n      //If user is a state_admin, add the \"Add agency maps\" link\r\n      if (Drupal.settings.userrole === 'state_admin') {\r\n        var galleryLinkTarget = $('#numThumbnails').find('.widget-note');\r\n        galleryLinkTarget.append('<a href=\"/agency-map-list\" id=\"manage-maps\" class=\"favorites-ignore last\">Manage agency map collections</a>');\r\n      }\r\n      var $jcarousel = $('.jcarousel');\r\n      //Opening UL only created in init of gallery  \r\n      var $ul = $('<ul>', {'class': 'thumb'});\r\n      $jcarousel.html($ul);\r\n\r\n      //Query all AGOL endpoints given from mapsets JSON\r\n      query_AGOL(mapsets);\r\n      $jcarousel.jcarousel();\r\n      var $jcarouselNext = $('.jcarousel-control-next');\r\n      var $jcarouselPrev = $('.jcarousel-control-prev');             \r\n\r\n      /********************jcarousel event listeners***********************/\r\n      $jcarousel\r\n        .on('jcarousel:reloadend', function () {\r\n          //Event listener for carousel reloads\r\n        })\r\n        .on('jcarousel:visiblein', 'li', function(event, carousel) {\r\n          // if this has .load-thumbnail, then active\r\n          if ($(this).hasClass('load-thumbnail')) {\r\n            $(this).addClass('active');\r\n          }\r\n        })\r\n        .on('jcarousel:visibleout', 'li', function(event, carousel) {\r\n          $(this).removeClass('active');\r\n        })\r\n       \r\n      $(\"#myMapsFiltering\").on(\"tabsbeforeactivate\", function (event, tab) {     \r\n        countScrolls = 0;\r\n        activeTab = tab.newTab.attr('id');\r\n        filterType = tab.newTab.find('a').attr('id');\r\n        filterMyMapsGallery(filterType);\r\n      });\r\n\r\n      /*****************************functions******************************/\r\n      function firstIsActive(){\r\n        var firstActive = $jcarousel.jcarousel('first').index(),\r\n          currentActive = $jcarousel.find('.load-thumbnail').eq(0).index();\r\n        if (firstActive === currentActive) {\r\n          $jcarouselPrev.addClass('inactive');\r\n        }\r\n      }\r\n\r\n      // Helper function for updating offset values as the objects resize\r\n      function updateJCarouselButton($button, offset){\r\n        $button\r\n        // cleanup event listeners\r\n          .unbind('jcarouselcontrol:active').unbind('jcarouselcontrol:inactive')\r\n        // Apply new events\r\n          .on('jcarouselcontrol:active', function () {\r\n            $(this).removeClass('inactive');\r\n          })\r\n          .on('jcarouselcontrol:inactive', function () {\r\n            $(this).addClass('inactive');\r\n          })\r\n          .click(function () {\r\n            // If user clicks previous, make sure those thumbs are visible.\r\n            turnOnVisibleThumbs();\r\n          })\r\n          .jcarouselControl({\r\n            target: offset\r\n          });\r\n      }\r\n\r\n      function turnOnVisibleThumbs() {\r\n        //Function to turn on thumbnail image sources for visible\r\n        //jcarousel entries.\r\n\r\n        //jcarousel's \"visible\" list doesn't actually include the\r\n        //last visible item, so we need to build our own list\r\n        //Find start of visible list\r\n        var notHiddenThumbs = $('.thumb').find('li').not(':hidden');\r\n        try {\r\n          start = $.inArray($jcarousel.jcarousel('visible')[0], notHiddenThumbs);\r\n        }\r\n        catch(err) {\r\n        }\r\n        //Max number of visible items in our carousel is 5,\r\n        //so set ending point to offset 6\r\n        try {\r\n          end = start + 6;\r\n        }\r\n        catch(err2) {\r\n        }                \r\n        //Slide the full list of entries to just those 5 we are\r\n        //interested in (all possible visible & not filtered/hidden)\r\n        try {\r\n          notHiddenThumbs.slice(start, end).each(function () {\r\n            // If the img source is not already turned on\r\n            var thumbnailSrcExists = $(this).find(\".thumbnailImg\").attr(\"src\");\r\n            if (!thumbnailSrcExists) {\r\n              // Set image source from temporary source.\r\n              $(this).find(\".thumbnailImg\").attr(\"src\", $(this).find(\".thumbnailImg\").attr(\"data-map-source\"));\r\n            }\r\n            else {\r\n            }\r\n          });\r\n        }\r\n        catch(err3) {\r\n        }\r\n      }\r\n\r\n      function resizeThumbs() {\r\n        var $jcarouselThumbs = $jcarousel.find('li');\r\n        //Set max number of items displayed to be 5, with less\r\n        //visible based on current browser width\r\n        var innerWidth = $jcarousel.innerWidth();\r\n        if (innerWidth >= 1100) {\r\n          width = (innerWidth / 5) - 4;\r\n          numThumbs = 5;\r\n        } else if (innerWidth >= 850) {\r\n          width = (innerWidth / 4) - 4;\r\n          numThumbs = 4;\r\n        } else if (innerWidth >= 600) {\r\n          width = (innerWidth / 3) - 4;\r\n          numThumbs = 3;\r\n        } else if (innerWidth >= 350) {\r\n          width = (innerWidth / 2) - 4;\r\n          numThumbs = 2;\r\n        }\r\n        $jcarouselThumbs.css('width', Math.ceil(width) + 'px');\r\n        if ($jcarouselThumbs.hasClass('load-thumbnail')) {\r\n          turnOnVisibleThumbs();\r\n        }\r\n        $jcarousel.find('.load-thumbnail').removeClass('active').slice(0, numThumbs).addClass('active');\r\n\r\n        // Update our buttons with the proper targets\r\n        updateJCarouselButton($jcarouselPrev, '-=' + numThumbs);\r\n        updateJCarouselButton($jcarouselNext, '+=' + numThumbs);\r\n        reloadDebounce();\r\n      }\r\n\r\n      function filterMyMapsGallery(filterType) {\r\n        var listItems = $('.jcarousel ul li');\r\n        listItems.removeClass('active hide-thumbnail').addClass('load-thumbnail');        \r\n        listItems.each(function (li) {\r\n          //reset gallery to show all items before applying filter\r\n          $(this).show();\r\n          var itemTags = $(this).find('a').data('tags').toLowerCase();\r\n          // When switching tabs, need to explicitly set thumbnails to display none and/or CSS class to hide them\r\n          // Then add load-thumbnail to the remaining items\r\n          // If faster to use else versus listItems.filter, then can adjust \r\n          switch (filterType) {\r\n            // NOTE:  All maps includes more than just Air, Water, and Land where tags don't match our queries\r\n            case 'mapsAll':\r\n              listItems.filter(':visible').addClass('load-thumbnail');\r\n              var countThese = 'all';\r\n              //nothing to do because all items are showing\r\n              break;\r\n            case 'mapsAir':\r\n              var countThese = 'air';\r\n              if ((itemTags.indexOf('air') === -1 && itemTags.indexOf('oaqps') === -1) || (itemTags.indexOf('impair') > -1)) {\r\n                $(this).removeClass('load-thumbnail').addClass('hide-thumbnail');\r\n              }\r\n              break;\r\n            case 'mapsWater':\r\n              var countThese = 'water';\r\n              if (itemTags.indexOf('water') === -1 && itemTags.indexOf('ocean') === -1) {\r\n                $(this).removeClass('load-thumbnail').addClass('hide-thumbnail');\r\n              }\r\n              break;\r\n            case 'mapsLand':\r\n              var countThese = 'land';\r\n              if (itemTags.indexOf('land') === -1 && itemTags.indexOf('rcra') === -1) {\r\n                $(this).removeClass('load-thumbnail').addClass('hide-thumbnail');\r\n              }\r\n              break;\r\n          }\r\n        });\r\n        updateTotalNumberOfMapsShowing(countThese);\r\n        firstIsActive();\r\n        resizeThumbs();\r\n      }\r\n\r\n      //query AGOL/GPO REST API for publicly shared web mapping applications\r\n      function query_AGOL(mapsets) {\r\n        $.each(mapsets, function (index, mapset) {\r\n          var agency_specific_tags = \"\";\r\n          mapset.id = mapset.url.match(/\\/\\/(.*).maps.arcgis.com/)[1];\r\n          if (mapset.id === \"noaa\") {\r\n            agency_specific_tags = noaatag;\r\n          }\r\n          $.ajax({\r\n            type: 'GET',\r\n            url: mapset.url + '/sharing/rest/search',\r\n            async: true,\r\n            //later to implement tag search or similar for\r\n            //filtering based on dynamic criteria\r\n            data: {\r\n              q: 'orgid:' + mapset.orgid + ' ' + agency_specific_tags + ' -type:\"Code Attachment\" -type:\"Featured Items\" -type:\"Symbol Set\" -type:\"Color Set\" -type:\"Windows Viewer Add In\" -type:\"Windows Viewer Configuration\" (type:\"Web Mapping Application\" OR type:\"Mobile Application\")',\r\n              f: 'json',\r\n              num: '100'\r\n            },\r\n            mapset: mapset,\r\n            success: function (data, status, xhr) {\r\n              var resultJson = JSON.parse(data);\r\n              setupMyMapsGalleryWithThumbs(resultJson, this.mapset);\r\n            }\r\n          }).fail(function (xhr, status) {\r\n            if (status === \"error\") {\r\n              return \"Sorry but there was an error: \" + xhr.status + \" \" + xhr.statusText;\r\n            }\r\n          });\r\n        });\r\n      }\r\n\r\n      //create the MyMaps thumbnail gallery from the AGOL API query results\r\n      function setupMyMapsGalleryWithThumbs(data, mapset) {\r\n        var numGoodResults = 0;\r\n        var thumbnailNum = 0;\r\n\r\n        //generate each thumbnail and only load it if non-default thumbnail image and a good hyperlink\r\n        $.each(data.results, function () {\r\n          //Added filter for user 'jquacken_EPA' because all of that user's WMAs are not maps - they are how-to guides\r\n          //Check for hyperlinks to most likely apps that are internal only (non default ports of 80, 443)\r\n          var hyperlinkValid;\r\n          if (this.url.indexOf('http') > -1 && this.url !== null) {\r\n            var linkArr = (this.url.split(\"://\"));\r\n            //checks if hyperlink contains port designator\r\n            if ((linkArr[1].indexOf(':') > -1)) {\r\n              hyperlinkValid = false;\r\n            } else {\r\n              hyperlinkValid = true;\r\n            }\r\n          } else {\r\n            hyperlinkValid = false;\r\n          }\r\n\r\n          if (this.thumbnail != 'thumbnail/ago_downloaded.png' && this.thumbnail !== null && this.description !== null && this.owner != 'jquacken_EPA' && hyperlinkValid === true) {\r\n            var itemTags = this.tags.toString();\r\n            thumbnailNum += 1;\r\n            numGoodResults += 1;\r\n            var thumbnailURL = mapset.url + \"/sharing/rest/content/items/\" + this.id + \"/info/\" + this.thumbnail;\r\n            //Descriptions can contain or not contain HTML markup, to let JQuery's .text() work, we just add the p tags to all descriptions\r\n            //and all tags are remove with .text(), including descriptions which has no HTML markup which would normally throw an error\r\n            var desc = \"<p>\" + this.description + \"</p>\";\r\n            //check if hyperlink is hosted on maps.arcgis.com, if it is, switch URL to HTTPS\r\n            var origURL = this.url;\r\n            var hyperlinkURL;\r\n            if ((origURL.indexOf('http://') > -1) && (origURL.indexOf('maps.arcgis.com') > -1)) {\r\n              //replace with HTTPS since we know maps.arcgis.com support SSL/TLS\r\n              hyperlinkURL = origURL.replace('http://', 'https://');\r\n            } else {\r\n              hyperlinkURL = origURL;\r\n            }\r\n\r\n            var $li = $('<li class=\"load-thumbnail\">').append(\r\n              $('<div>', {\r\n                'class': 'thumbitem-border'\r\n              }).append(\r\n                $('<a>', {\r\n                  'class': 'thumbhyperlink',\r\n                  'data-accessinfo': mapset.alias,\r\n                  'data-contactemail': mapset.contactemail,\r\n                  'data-tags': itemTags,\r\n                  'href': hyperlinkURL,\r\n                  'title': this.title,\r\n                  'target': '_blank'\r\n                }).append(\r\n                  $('<img>', {\r\n                    'class': 'thumbnailImg',\r\n                    'data-map-source': thumbnailURL, // Use temporary source as placeholder so all thumbs are not loaded at once.\r\n                    'alt': this.title,\r\n                    'title': this.title,\r\n                    'aria-describedby': 'thumbnail-desc-' + mapset.id + '-' + thumbnailNum + ' ' + 'thumbnail-source-' + mapset.id + '-' + thumbnailNum + ' ' + 'thumbnail-contact-' + thumbnailNum\r\n                  })\r\n                ),\r\n                $('<p>', {\r\n                  'data-toggle': 'tooltip',\r\n                  'class': 'ee-bootstrap-tooltip mapAppTitle ellipsis',\r\n                  'title': this.title,\r\n                  'html': this.title\r\n                }),\r\n                //the description element can contain HTML markup so use .text to un-format the string\r\n                //Omaha has no descriptions in their publicly shared WMAs\r\n                $('<p>', {\r\n                  'data-toggle': 'tooltip',\r\n                  'class': 'ee-bootstrap-tooltip mapAppDesc ellipsis',\r\n                  'id': 'thumbnail-desc-' + mapset.id + '-' + thumbnailNum,\r\n                  'title': truncate($(desc).text(), 1000),\r\n                  'html': $(desc).text(),\r\n                  'tabindex': '0'\r\n                }),\r\n                $('<p>', {\r\n                  'data-toggle': 'tooltip',\r\n                  'class': 'ee-bootstrap-tooltip mapAppSource ellipsis',\r\n                  id: 'thumbnail-source-' + mapset.id + '-' + thumbnailNum,\r\n                  'title': mapset.alias,\r\n                  'html': mapset.alias\r\n                }),\r\n                $('<p>', {\r\n                  'data-toggle': 'tooltip',\r\n                  'class': 'mapAppContact',\r\n                  id: 'thumbnail-contact-' + mapset.id + '-' + thumbnailNum,\r\n                  'title': mapset.contactemail,\r\n                  'html': '<a href=\"mailto:' + mapset.contactemail + '\">' + mapset.contactemail + '</a>'\r\n                })\r\n              )\r\n            );\r\n\r\n            $('.jcarousel ul').append($li);\r\n          }\r\n        });\r\n\r\n        totThumbnails += numGoodResults;\r\n        $('.thumb').randomize('li');\r\n\r\n        $(\".ellipsis\").dotdotdot({\r\n          watch: \"window\"\r\n        });\r\n        $(\".ellipsis\").trigger(\"update.dot\");\r\n\r\n        var countThese = 'all';\r\n        updateTotalNumberOfMapsShowing(countThese);\r\n        filterMyMapsGallery(countThese);\r\n      }\r\n\r\n      function updateTotalNumberOfMapsShowing(countThese) {\r\n        var carouselToCount = '#' + countThese + '-maps-carousel .thumb > li.load-thumbnail';\r\n        numItemsVisible = $(carouselToCount).length;\r\n        $(\"#map-count\").html(numItemsVisible.toString());\r\n      }\r\n\r\n      //mix content from different sources in the MyMaps Gallery\r\n      $.fn.randomize = function (a) {\r\n        (a ? this.find(a) : this).parent().each(function () {\r\n          $(this).children(a).sort(function () {\r\n            return Math.random() - 0.5;\r\n          }).detach().appendTo(this);\r\n        });\r\n        return this;\r\n      };\r\n\r\n      function truncate(text, maxLength) {\r\n        if (text.length <= maxLength) {\r\n          return text;\r\n        }\r\n        var truncated = text.substr(0, maxLength);\r\n        var spaceIndex = truncated.lastIndexOf(' ');\r\n        if (spaceIndex === -1) {\r\n          return truncated + '...';\r\n        }\r\n        return truncated.substring(0, spaceIndex) + '...';\r\n      }\r\n\r\n      function debounce(func, wait, immediate) {\r\n        var timeout;\r\n        return function() {\r\n          var context = this, args = arguments;\r\n          var later = function() {\r\n            timeout = null;\r\n            if (!immediate) func.apply(context, args);\r\n          };\r\n          var callNow = immediate && !timeout;\r\n          clearTimeout(timeout);\r\n          timeout = setTimeout(later, wait);\r\n          if (callNow) func.apply(context, args);\r\n        };\r\n      };\r\n\r\n      //better keyboard accessibility, allow keyboard left and right arrows to navigate gallery\r\n      var $jcarouselThumbnail = $jcarousel.find('.load-thumbnail.active a');\r\n      $jcarouselThumbnail.on('focus', function() {\r\n        $jcarouselThumbnail.on('keyup', function(ev) {\r\n          ev.stopImmediatePropagation();\r\n          var key = ev.which || ev.keyChar || ev.keyCode;\r\n          if (key === 27) {\r\n            $jcarousel.focus();\r\n          } else if (key === 37) {\r\n            // If count scrolls is 0, do not scroll left/previous, do not subtract\r\n            // If count scrolls is > 0, then scroll left/previous\r\n            if(!$jcarouselPrev.hasClass('inactive')) {\r\n              $jcarouselPrev.trigger('click');\r\n            }    \r\n            $jcarouselThumbnail.eq(0).focus();      \r\n          } else if (key === 39) {\r\n            // If count scrolls is less than the max # of scrolls, scroll right/next\r\n            // If count scrolls is > 0, then scroll to previous thumbnails\r\n            if(!$jcarouselNext.hasClass('inactive')) {\r\n              $jcarouselNext.trigger('click');\r\n            }\r\n            $jcarouselThumbnail.eq(0).focus();\r\n          }\r\n        });\r\n      });\r\n      \r\n      $jcarousel.on('focus', function() {\r\n        $jcarousel.on('keyup', function(e) {\r\n          e.stopImmediatePropagation();\r\n          var key = e.which || e.keyChar || e.keyCode;\r\n          stopAtScrolls = numItemsVisible - 1;\r\n          if (key === 37) {\r\n            // If count scrolls is 0, do not scroll left/previous, do not subtract\r\n            // If count scrolls is > 0, then scroll left/previous\r\n            if(!$jcarouselPrev.hasClass('inactive')) {\r\n              $jcarouselPrev.trigger('click');\r\n              $jcarousel.focus();              \r\n            }          \r\n          } else if (key === 39) {\r\n            // If count scrolls is less than the max # of scrolls, scroll right/next\r\n            // If count scrolls is > 0, then scroll to previous thumbnails\r\n            if(!$jcarouselNext.hasClass('inactive')) {\r\n              $jcarouselNext.trigger('click');\r\n              $jcarousel.focus();\r\n            }\r\n          } else if (key === 27) {           \r\n             var focusTab = '#' + activeTab;\r\n             $(focusTab).focus();\r\n          }\r\n        });\r\n      });\r\n      \r\n      \r\n    });\r\n  });\r\n})(jQuery);\r\n"]}