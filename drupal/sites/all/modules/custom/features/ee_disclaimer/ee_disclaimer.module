<?php

/**
* Implements hook_init().
*/

/**
* Implements hook_menu().
*/
function ee_disclaimer_menu() {
  $items = array();
  
  $items['ee_disclaimer/page'] = array(
    'page callback' => 'ee_disclaimer_callback',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function ee_disclaimer_menu_alter(&$items) {
  $items['workbench']['page arguments'] = array($items['workbench']['page callback'], $items['workbench']['page arguments']);
  $items['workbench']['page callback'] = 'ee_disclaimer_workbench_page_callback';
}

// wrap workbench page callback to see if disclaimer needs to be shown instead
function ee_disclaimer_workbench_page_callback($original_page_callback, $original_page_arguments) {

  global $user;
  $user_data = user_load($user->uid);

  $disclaimer_last_modified = _ee_disclaimer_last_modified();
  $user_agreed_date = end($user_data->field_terms_of_use_agreed_date[LANGUAGE_NONE])['value'];

  if ($disclaimer_last_modified > $user_agreed_date) { // need to show disclaimer
    return ee_disclaimer_callback();
  } else {
    return call_user_func($original_page_callback, $original_page_arguments[0]);
  }
}

/**
 * Ajax menu callback.
 */
function ee_disclaimer_callback() {
  $block = views_embed_view('ee_user_agreement', 'block');
  return $block . render(drupal_get_form('ee_disclaimer_form'));
}

function ee_disclaimer_form($form, &$form_state) {

  $form['agree'] = array(
    '#type' => 'checkbox',
    '#title' => t('I agree to these terms of use'),
  );

  $form['#submit'][] = 'ee_disclaimer_form_submit';
  $form['#validate'][] = 'ee_disclaimer_form_validation';

  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Continue'),
  );
  
  return $form;
}

function ee_disclaimer_form_submit($form, &$form_state) {

  global $user;
  $user_data = user_load($user->uid);

  $agreed_date = $user_data->field_terms_of_use_agreed_date;
  $agreed_date[LANGUAGE_NONE][] = array('value' => time());

  $edit = array('field_terms_of_use_agreed_date' => $agreed_date);

  user_save($user_data, $edit);
}

function ee_disclaimer_form_validation($form, &$form_state) {
  $agree = $form_state['values']['agree'];
  if (empty($agree)) {
    form_set_error('email', t('You must agree to continue.'));
  }
}

function _ee_disclaimer_last_modified() {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
  ->entityCondition('bundle', 'ee_user_agreement')
  ->propertyCondition('status', 1)
  ->propertyOrderBy('created', 'DESC')
  ->range(0, 1);

  $result = $query->execute();

  return node_load(end($result['node'])->nid)->changed;
}