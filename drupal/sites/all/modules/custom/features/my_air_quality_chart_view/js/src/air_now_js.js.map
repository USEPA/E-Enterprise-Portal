{"version":3,"sources":["air_now_js.js"],"names":["$","hideWorkbenchFieldsFromSR","hidden","attr","removeAttr","loadMap","map","L","on","e","setView","getContainer","addClass","esri","basemapLayer","addTo","dynamicMapLayer","url","opacity","position","AQSMonitorLayer","addLayer","bindPopup","error","featureCollection","features","length","stateBoundaries","fitBounds","_map","getBounds","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","todayDate","getZoom","identify","at","latlng","run","lon83","properties","LONGITUDE83","lat83","LATITUDE83","cityName","CITY_NAME","stateAbbrev","STATE_CODE","ajax","type","Drupal","settings","basePath","async","data","format","latitude","longitude","date","distance","success","status","xhr","airnowAPIResultData","JSON","parse","AQSpopupContent","i","paramName","ParameterName","AQICategoryName","Category","Name","row","popup","setLatLng","setContent","openOn","css","fail","console","log","statusText","updateMarker","currentZipData","invalidateSize","marker","markers","string","todayAQI","minWidth","maxWidth","className","LatLng","Number","openPopup","formatDate","delimiter","month","day","year","join","srTodayAQI","aqiExplained","dialogDiv","dialogTitle","srAQIString","first_time_user_loading","document","ready","openDialog","dialogContents","text","html","dialog","title","width","modal","maxHeight","close","removeClass","focus","first_time_user_block","$tabs","tabs","activate","ui","newPanel","id","find","ev","this","evt","draw","zip","removeLayer","FeatureGroup","stopPropagation","drawChart","locationText","dateStr","split","parseInt","dateDiffInDays","a","b","_MS_PER_DAY","utc1","UTC","utc2","Math","floor","getCategoryInfoIndex","aqi","categoryBounds","addAQICategoryToSR","categoryBoundLabels","categoryInfo","body","header","showPopover","obj","showPopoverFromCategoryIndex","categoryInfoIndex","popover","d3","select","$popover","node","bound","getBoundingClientRect","info","style","left","clientWidth","top","show","hidePopover","hide","insertLinebreaks","d","el","words","j","tspan","append","computeVisualAQI","xx","x","DateForecast","yy","y","visualAQI","drawMessage","todayData","srDay","srDateDay","srDayOfWeek","srMonthIndex","srMonth","srYear","srLongDate","srAQI","srAQICategory","cssClass","m","chartTitle","distanceFromToday","-1","0","1","minDate","maxDate","days","monthNames","maxAQI","AQI","getDay","reducedCategoryBounds","maxCategoryBound","baseHeight","baseWidth","w","h","time","scale","domain","range","linear","line","svg","container","graph","height","area","interpolate","x0","x1","activeCategoryIndex","activeCategory","datum","xAxis","axis","ticks","tickFormat","distanceFromTodayLabel","call","selectAll","each","yAxis","tickValues","orient","tickSize","yAxisGroup","cat","gnodes","enter","classed","ShowAQILabel","msg","zipCode","parseData","responseData","showAQILabel","categoryToMidAQI","entry","ReportingArea","StateCode","push","2","3","4","5","6","endpoint","yesterday","setDate","params","getJSON","jQuery"],"mappings":"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","file":"air_now_js.js","sourcesContent":["(function($) {\r\n  \"use strict\";\r\n\r\n  var map;\r\n  var markers;\r\n  var currentZipData;\r\n  var todayAQI;\r\n  var AQSMonitorLayer;\r\n  var srTodayAQI;\r\n  var srAQIString = '';\r\n  var aqiExplained;\r\n  var first_time_user_loading = false;\r\n  var hidden;\r\n  var dialogDiv, dialogTitle, dialogContents;\r\n\r\n  $(document).ready(function() {\r\n      var first_time_user_block = $('#first-time-user-block');\r\n      if (first_time_user_block.length > 0) {\r\n          first_time_user_loading = true;\r\n      }\r\n      $(document).on('ee:first_time_user_complete', function() {\r\n          first_time_user_loading = false;\r\n      });\r\n    var $tabs = $(\"#my-air-quality-chart-tabs\");\r\n\r\n    map = loadMap();\r\n\r\n    $tabs.tabs({\r\n      activate: function(e, ui) {\r\n        //map tab activated\r\n        if (ui.newPanel[0].id == 'my-air-quality-air-now-maps') {\r\n          //console.log(\"map tab activated\");\r\n          updateMarker();\r\n        }\r\n      }\r\n    });\r\n    \r\n    $('#my-air-quality-chart-tabs').find('.ui-corner-top').on('click', function(ev) {\r\n      $(this).focus();\r\n    });\r\n\r\n    $(document).on(\"ee:zipCodeQueried\", function(evt, data) {\r\n        if (!first_time_user_loading) {\r\n            currentZipData = data;\r\n            draw(currentZipData.zip, currentZipData.string);\r\n            //if markers exist then it's not the original map load\r\n            if (markers) {\r\n                map.removeLayer(markers);\r\n                markers = new L.FeatureGroup();\r\n                map.addLayer(markers);\r\n                updateMarker();\r\n            }\r\n            //original map load so markers are added via other method in map creation\r\n            else {\r\n                markers = new L.FeatureGroup();\r\n                map.addLayer(markers);\r\n            }\r\n        }\r\n    });\r\n  \r\n    // When user clicks / presses Enter on View chart description / Learn more links, \r\n    // create dialogs with appropriate text and open dialogs, then focus them\r\n    // Also call hideWorkbenchFieldsFromSR to apply aria-hidden to background elements so screen reader does not \"see\" them\r\n    $('#sr-aqi-data-toggle').on('click', function(e) {\r\n      e.stopPropagation();\r\n      dialogDiv = '#sr-aqi-data';\r\n      dialogTitle = 'Air Quality Index Chart'\r\n      openDialog(dialogDiv, dialogTitle, srAQIString);      \r\n    });\r\n    \r\n    $('#aqi-explained-toggle').on('click', function(e) {\r\n     e.stopPropagation();\r\n     dialogDiv = '#aqi-explained';\r\n     dialogTitle = 'Air Quality Index Explained';\r\n     openDialog(dialogDiv, dialogTitle, aqiExplained); \r\n    });\r\n\r\n    function openDialog(dialogDiv, dialogTitle, dialogContents) {\r\n      $('body').addClass('modal-open');\r\n      if ($(dialogDiv).text().length === 0) {\r\n        $(dialogDiv).html(dialogContents);\r\n        $(dialogDiv).dialog({\r\n          title: dialogTitle,\r\n          width: 500,\r\n          modal: true,\r\n          maxHeight: 300,\r\n          close: function() {\r\n            hideWorkbenchFieldsFromSR(false);\r\n            $('body').removeClass('modal-open');            \r\n            $(dialogDiv).dialog('destroy');\r\n            $(dialogDiv).text('');            \r\n          }\r\n        });\r\n      }\r\n      else {\r\n        $(dialogDiv).dialog('open');   \r\n      }\r\n      hideWorkbenchFieldsFromSR(true);      \r\n      $('.ui-dialog').focus();\r\n    }\r\n  });\r\n\r\n  function hideWorkbenchFieldsFromSR(hidden) {\r\n    if (hidden) {\r\n      $('.masthead').attr('aria-hidden', 'true');\r\n      $('.region-navigation').attr('aria-hidden', 'true');\r\n      $('.main-content').attr('aria-hidden', 'true');\r\n      $('#footer').attr('aria-hidden', 'true');    \r\n    }\r\n    else {\r\n      $('.masthead').removeAttr('aria-hidden');\r\n      $('.region-navigation').removeAttr('aria-hidden');\r\n      $('.main-content').removeAttr('aria-hidden');\r\n      $('#footer').removeAttr('aria-hidden');\r\n    }\r\n  }\r\n\r\n  function loadMap() {\r\n    var map = L.map('my-air-quality-air-now-map-container');\r\n    map.on('load', function(e) {\r\n      //console.log('map loaded');\r\n    });\r\n    //this extent is not actually used (but is needed), since map should be panned to the marker after being created\r\n    map.setView([32.505, -96.09], 13);\r\n    $('a', map.getContainer()).addClass('favorites-ignore');\r\n    L.esri.basemapLayer(\"Gray\").addTo(map);\r\n    var aqiLayer = L.esri.dynamicMapLayer({\r\n      url: \"https://gispub.epa.gov/arcgis/rest/services/OAR_OAQPS/AirNowNationalAQI/MapServer\",\r\n      opacity: 0.3,\r\n      position: 'back'\r\n    }).addTo(map);\r\n    AQSMonitorLayer = L.esri.dynamicMapLayer({\r\n      url: \"https://gispub.epa.gov/arcgis/rest/services/OEI/FRS_AQSTemp/MapServer\",\r\n      opacity: 1.0,\r\n      position: 'front'\r\n    });\r\n\r\n    //AQSMonitorLayer.on(\"load\", function() {});\r\n    map.addLayer(AQSMonitorLayer);\r\n    AQSMonitorLayer.bindPopup(function(error, featureCollection) {\r\n      if (error || featureCollection.features.length === 0) {\r\n        return false;\r\n      } else {\r\n        return 'Querying Current Air Quality - Please Wait.';\r\n      }\r\n    });\r\n\r\n    var stateBoundaries = L.esri.dynamicMapLayer({\r\n      url: 'https://gispub.epa.gov/arcgis/rest/services/ORD/ROE_StateBoundaries/MapServer',\r\n      opacity: 0.9,\r\n      position: 'front'\r\n    }).addTo(map);\r\n\r\n    map.fitBounds(stateBoundaries._map.getBounds());\r\n\r\n    //calc a date string for AirNow API call for a map click on air monitor event\r\n    var today = new Date();\r\n    var dd = today.getDate();\r\n    var mm = today.getMonth() + 1; //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    if (dd < 10) {\r\n      dd = '0' + dd;\r\n    }\r\n    if (mm < 10) {\r\n      mm = '0' + mm;\r\n    }\r\n    //'2015-09-03' format for AirNow API\r\n    var todayDate = yyyy + '-' + mm + '-' + dd;\r\n    map.on(\"click\", function(e) {\r\n      if (map.getZoom() > 9) {\r\n        AQSMonitorLayer.identify().on(map).at(e.latlng).run(function(error, featureCollection) {\r\n          if (featureCollection.features.length > 0) {\r\n            var lon83 = featureCollection.features[0].properties.LONGITUDE83;\r\n            var lat83 = featureCollection.features[0].properties.LATITUDE83;\r\n            var cityName = featureCollection.features[0].properties.CITY_NAME;\r\n            var stateAbbrev = featureCollection.features[0].properties.STATE_CODE;\r\n            $.ajax({\r\n              type: 'GET',\r\n              url: Drupal.settings.basePath + 'my_air_quality_map_view/api/current/latLong/',\r\n              async: true,\r\n              data: {\r\n                format: 'application/json',\r\n                latitude: lat83,\r\n                longitude: lon83,\r\n                date: todayDate,\r\n                distance: '50'\r\n              },\r\n              success: function(data, status, xhr) {\r\n                //console.log(\"success\");\r\n                var airnowAPIResultData = JSON.parse(data);\r\n                if (cityName == \"NOT IN A CITY\") {\r\n                  cityName = \"RURAL AREA\";\r\n                }\r\n                var AQSpopupContent = cityName + ', ' + stateAbbrev + '</br>Current Air Quality<table><tbody><tr><td><b>Parameter</b></td><td><b>Category</b></td></tr>';\r\n                for (var i = 0; i < airnowAPIResultData.length; i++) {\r\n                  var paramName = airnowAPIResultData[i].ParameterName;\r\n                  var AQICategoryName = airnowAPIResultData[i].Category.Name;\r\n                  var row = '<tr><td>' + paramName + '</td><td>' + AQICategoryName + '</td></tr>';\r\n                  AQSpopupContent += row;\r\n                }\r\n                AQSpopupContent += '</tbody></table>';\r\n                var popup = L.popup()\r\n                  .setLatLng(e.latlng)\r\n                  .setContent(AQSpopupContent)\r\n                  .openOn(map);\r\n                $('html, body').css(\"cursor\", \"auto\");\r\n              }\r\n            }).fail(function(xhr, status) {\r\n              if (status == \"error\") {\r\n                $('html, body').css(\"cursor\", \"auto\");\r\n                console.log(\"Error in AirNow API request.\");\r\n                return \"Sorry but there was an error: \" + xhr.status + \" \" + xhr.statusText;\r\n              }\r\n            });\r\n          } else {\r\n            $('html, body').css(\"cursor\", \"auto\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n    //Right after the map is done loading, add favorites-ignore to Leaflet branding text.\r\n    $(\"#my-air-quality-air-now-map-container .leaflet-bottom .leaflet-control-attribution a\").addClass(\"favorites-ignore\");\r\n    return map;\r\n  }\r\n\r\n  function queryForAirMonPopup(popupLat, popupLon) {\r\n    //query the public AirNow API using the lat/long of the Air Monitor location\r\n    var resultJson;\r\n    $.ajax({\r\n      type: 'GET',\r\n      url: Drupal.settings.basePath + 'my_air_quality_map_view/api/current/latLong/',\r\n      async: true,\r\n      data: {\r\n        format: 'application/json',\r\n        latitude: '32.6460',\r\n        longitude: '-97.4248',\r\n        date: '2015-09-03',\r\n        distance: '50'\r\n      },\r\n      success: function(data, status, xhr) {\r\n        var airnowAPIResultData = JSON.parse(data);\r\n        var AQSpopupContent = '<table>';\r\n        for (var i = 0; i < airnowAPIResultData.length; i++) {\r\n          console.log(airnowAPIResultData[i].ParameterName);\r\n          console.log(airnowAPIResultData[i].Category.Name);\r\n          var paramName = airnowAPIResultData[i].ParameterName;\r\n          var AQICategoryName = airnowAPIResultData[i].Category.Name;\r\n          var row = '<tr><td>' + paramName + '</td><td>' + AQICategoryName + '</td></tr>';\r\n          AQSpopupContent += row;\r\n        }\r\n        AQSpopupContent += '</table>';\r\n        console.log(AQSpopupContent);\r\n        AQSMonitorLayer.bindPopup('test');\r\n        //return AQSpopupContent;\r\n      }\r\n    }).fail(function(xhr, status) {\r\n      if (status == \"error\") {\r\n        console.log(\"Error in AirNow API request.\");\r\n        return \"Sorry but there was an error: \" + xhr.status + \" \" + xhr.statusText;\r\n      }\r\n    });\r\n  }\r\n\r\n  function updateMarker() {\r\n    if (currentZipData && currentZipData.latitude && currentZipData.longitude) {\r\n      map.invalidateSize();\r\n      var latlng = [currentZipData.latitude, currentZipData.longitude];\r\n      var marker = L.marker(latlng).addTo(markers);\r\n      marker.bindPopup(\"<b>\" + currentZipData.string + \"</b>\" + (todayAQI ? (\"<br/>Today's Air Quality: \" + todayAQI) : \"\"), {\r\n        minWidth: 150,\r\n        maxWidth: 500,\r\n        className: 'favorites-ignore'\r\n      });\r\n      //use setview instead of pan to avoid x undefined errors\r\n      map.setView(new L.LatLng(Number(currentZipData.latitude), Number(currentZipData.longitude)), 14);\r\n      marker.openPopup();\r\n    }\r\n  }\r\n\r\n  function formatDate(date, delimiter) {\r\n    var month = '' + (date.getMonth() + 1),\r\n      day = '' + date.getDate(),\r\n      year = date.getFullYear();\r\n    if (month.length < 2) month = '0' + month;\r\n    if (day.length < 2) day = '0' + day;\r\n\r\n    return [year, month, day].join(delimiter);\r\n  }\r\n\r\n  var drawChart = function(data, locationText) {\r\n    drawMessage('');\r\n    function drawPopulationsAtRisk() {\r\n      if (todayData) {\r\n        if (todayData.AQI > 50) {\r\n          var g = graph.append(\"g\")\r\n            .attr(\"transform\", \"translate(-\" + (m[3]) + \",\" + (h + m[0] + 65) + \")\")\r\n          var text = g.append(\"text\");\r\n          text.append(\"tspan\")\r\n            .attr(\"x\", 0)\r\n            .text(\"Today's At Risk\")\r\n          text.append(\"tspan\")\r\n            .attr(\"x\", 0)\r\n            .attr(\"dy\", 18)\r\n            .text(\"Populations\")\r\n\r\n          if (todayData.AQI > 150) { // all populations at risk\r\n            var cellPosition = (w + m[1] + m[3]) / 2;\r\n            g.append(\"text\")\r\n              .attr(\"transform\", \"translate(\" + cellPosition + \",0)\")\r\n              .attr(\"class\", \"at-risk-item\")\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .text(\"Everyone\")\r\n          } else if (todayData.AQI > 100) { // [lungs, heart, over 55, under 12] at risk\r\n            var cellWidth = (w + m[1] + m[3]) / 5;\r\n            var cellPosition = 150;\r\n            var lungsG = g.append(\"g\")\r\n              .attr(\"transform\", \"translate(\" + cellPosition + \", 0)\");\r\n            lungsG.append(\"text\")\r\n              .attr(\"class\", \"at-risk-item\")\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .text(\"Lungs\");\r\n            lungsG.append(\"image\")\r\n              .attr(\"class\", \"at-risk-icon\")\r\n              .attr(\"transform\", \"translate(-20, 0)\")\r\n              .attr(\"xlink:href\", \"sites/all/themes/oneepa/images/airnow-lungs.png\");\r\n\r\n            cellPosition += cellWidth;\r\n\r\n            var heartG = g.append(\"g\")\r\n              .attr(\"transform\", \"translate(\" + cellPosition + \", 0)\")\r\n            heartG.append(\"text\")\r\n              .attr(\"class\", \"at-risk-item\")\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .text(\"Heart\");\r\n            heartG.append(\"image\")\r\n              .attr(\"class\", \"at-risk-icon\")\r\n              .attr(\"transform\", \"translate(-20, 0)\")\r\n              .attr(\"xlink:href\", \"sites/all/themes/oneepa/images/airnow-heart.png\");\r\n            cellPosition += cellWidth;\r\n\r\n            var adultsText = g.append(\"text\")\r\n              .attr(\"transform\", \"translate(\" + cellPosition + \", 0)\")\r\n              .attr(\"text-anchor\", \"middle\");\r\n            adultsText.append(\"tspan\")\r\n              .attr(\"class\", \"at-risk-item\")\r\n              .text(\"Adults\")\r\n            adultsText.append(\"tspan\")\r\n              .attr(\"class\", \"at-risk-item at-risk-item-large\")\r\n              .attr(\"x\", 0)\r\n              .attr(\"dy\", 40)\r\n              .text(\"55\")\r\n            adultsText.append(\"tspan\")\r\n              .attr(\"class\", \"at-risk-item\")\r\n              .attr(\"x\", 0)\r\n              .attr(\"dy\", 18)\r\n              .text(\"and Over\");\r\n\r\n            cellPosition += cellWidth;\r\n\r\n            var childrenText = g.append(\"text\")\r\n              .attr(\"transform\", \"translate(\" + cellPosition + \", 0)\")\r\n              .attr(\"text-anchor\", \"middle\");\r\n            childrenText.append(\"tspan\")\r\n              .attr(\"class\", \"at-risk-item\")\r\n              .text(\"Children\")\r\n            childrenText.append(\"tspan\")\r\n              .attr(\"class\", \"at-risk-item at-risk-item-large\")\r\n              .attr(\"x\", 0)\r\n              .attr(\"dy\", 40)\r\n              .text(\"12\")\r\n            childrenText.append(\"tspan\")\r\n              .attr(\"class\", \"at-risk-item\")\r\n              .attr(\"x\", 0)\r\n              .attr(\"dy\", 18)\r\n              .text(\"and Under\")\r\n\r\n          } else {\r\n            var cellPosition = (w + m[1] + m[3]) / 2;\r\n            g.append(\"text\")\r\n              .attr(\"transform\", \"translate(\" + cellPosition + \",0)\")\r\n              .attr(\"class\", \"at-risk-item\")\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .text(\"Groups unusually sensitive to ozone\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // dateStr: yyyy-mm-dd\r\n    function getDate(dateStr) {\r\n      dateStr = dateStr.split('-');\r\n      return new Date(dateStr[0], parseInt(dateStr[1]) - 1, dateStr[2]);\r\n    }\r\n\r\n    function dateDiffInDays(a, b) {\r\n      var _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n      // Discard the time and time-zone information.\r\n      var utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n      var utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\r\n      return Math.floor((utc2 - utc1) / _MS_PER_DAY);\r\n    }\r\n\r\n    function getCategoryInfoIndex(aqi) {\r\n      for (var i = 0; i < categoryBounds.length - 1; i++) {\r\n        if (aqi >= categoryBounds[i] && aqi < categoryBounds[i + 1]) {\r\n          return i;\r\n        }\r\n      }\r\n      return categoryBounds.length - 2;\r\n    }\r\n    \r\n    function addAQICategoryToSR(aqi) {\r\n      for (var i = 0; i < categoryBoundLabels.length - 1; i++) {\r\n        if (aqi >= categoryBounds[i] && aqi < categoryBounds[i + 1]) {\r\n          return \"<abbr class='ee-bootstrap-tooltip' title='\" + categoryInfo[i].body + \"'>\" + categoryInfo[i].header + \"</abbr>\";\r\n        }\r\n      }\r\n      return \"No AQI is available\";      \r\n    }\r\n\r\n    function showPopover(obj, aqi) {\r\n      showPopoverFromCategoryIndex(obj, getCategoryInfoIndex(aqi));\r\n    }\r\n\r\n    function showPopoverFromCategoryIndex(obj, categoryInfoIndex) {\r\n      var popover = d3.select(\".popover\");\r\n      var $popover = $(popover.node());\r\n      var bound = obj.getBoundingClientRect();\r\n      var info = categoryInfo[categoryInfoIndex];\r\n      popover.html('<div class=\"arrow\"></div><h3 class=\"popover-title\">' + info.header + '</h3><div class=\"popover-content\">' + info.body + '</div>');\r\n      popover.style({\r\n        \"left\": bound.left + obj.clientWidth + 40 + \"px\",\r\n        \"top\": bound.top - 50 + \"px\"\r\n      });\r\n      $popover.show();\r\n    }\r\n\r\n    function hidePopover() {\r\n      $(\".popover\").hide();\r\n    }\r\n\r\n    function insertLinebreaks(d) {\r\n      var el = d3.select(this);\r\n      var words = el.text().split('/');\r\n      el.text('');\r\n      for (var i = 0, j = 0; i < words.length; i++) {\r\n        if (words[i]) {\r\n          var tspan = el.append('tspan').text(words[i]);\r\n          if (j > 0) {\r\n            tspan.attr('x', 0).attr('dy', '18');\r\n          }\r\n          j++;\r\n        } else {\r\n          el.attr('y', 27);\r\n        }\r\n      }\r\n    }\r\n\r\n    function computeVisualAQI(aqi) {\r\n      if (aqi < 200)\r\n        return aqi;\r\n      else if (aqi < 300)\r\n        return (aqi - 200) * 0.5 + 200;\r\n      else\r\n        return (aqi - 300) * 0.25 + 250;\r\n    }\r\n\r\n    var categoryInfo = [{\r\n      header: 'Good',\r\n      body: 'Air quality is considered satisfactory, and air pollution poses little or no risk. ',\r\n      cssClass: 'section-good'\r\n    }, {\r\n      header: 'Moderate',\r\n      body: 'Air quality is acceptable; however, for some pollutants there may be a moderate health ' + 'concern for a very small number of people who are unusually sensitive to air pollution. ',\r\n      cssClass: 'section-moderate'\r\n    }, {\r\n      header: 'Unhealthy for sensitive groups',\r\n      body: 'Members of sensitive groups may experience health effects. The general public is not ' + 'likely to be affected. ',\r\n      cssClass: 'section-unhealthy-for-sensitive'\r\n    }, {\r\n      header: 'Unhealthy',\r\n      body: 'Everyone may begin to experience health effects; members of sensitive groups may ' + 'experience more serious health effects. ',\r\n      cssClass: 'section-unhealthy'\r\n    }, {\r\n      header: 'Very unhealthy',\r\n      body: 'Health warnings of emergency conditions. The entire population is more likely to be affected. ',\r\n      cssClass: 'section-very-unhealthy'\r\n    }, {\r\n      header: 'Hazardous',\r\n      body: 'Health alert: everyone may experience more serious health effects. ',\r\n      cssClass: 'section-hazardous'\r\n    }];\r\n\r\n    // define dimensions of graph\r\n    var m = [35, 40, 80, 175]; // margins: top, right, bottom, left\r\n    // var w = 550 - m[1] - m[3]; // width\r\n    var chartTitle = 'My Air';\r\n    var todayData; // store the data point  which contains today's data; not necessarily defined\r\n    var distanceFromToday = {\r\n      '-1': 'Yesterday',\r\n      '0': 'Today',\r\n      '1': 'Tomorrow'\r\n    };\r\n\r\n    var categoryBounds = [0, 51, 101, 151, 201, 251, 301];\r\n    var categoryBoundLabels = [0, 51, 101, 151, 201, 301, 500];\r\n\r\n    // get max and min dates - this assumes data is sorted\r\n    var minDate = getDate(data[0].DateForecast),\r\n      maxDate = getDate(data[data.length - 1].DateForecast);\r\n    var days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\r\n    var monthNames = ['January','February','March','April','May','June','July','August','September','October','November','December'];\r\n    var srDate = new Date();\r\n    var srDay;\r\n    var srDateDay;\r\n    var srDayOfWeek;\r\n    var srMonthIndex;\r\n    var srMonth;    \r\n    var srYear;\r\n    var srLongDate;\r\n    var srAQI;\r\n    var srAQICategory;\r\n\r\n    // find the maxAQI in the data\r\n    // compute visualAQI\r\n    var maxAQI = 0;\r\n    srTodayAQI = \"\";\r\n    for (var i in data) {\r\n      if (maxAQI < data[i].AQI)\r\n        maxAQI = data[i].AQI;\r\n      data[i].visualAQI = computeVisualAQI(data[i].AQI);\r\n      \r\n      srDay = getDate(data[i].DateForecast);\r\n      srDayOfWeek = days[srDay.getDay()];\r\n      srDateDay = srDay.getDate();\r\n      srMonthIndex = srDay.getMonth();\r\n      srMonth = monthNames[srMonthIndex];\r\n      srYear = srDay.getFullYear();\r\n      srLongDate = srDayOfWeek + \", \" + srMonth + \" \" + srDateDay + \", \" + srYear;\r\n      \r\n      srAQI = data[i].AQI;\r\n      srAQICategory = addAQICategoryToSR(srAQI);\r\n      srTodayAQI = srTodayAQI + \"The AQI for \" + srLongDate + \" is \" + srAQI + \" in the \" + srAQICategory + \" range.  \";\r\n    }\r\n    srAQIString = srAQIString + srTodayAQI;\r\n    \r\n    aqiExplained = \"<div tabindex='0'><p>Think of the AQI as a yardstick that runs from 0 to 500. The higher the AQI value, the greater the level of air pollution and the greater the health concern. For example, an AQI value of 50 represents good air quality with little potential to affect public health, while an AQI value over 300 represents hazardous air quality.  Each category corresponds to a different level of health concern. The six levels of health concern and what they mean are:</p><ul><li>A <b>Good</b> AQI is 0 to 50. Air quality is considered satisfactory, and air pollution poses little or no risk.</li><li>A <b>Moderate</b> AQI is 51 to 100. Air quality is acceptable; however, for some pollutants there may be a moderate health concern for a very small number of people. For example, people who are unusually sensitive to ozone may experience respiratory symptoms.</li><li>An <b>Unhealthy for Sensitive Groups</b> AQI is 101 to 150. Although general public is not likely to be affected at this AQI range, people with lung disease, older adults and children are at a greater risk from exposure to ozone, whereas persons with heart and lung disease, older adults and children are at greater risk from the presence of particles in the air.</li><li>An Unhealthy AQI is 151 to 200. Everyone may begin to experience some adverse health effects, and members of the sensitive groups may experience more serious effects.</li><li>A <b>Very Unhealthy</b> AQI is 201 to 300. This would trigger a health alert signifying that everyone may experience more serious health effects.</li><li>A <b>Hazardous</b> AQI is greater than 300. This would trigger a health warnings of emergency conditions. The entire population is more likely to be affected.</li></ul></div>\";\r\n    \r\n    // Find data point corresponding to today\r\n    for (var i in data) {\r\n      if (dateDiffInDays(new Date(), getDate(data[i].DateForecast)) == 0) {\r\n        todayData = data[i];\r\n        todayAQI = todayData.AQI;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Only show the categories for which data is present\r\n    // var reducedCategoryBounds = categoryBounds.slice(0, Math.max(getCategoryInfoIndex(maxAQI) + 2, 5));\r\n    var reducedCategoryBounds = categoryBounds;\r\n    var maxCategoryBound = reducedCategoryBounds[reducedCategoryBounds.length - 1];\r\n    var baseHeight = maxCategoryBound + 25;\r\n    var baseWidth = data.length * 50 + m[1] + m[3];\r\n\r\n    // reduced width and height based on data\r\n    var w = baseWidth - m[1] - m[3];\r\n    var h = baseHeight - m[0] - m[2];\r\n\r\n    // if 'Unhealthy for sensitive groups' category text is visible\r\n    if (reducedCategoryBounds.length > 3) {\r\n      m[3] += 150; // add to the left margin to make room for the long category text\r\n    }\r\n\r\n    if (todayData && todayData.AQI > 50) {\r\n      m[2] += 100; // add to the bottom margin to make room for the populations at risk section\r\n    }\r\n\r\n    // set x and y scales\r\n    var x = d3.time.scale().domain([minDate, maxDate]).range([0, w]);\r\n    var y = d3.scale.linear().domain([0, maxCategoryBound]).range([h, 0]);\r\n\r\n    // create a line function that can convert data[] into x and y points\r\n    var line = d3.svg.line()\r\n      // assign the X function to plot our line as we wish\r\n      .x(function(d, i) {\r\n        // return the X coordinate where we want to plot this datapoint\r\n        return x(getDate(d.DateForecast)); //x(i);\r\n      })\r\n      .y(function(d) {\r\n        // return the Y coordinate where we want to plot this datapoint\r\n        return y(d.visualAQI);\r\n      });\r\n\r\n    function xx(e) {\r\n      return x(getDate(e.DateForecast));\r\n    };\r\n\r\n    function yy(e) {\r\n      return y(e.visualAQI);\r\n    };\r\n\r\n    var container = d3.select(\"#my-air-quality-chart\").append('div').attr('class', 'my-air-quality-chart-container');\r\n    container.style(\"padding-bottom\", (100 * (h + m[0] + m[2]) / (w + m[1] + m[3])) + \"%\");\r\n\r\n    // Add an SVG element with the desired dimensions and margin.\r\n    var graph = container.append(\"svg:svg\")\r\n      // .attr(\"width\", w + m[1] + m[3])\r\n      // .attr(\"height\", h + m[0] + m[2])\r\n      .style({\r\n        \"width\": \"100%\",\r\n        \"height\": \"100%\",\r\n        // \"overflow\": \"visible\",\r\n        // \"padding-bottom\": \"99.99%\",\r\n        \"position\": \"absolute\",\r\n        \"left\": 0,\r\n        \"top\": 0\r\n      }).style(\"max-width\", (w + m[1] + m[3]) + \"px\")\r\n      // .style(\"max-height\", (h + m[0] + m[2]) + \"px\")\r\n\r\n      .attr(\"viewBox\", \"0 0 \" + (w + m[1] + m[3]) + \" \" + (h + m[0] + m[2]))\r\n      // .attr(\"preserveAspectRatio\", \"xMidYMin slice\")\r\n      .attr(\"aria-labelledby\", \"my-air-quality-chart-title\")\r\n      .attr(\"version\", \"1.1\")\r\n      .append(\"svg:g\")\r\n      .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\r\n\r\n    graph.append(\"svg:title\")\r\n      .attr(\"id\", \"my-air-quality-chart-title\")\r\n      .text(chartTitle);\r\n      \r\n    graph.append(\"svg:desc\")\r\n      .attr(\"id\", \"my-air-quality-chart-description\")\r\n      .text(srTodayAQI);\r\n\r\n    var area = d3.svg.area()\r\n      .interpolate(\"basis\")\r\n      .y(function(d) {\r\n        return y(d);\r\n      })\r\n      .x0(-m[3] + m[1])\r\n      .x1(w + m[1]);\r\n\r\n    if (todayData) {\r\n      // Fill category background color based on AQI index for today\r\n      var activeCategoryIndex = getCategoryInfoIndex(todayData.AQI);\r\n      var activeCategory = categoryInfo[activeCategoryIndex];\r\n\r\n      graph.append(\"path\")\r\n        .datum([categoryBounds[activeCategoryIndex], categoryBounds[activeCategoryIndex + 1]])\r\n        .attr(\"transform\", \"translate(-10,0)\")\r\n        .attr(\"class\", activeCategory.cssClass)\r\n        .attr(\"d\", area);\r\n\r\n      // Draw populations at risk if needed\r\n      //drawPopulationsAtRisk(todayData, graph);\r\n    }\r\n\r\n    // Create xAxis\r\n    var xAxis = d3.svg.axis().scale(x).ticks(d3.time.days, 1).tickFormat(function(date) {\r\n      var distanceFromTodayLabel = distanceFromToday[dateDiffInDays(new Date(), date)];\r\n      return ((distanceFromTodayLabel ? distanceFromTodayLabel : '') + '/' + d3.time.format(\"%a/%b %d\")(date));\r\n    });\r\n    // Add the x-axis.\r\n    var xAxisGroup = graph.append(\"svg:g\")\r\n      .attr(\"class\", \"x axis\")\r\n      .attr(\"transform\", \"translate(0,\" + h + \")\")\r\n      .call(xAxis);\r\n\r\n    // Add line breaks to x-axis labels\r\n    graph.selectAll('g.x.axis g text').each(insertLinebreaks);\r\n\r\n    // Add CSS class to highlight today's date label in x-axis\r\n    graph.selectAll('g.x.axis g text').attr(\"class\", function(d, i) {\r\n      return (!todayData || dateDiffInDays(d, getDate(todayData.DateForecast)) != 0) ? '' : ' active-date-text';\r\n    });\r\n\r\n    // Create yAxis\r\n    var yAxis = d3.svg.axis().scale(y).tickValues(categoryBounds).orient(\"left\").tickSize(-w - m[3]).tickFormat(function(d, i) {\r\n      return categoryBoundLabels[i];\r\n    });\r\n\r\n    // Add the y-axis to the left\r\n    var yAxisGroup = graph.append(\"svg:g\")\r\n      .attr(\"class\", \"y axis\")\r\n      .attr(\"transform\", \"translate(-\" + (m[3] - m[1] + 10) + \",0)\")\r\n      .call(yAxis);\r\n    yAxisGroup.append(\"text\")\r\n      .attr(\"y\", h + m[0] + 20)\r\n      .attr(\"class\", \"aqi-note\")\r\n      .text(\"Note: These are forecasted values./Graph is not drawn to scale.\")\r\n      .each(insertLinebreaks);\r\n\r\n    // Translate y-axis ticks to the right\r\n    graph.selectAll('.y.axis line.tick')\r\n      .attr(\"transform\", \"translate(10,0)\")\r\n\r\n    // Add category text for the y-axis\r\n    graph.selectAll(\".y.axis g\").append('text')\r\n      .text(function(cat, i) {\r\n        return i < reducedCategoryBounds.length - 1 ? categoryInfo[i].header : '';\r\n      })\r\n      .attr(\"transform\", function(cat, i) {\r\n        // vertical centering\r\n        var scale = reducedCategoryBounds[reducedCategoryBounds.length - 1] / h;\r\n        return i + 1 >= categoryBounds.length ? \"\" : \"translate(25, -\" + ((categoryBounds[i + 1] - categoryBounds[i]) / 2 * scale - 20) + \")\"\r\n      }).attr(\"alignment-baseline\", \"middle\")\r\n      .attr(\"class\", function(cat, i) {\r\n        return 'category-label' + (!todayData || i != getCategoryInfoIndex(todayData.AQI) ? '' : ' active-category-text')\r\n      })\r\n      .on(\"mouseover\", function(d, i) {\r\n        showPopoverFromCategoryIndex(this, i);\r\n      })\r\n      .on(\"focus\", function(d, i) {\r\n         if(i < (reducedCategoryBounds.length - 1))\r\n            showPopoverFromCategoryIndex(this, i);\r\n      })\r\n      .on(\"focusout\", function() {\r\n        hidePopover();\r\n      })\r\n      .on(\"mouseout\", function() {\r\n        hidePopover();\r\n      });\r\n\r\n    // Add the line by appending an svg:path element with the data line we created above\r\n    graph.append(\"svg:path\").attr(\"d\", line(data));\r\n\r\n    // Add a group consisting of the data point and a text element labeling the point\r\n    var gnodes = graph.selectAll('g.gnode')\r\n      .data(data)\r\n      .enter()\r\n      .append('g')\r\n      .classed('gnode', true)\r\n    gnodes.append(\"text\")\r\n      .attr(\"x\", function(d) {\r\n        return x(getDate(d.DateForecast));\r\n      })\r\n      .attr(\"y\", function(d) {\r\n        return y(d.visualAQI) - 20\r\n      })\r\n      .attr(\"class\", function(d) {\r\n        return !todayData || d.DateForecast != todayData.DateForecast ? '' : 'active-category-text'\r\n      })\r\n      .attr(\"tabindex\", \"0\")\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .on(\"focus\", function(d, i) {\r\n        showPopover(this, d.AQI);\r\n      })\r\n      .on(\"focusout\", function() {\r\n        hidePopover();\r\n      })\r\n      .text(function(d) {\r\n        return d.ShowAQILabel ? d.AQI : '';\r\n      });\r\n    \r\n    gnodes.append(\"circle\")\r\n      .attr(\"fill\", \"#454545\")\r\n      .attr(\"r\", 5)\r\n      .attr(\"stroke\", \"white\")\r\n      .attr(\"stroke-width\", 40)\r\n      .attr(\"stroke-opacity\", 0)\r\n      .attr(\"cx\", xx)\r\n      .attr(\"cy\", yy)\r\n      .on(\"mouseover\", function(d) {\r\n        showPopover(this, d.AQI);\r\n      })\r\n      .on(\"mouseout\", function() {\r\n        hidePopover();\r\n      });    \r\n\r\n    // Append reporting area\r\n    graph.append(\"text\")\r\n      .attr(\"x\", (w) / 2)\r\n      .attr(\"y\", -m[0] / 2)\r\n      .attr(\"tabindex\", \"0\")\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"class\", \"aqi-location\")\r\n      .text(locationText);\r\n\r\n    // Append popover\r\n    var tooltip = d3.select('#my-air-quality-chart')\r\n      .style(\"max-width\", w + m[1] + m[3] + \"px\")\r\n      .append(\"div\")\r\n      .attr(\"class\", \"popover right\")\r\n      .style(\"position\", \"fixed\");\r\n               \r\n  }\r\n\r\n  var drawMessage = function(msg) {\r\n    d3.select(\"#my-air-quality-chart\").html(msg);\r\n  }\r\n\r\n  var draw = function(zipCode, locationText) {\r\n    var categoryToMidAQI = {\r\n      1: 25,\r\n      2: 75,\r\n      3: 125,\r\n      4: 175,\r\n      5: 250,\r\n      6: 400\r\n    };\r\n\r\n    function parseData(responseData) {\r\n      var data = [];\r\n      var maxAQI = -1;\r\n\r\n      // for each date, find the max component AQI and add it\r\n      for (var i = 0; i < responseData.length; i++) {\r\n        if (responseData[i].AQI > maxAQI)\r\n          maxAQI = responseData[i].AQI;\r\n        // insert new entry\r\n        if ((i + 1 == responseData.length || responseData[i].DateForecast != responseData[i + 1].DateForecast)) {\r\n          var showAQILabel = maxAQI != -1;\r\n          srTodayAQI = srTodayAQI + showAQILabel;\r\n          if (maxAQI == -1) {\r\n            maxAQI = categoryToMidAQI[responseData[i].Category.Number];\r\n          }\r\n          var entry = {\r\n            DateForecast: responseData[i].DateForecast,\r\n            AQI: maxAQI,\r\n            ReportingArea: responseData[i].ReportingArea,\r\n            StateCode: responseData[i].StateCode,\r\n            ShowAQILabel: showAQILabel\r\n          };\r\n          data.push(entry);\r\n          maxAQI = -1;\r\n        }\r\n      }\r\n\r\n      //Test Data\r\n      //return [\r\n      //  {'DateForecast': \"2015-08-20\", 'AQI': 148},\r\n      //  {'DateForecast': \"2015-08-21\", 'AQI': 200},\r\n      //  {'DateForecast': \"2015-08-22\", 'AQI': 82},\r\n      //  {'DateForecast': \"2015-08-23\", 'AQI': 401}\r\n      //];\r\n      return data;\r\n    }\r\n\r\n    drawMessage('<p class=\"widget-note\">Loading...</p>');\r\n    var endpoint = Drupal.settings.basePath + 'my_air_quality_chart_view/api/forecast/zipCode/';\r\n    var yesterday = new Date();\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n    var params = {\r\n      format: 'application/json',\r\n      zipCode: zipCode,\r\n      date: formatDate(yesterday, '-'),\r\n      distance: 100\r\n    };\r\n\r\n    $.getJSON(endpoint, params, function(responseData) {\r\n      var data = parseData(responseData);\r\n      if (data.length > 0) {\r\n        drawChart(data, locationText);\r\n      }\r\n      else { // no data; show message\r\n        drawMessage('<p>Air quality information is not available for ' + locationText + '.</p>');\r\n      }\r\n    });\r\n  };\r\n})(jQuery);\r\n"]}