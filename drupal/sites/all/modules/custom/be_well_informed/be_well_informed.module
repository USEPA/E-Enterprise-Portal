<?php


/**
 * Implements hook_block_info().
 */
function be_well_informed_block_info() {
  $blocks = array();
  $blocks['be_well_informed'] = array(
    'info' => t('Be Well Informed Block'),
  );
  return $blocks;
}

/**
 * Implements hook_theme().
 * @see http://www.devdungeon.com/content/using-tpl-template-files-custom-drupal-7-modules
 */
function be_well_informed_theme() {
  return array(
    // Name to be called with theme(). theme('be_well_informed')
    'be_well_informed' => array(
      // Default variables
      'variables' => array(),
      // Which .tpl.php file to use my-cdx.tpl.php
      'template' => 'be-well-informed',
      'path' => drupal_get_path('module', 'be_well_informed') . '/templates'
    ),
    'be_well_informed_modal' => array(
      // Default variables
      'variables' => array(),
      // Which .tpl.php file to use be-well-informed-modal.tpl.php
      'template' => 'be-well-informed-modal',
      'path' => drupal_get_path('module', 'be_well_informed') . '/templates'
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function be_well_informed_block_view($delta = '') {
  $block = array();
  if ($delta == 'be_well_informed') {
    //good idea to check user perms here
    if (user_access('access content')) {
      drupal_add_js(drupal_get_path('module', 'be_well_informed') . '/js/parsley.js', [
        'scope' => 'footer',
        'preprocess' => TRUE,
        'group' => JS_LIBRARY,
        'type' => 'file',
        'cache' => TRUE,
        'requires_jquery' => TRUE
      ]);
      drupal_add_js(drupal_get_path('module', 'be_well_informed') . '/js/be_well_informed.js', [
        'scope' => 'footer',
        'preprocess' => TRUE,
        'group' => JS_LIBRARY,
        'type' => 'file',
        'cache' => TRUE,
        'requires_jquery' => TRUE
      ]);
      drupal_add_css(drupal_get_path('module', 'be_well_informed') . '/css/be_well_informed.css', [
        'preprocess' => TRUE,
        'group' => CSS_THEME
      ]);
      // Set Modal Template
      $modal_html = theme('be_well_informed_modal');
      drupal_add_js(array("be_well_informed" => ["modal"=> $modal_html]), 'setting');

      $block['subject'] = t('Be Well Informed');
      $block['content'] = theme('be_well_informed');
      return $block;
    }
  }
  return $block;
}

/**
 * Implements template_preprocess_hook for be-well-informed-modal.tpl.php.
 */
function template_preprocess_be_well_informed_modal(&$variables, $hook) {
  $variables['unit_types'] = [
    'mg/L',
    'μg/L',
    'ppm',
    'ppb',
    'gpg',
    'units',
    'CFU/100 mL',
    'MPN/100 mL',
    'mpn_100_ml'
  ];

  $variables['water_components'] = [
    [
      'name' => 'Arsenic',
      'machine_name' => 'arsenic',
      'symbol' => 'As',
      'default_unit_type' => 'mg/L',
      'validation' => ['required'],
      'unit_types' => ['mg/L', 'μg/L', 'ppm', 'ppb']
    ],
    [
      'name' => 'Chloride',
      'machine_name' => 'chloride',
      'symbol' => 'Cl',
      'default_unit_type' => 'mg/L',
      'validation' => ['required'],
      'unit_types' => ['mg/L', 'μg/L', 'ppm', 'ppb']
    ],
    [
      'name' => 'Copper',
      'machine_name' => 'copper',
      'symbol' => 'Cu',
      'default_unit_type' => 'mg/L',
      'validation' => ['required'],
      'unit_types' => ['mg/L', 'ppm']
    ],
    [
      'name' => 'Copper, Stagnant',
      'machine_name' => 'copperst',
      'symbol' => 'Cu',
      'default_unit_type' => 'mg/L',
      'validation' => ['required'],
      'unit_types' => ['mg/L', 'ppm']
    ],
    [
      'name' => 'Fluoride',
      'machine_name' => 'fluoride',
      'symbol' => 'F',
      'default_unit_type' => 'mg/L',
      'validation' => ['required'],
      'unit_types' => ['mg/L', 'ppm']
    ],
    [
      'name' => 'Hardness as CaCO3',
      'machine_name' => 'hardness',
      'symbol' => 'CaCO3',
      'symbol_test' => 'CaCO<span class="sub">3</span>',
      'default_unit_type' => 'mg/L',
      'validation' => ['required'],
      'unit_types' => ['mg/L', 'ppm', 'gpg']
    ],
    [
      'name' => 'Lead',
      'machine_name' => 'lead',
      'symbol' => 'Pb',
      'default_unit_type' => 'mg/L',
      'validation' => ['required'],
      'unit_types' => ['mg/L', 'ppm']
    ],
    [
      'name' => 'Lead, Stagnant',
      'machine_name' => 'leadst',
      'symbol' => 'Cl',
      'default_unit_type' => 'mg/L',
      'validation' => ['required'],
      'unit_types' => ['mg/L', 'ppm']
    ],
    [
      'name' => 'Iron',
      'machine_name' => 'iron',
      'symbol' => 'Cl',
      'default_unit_type' => 'mg/L',
      'validation' => ['required'],
      'unit_types' => ['mg/L', 'ppm']
    ],
    [
      'name' => 'Manganese',
      'machine_name' => 'manganese',
      'symbol' => 'Mn',
      'default_unit_type' => 'mg/L',
      'validation' => ['required'],
      'unit_types' => ['mg/L', 'ppm']
    ],
    [
      'name' => 'Nitrate-N',
      'machine_name' => 'nitrate',
      'symbol' => 'NO3',
      'symbol_text' => 'NO<span class="sub">3</span>',
      'default_unit_type' => 'mg/L',
      'validation' => ['required'],
      'unit_types' => ['mg/L', 'ppm']
    ],
    [
      'name' => 'Nitrite-N',
      'machine_name' => 'nitrite',
      'symbol' => 'NO2',
      'symbol_text' => 'NO<span class="sub">2</span>',
      'default_unit_type' => 'mg/L',
      'validation' => ['required'],
      'unit_types' => ['mg/L', 'ppm']
    ],
    [
      'name' => 'pH',
      'machine_name' => 'ph',
      'symbol' => 'ph',
      'default_unit_type' => 'unit',
      'validation' => ['required'],
      'unit_types' => ['units']
    ],
    [
      'name' => 'Sodium',
      'machine_name' => 'sodium',
      'symbol' => 'na',
      'default_unit_type' => 'mg/L',
      'validation' => ['required'],
      'unit_types' => ['mg/L', 'ppm']
    ]
  ];

  $variables['microbiology'] = [
    [
      'name' => 'Total Coliform',
      'machine_name' => 'totalcoliform',
      'default_unit_type' => 'CFU/100 mL',
      'validation' => ['required'],
      'unit_types' => ['CFU/100 mL', 'MPN/100 mL'],
      'radio_name' => 'Bac',
    ],
    [
      'name' => 'E. Coli',
      'machine_name' => 'ecolibacteria',
      'default_unit_type' => 'CFU/100 mL',
      'validation' => ['required'],
      'unit_types' => ['CFU/100 mL', 'MPN/100 mL'],
      'radio_name' => 'Ecoli',
    ],
  ];

  $variables['radionuclides'] = [
    [
      'name' => 'Radon',
      'machine_name' => 'radon',
      'symbol' => 'na',
      'default_unit_type' => 'pCi/L',
      'validation' => ['required'],
      'unit_types' => ['pCi/L']
    ],
    [
      'name' => 'Uranium',
      'machine_name' => 'uranium',
      'symbol' => 'U',
      'default_unit_type' => 'μg/L',
      'validation' => ['required'],
      'unit_types' => ['pCi/L', 'μg/L']
    ],
    [
      'name' => 'Gross Alpha',
      'machine_name' => 'grossalpha',
      'symbol' => '',
      'default_unit_type' => 'pCi/L',
      'validation' => ['required'],
      'unit_types' => ['pCi/L']
    ],
  ];

  $variables['cities'] = [ "Anonymous", "New England", "Acworth", "Albany", "Alexandria", "Allenstown", "Alstead", "Amherst", "Andover", "Antrim", "Ashland", "Atkinson", "Auburn", "Barnstead", "Barrington", "Bartlett", "Bath", "Bedford", "Belmont", "Bennington", "Benton", "Berlin", "Bethlehem", "Boscawen", "Bow", "Bradford", "Brentwood", "Bridgewater", "Bristol", "Brookfield", "Brookline", "Campton", "Canaan", "Candia", "Canterbury", "Carroll", "Center Harbor", "Charlestown", "Chatham", "Chester", "Chesterfield", "Chichester", "Claremont", "Clarksville", "Colebrook", "Columbia", "Concord", "Conway", "Cornish", "Croydon", "Dalton", "Danbury", "Danville", "Deerfield", "Deering", "Derry", "Dixville", "Dorchester", "Dover", "Dublin", "Dummer", "Dunbarton", "Durham", "East Kingston", "Easton", "Eaton", "Effingham", "Ellsworth", "Enfield", "Epping", "Epsom", "Errol", "Exeter", "Farmington", "Fitzwilliam", "Francestown", "Franconia", "Franklin", "Freedom", "Fremont", "Gilford", "Gilmanton", "Gilsum", "Goffstown", "Gorham", "Goshen", "Grafton", "Grantham", "Greenfield", "Greenland", "Greenville", "Groton", "Hampstead", "Hampton", "Hampton Falls", "Hancock", "Hanover", "Harrisville", "Hart's Location", "Haverhill", "Hebron", "Henniker", "Hill", "Hillsborough", "Hinsdale", "Holderness", "Hollis", "Hooksett", "Hopkinton", "Hudson", "Jackson", "Jaffrey", "Jefferson", "Keene", "Kensington", "Kingston", "Laconia", "Lancaster", "Landaff", "Langdon", "Lebanon", "Lee", "Lempster", "Lincoln", "Lisbon", "Litchfield", "Littleton", "Londonderry", "Loudon", "Lyman", "Lyme", "Lyndeborough", "Madbury", "Madison", "Manchester", "Marlborough", "Marlow", "Mason", "Meredith", "Merrimack", "Middleton", "Milan", "Milford", "Milton", "Monroe", "Mont Vernon", "Moultonborough", "Nashua", "Nelson", "New Boston", "Newbury", "New Castle", "New Durham", "Newfields", "New Hampton", "Newington", "New Ipswich", "New London", "Newmarket", "Newport", "Newton", "Northfield", "North Hampton", "Northumberland", "Northwood", "Orange", "Orford", "Ossipee", "Pelham", "Pembroke", "Peterborough", "Piermont", "Pittsburg", "Pittsfield", "Plainfield", "Plaistow", "Plymouth", "Portsmouth", "Randolph", "Raymond", "Richmond", "Rindge", "Rochester", "Rollinsford", "Roxbury", "Rumney", "Rye", "Salem", "Salisbury", "Sanbornton", "Sandown", "Sandwich", "Seabrook", "Sharon", "Shelburne", "Somersworth", "South Hampton", "Springfield", "Stark", "Stewartstown", "Stoddard", "Strafford", "Stratham", "Sugar Hill", "Sullivan", "Sunapee", "Surry", "Sutton", "Swanzey", "Tamworth", "Temple", "Thornton", "Tilton", "Troy", "Tuftonboro", "Unity", "Wakefield", "Walpole", "Warner", "Warren", "Washington", "Waterville Valley", "Weare", "Webster", "Wentworth", "West Chesterfield", "Westmoreland", "Whitefield", "Wilmot", "Wilton", "Winchester", "Windham", "Windsor", "Wolfeboro", "Woodstock"];

  $variables['prefix'] = 'ct100$MainContent$';
}