{"version":3,"sources":["waitUntilExists.js"],"names":["$","window","intervals","removeListener","selector","clearInterval","found","fn","waitUntilExists","handler","shouldRunHandlerOnce","isChild","this","$this","$elements","not","data","each","length","setInterval","jQuery"],"mappings":"CAAE,SAAUA,EAAGC,QAKf,GAAIC,cACAC,eAAiB,SAASC,UAEzBF,UAAUE,YAEbH,OAAOI,cAAcH,UAAUE,WAC/BF,UAAUE,UAAY,OAGpBE,MAAQ,uBAcZN,GAAEO,GAAGC,gBAAkB,SAASC,QAASC,qBAAsBC,SAE9D,GAAIP,UAAWQ,KAAKR,SAChBS,MAAQb,EAAEI,UACVU,UAAYD,MAAME,IAAI,WAAa,MAAOf,GAAEY,MAAMI,KAAKV,QA6B3D,OA3BgB,WAAZG,QAGHN,eAAeC,WAKfU,UAAUG,KAAKR,SAASO,KAAKV,OAAO,GAEhCI,sBAAwBG,MAAMK,OAIjCf,eAAeC,UAENO,UAITT,UAAUE,UAAYH,OAAOkB,YAAY,WAExCN,MAAML,gBAAgBC,QAASC,sBAAsB,IACnD,OAIEG,QAGNO,OAAQnB","file":"waitUntilExists.js","sourcesContent":[";(function ($, window) {\n  \n  \n// Waituntilexists function\n// Source: https://gist.github.com/PizzaBrandon/5709010\nvar intervals = {};\nvar removeListener = function(selector) {\n\n\tif (intervals[selector]) {\n\t\t\n\t\twindow.clearInterval(intervals[selector]);\n\t\tintervals[selector] = null;\n\t}\n};\nvar found = 'waitUntilExists.found';\n\n/**\n * @function\n * @property {object} jQuery plugin which runs handler function once specified\n *           element is inserted into the DOM\n * @param {function|string} handler \n *            A function to execute at the time when the element is inserted or \n *            string \"remove\" to remove the listener from the given selector\n * @param {bool} shouldRunHandlerOnce \n *            Optional: if true, handler is unbound after its first invocation\n * @example jQuery(selector).waitUntilExists(function);\n */\n \n$.fn.waitUntilExists = function(handler, shouldRunHandlerOnce, isChild) {\n\n\tvar selector = this.selector;\n\tvar $this = $(selector);\n\tvar $elements = $this.not(function() { return $(this).data(found); });\n\t\n\tif (handler === 'remove') {\n\t\t\n\t\t// Hijack and remove interval immediately if the code requests\n\t\tremoveListener(selector);\n\t}\n\telse {\n\n\t\t// Run the handler on all found elements and mark as found\n\t\t$elements.each(handler).data(found, true);\n\t\t\n\t\tif (shouldRunHandlerOnce && $this.length) {\n\t\t\t\n\t\t\t// Element was found, implying the handler already ran for all \n\t\t\t// matched elements\n\t\t\tremoveListener(selector);\n\t\t}\n\t\telse if (!isChild) {\n\t\t\t\n\t\t\t// If this is a recurring search or if the target has not yet been \n\t\t\t// found, create an interval to continue searching for the target\n\t\t\tintervals[selector] = window.setInterval(function () {\n\t\t\t\t\n\t\t\t\t$this.waitUntilExists(handler, shouldRunHandlerOnce, true);\n\t\t\t}, 500);\n\t\t}\n\t}\n\t\n\treturn $this;\n};\n \n}(jQuery, window));\n"]}