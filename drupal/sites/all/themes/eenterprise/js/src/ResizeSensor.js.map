{"version":3,"sources":["ResizeSensor.js"],"names":["this","ResizeSensor","element","callback","EventQueue","q","add","ev","push","i","j","call","length","getComputedStyle","prop","currentStyle","window","getPropertyValue","style","attachResizeEvent","resized","resizedAttached","resizeSensor","document","createElement","className","styleChild","cssText","innerHTML","appendChild","fixed","absolute","position","lastWidth","lastHeight","expand","childNodes","expandChild","shrink","reset","width","offsetWidth","height","offsetHeight","scrollLeft","scrollWidth","scrollTop","scrollHeight","changed","addEvent","el","name","cb","attachEvent","addEventListener","Object","prototype","toString","jQuery","Elements","detach","removeChild"],"mappings":"CAMA,WAUIA,KAAKC,aAAe,SAASC,EAASC,GAKlC,QAASC,KACLJ,KAAKK,KACLL,KAAKM,IAAM,SAASC,GAChBP,KAAKK,EAAEG,KAAKD,GAGhB,IAAIE,GAAGC,CACPV,MAAKW,KAAO,WACR,IAAKF,EAAI,EAAGC,EAAIV,KAAKK,EAAEO,OAAQH,EAAIC,EAAGD,IAClCT,KAAKK,EAAEI,GAAGE,QAUtB,QAASE,GAAiBX,EAASY,GAC/B,MAAIZ,GAAQa,aACDb,EAAQa,aAAaD,GACrBE,OAAOH,iBACPG,OAAOH,iBAAiBX,EAAS,MAAMe,iBAAiBH,GAExDZ,EAAQgB,MAAMJ,GAS7B,QAASK,GAAkBjB,EAASkB,GAChC,GAAKlB,EAAQmB,iBAGN,GAAInB,EAAQmB,gBAEf,WADAnB,GAAQmB,gBAAgBf,IAAIc,OAH5BlB,GAAQmB,gBAAkB,GAAIjB,GAC9BF,EAAQmB,gBAAgBf,IAAIc,EAMhClB,GAAQoB,aAAeC,SAASC,cAAc,OAC9CtB,EAAQoB,aAAaG,UAAY,eACjC,IAAIP,GAAQ,+GACRQ,EAAa,sCAEjBxB,GAAQoB,aAAaJ,MAAMS,QAAUT,EACrChB,EAAQoB,aAAaM,UACjB,4CAA8CV,EAAQ,iBACjCQ,EAAa,0DAEYR,EAAQ,iBACjCQ,EAAa,2CAEtCxB,EAAQ2B,YAAY3B,EAAQoB,eAEtBQ,MAAO,EAAGC,SAAU,GAAGlB,EAAiBX,EAAS,eACnDA,EAAQgB,MAAMc,SAAW,WAG7B,IAKIC,GAAWC,EALXC,EAASjC,EAAQoB,aAAac,WAAW,GACzCC,EAAcF,EAAOC,WAAW,GAChCE,EAASpC,EAAQoB,aAAac,WAAW,GAKzCG,GAJcD,EAAOF,WAAW,GAIxB,WACRC,EAAYnB,MAAMsB,MAAQL,EAAOM,YAAc,GAAK,KACpDJ,EAAYnB,MAAMwB,OAASP,EAAOQ,aAAe,GAAK,KACtDR,EAAOS,WAAaT,EAAOU,YAC3BV,EAAOW,UAAYX,EAAOY,aAC1BT,EAAOM,WAAaN,EAAOO,YAC3BP,EAAOQ,UAAYR,EAAOS,aAC1Bd,EAAY/B,EAAQuC,YACpBP,EAAahC,EAAQyC,cAGzBJ,IAEA,IAAIS,GAAU,WACN9C,EAAQmB,iBACRnB,EAAQmB,gBAAgBV,QAI5BsC,EAAW,SAASC,EAAIC,EAAMC,GAC1BF,EAAGG,YACHH,EAAGG,YAAY,KAAOF,EAAMC,GAE5BF,EAAGI,iBAAiBH,EAAMC,GAIlCH,GAASd,EAAQ,SAAU,YACnBjC,EAAQuC,YAAcR,GAAa/B,EAAQyC,aAAeT,IAC1Dc,IAEJT,MAGJU,EAASX,EAAQ,SAAS,YAClBpC,EAAQuC,YAAcR,GAAa/B,EAAQyC,aAAeT,IAC1Dc,IAEJT,MAIR,GAAI,mBAAqBgB,OAAOC,UAAUC,SAAS9C,KAAKT,IAChD,mBAAuBwD,SAAUxD,YAAmBwD,SACpD,mBAAuBC,WAAYzD,YAAmByD,UAG1D,IADA,GAAIlD,GAAI,EAAGC,EAAIR,EAAQU,OAChBH,EAAIC,EAAGD,IACVU,EAAkBjB,EAAQO,GAAIN,OAGlCgB,GAAkBjB,EAASC,EAG/BH,MAAK4D,OAAS,WACV3D,aAAa2D,OAAO1D,KAI5BF,KAAKC,aAAa2D,OAAS,SAAS1D,GAC5BA,EAAQoB,eACRpB,EAAQ2D,YAAY3D,EAAQoB,oBACrBpB,GAAQoB,mBACRpB,GAAQmB","file":"ResizeSensor.js","sourcesContent":["/**\r\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\r\n * directory of this distribution and at\r\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\r\n */\r\n;\r\n(function() {\r\n\r\n    /**\r\n     * Class for dimension change detection.\r\n     *\r\n     * @param {Element|Element[]|Elements|jQuery} element\r\n     * @param {Function} callback\r\n     *\r\n     * @constructor\r\n     */\r\n    this.ResizeSensor = function(element, callback) {\r\n        /**\r\n         *\r\n         * @constructor\r\n         */\r\n        function EventQueue() {\r\n            this.q = [];\r\n            this.add = function(ev) {\r\n                this.q.push(ev);\r\n            };\r\n\r\n            var i, j;\r\n            this.call = function() {\r\n                for (i = 0, j = this.q.length; i < j; i++) {\r\n                    this.q[i].call();\r\n                }\r\n            };\r\n        }\r\n\r\n        /**\r\n         * @param {HTMLElement} element\r\n         * @param {String}      prop\r\n         * @returns {String|Number}\r\n         */\r\n        function getComputedStyle(element, prop) {\r\n            if (element.currentStyle) {\r\n                return element.currentStyle[prop];\r\n            } else if (window.getComputedStyle) {\r\n                return window.getComputedStyle(element, null).getPropertyValue(prop);\r\n            } else {\r\n                return element.style[prop];\r\n            }\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Function}    resized\r\n         */\r\n        function attachResizeEvent(element, resized) {\r\n            if (!element.resizedAttached) {\r\n                element.resizedAttached = new EventQueue();\r\n                element.resizedAttached.add(resized);\r\n            } else if (element.resizedAttached) {\r\n                element.resizedAttached.add(resized);\r\n                return;\r\n            }\r\n\r\n            element.resizeSensor = document.createElement('div');\r\n            element.resizeSensor.className = 'resize-sensor';\r\n            var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: scroll; z-index: -1; visibility: hidden;';\r\n            var styleChild = 'position: absolute; left: 0; top: 0;';\r\n\r\n            element.resizeSensor.style.cssText = style;\r\n            element.resizeSensor.innerHTML =\r\n                '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' +\r\n                    '<div style=\"' + styleChild + '\"></div>' +\r\n                '</div>' +\r\n                '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' +\r\n                    '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' +\r\n                '</div>';\r\n            element.appendChild(element.resizeSensor);\r\n\r\n            if (!{fixed: 1, absolute: 1}[getComputedStyle(element, 'position')]) {\r\n                element.style.position = 'relative';\r\n            }\r\n\r\n            var expand = element.resizeSensor.childNodes[0];\r\n            var expandChild = expand.childNodes[0];\r\n            var shrink = element.resizeSensor.childNodes[1];\r\n            var shrinkChild = shrink.childNodes[0];\r\n\r\n            var lastWidth, lastHeight;\r\n\r\n            var reset = function() {\r\n                expandChild.style.width = expand.offsetWidth + 10 + 'px';\r\n                expandChild.style.height = expand.offsetHeight + 10 + 'px';\r\n                expand.scrollLeft = expand.scrollWidth;\r\n                expand.scrollTop = expand.scrollHeight;\r\n                shrink.scrollLeft = shrink.scrollWidth;\r\n                shrink.scrollTop = shrink.scrollHeight;\r\n                lastWidth = element.offsetWidth;\r\n                lastHeight = element.offsetHeight;\r\n            };\r\n\r\n            reset();\r\n\r\n            var changed = function() {\r\n                if (element.resizedAttached) {\r\n                    element.resizedAttached.call();\r\n                }\r\n            };\r\n\r\n            var addEvent = function(el, name, cb) {\r\n                if (el.attachEvent) {\r\n                    el.attachEvent('on' + name, cb);\r\n                } else {\r\n                    el.addEventListener(name, cb);\r\n                }\r\n            };\r\n\r\n            addEvent(expand, 'scroll', function() {\r\n                if (element.offsetWidth > lastWidth || element.offsetHeight > lastHeight) {\r\n                    changed();\r\n                }\r\n                reset();\r\n            });\r\n\r\n            addEvent(shrink, 'scroll',function() {\r\n                if (element.offsetWidth < lastWidth || element.offsetHeight < lastHeight) {\r\n                    changed();\r\n                }\r\n                reset();\r\n            });\r\n        }\r\n\r\n        if (\"[object Array]\" === Object.prototype.toString.call(element)\r\n            || ('undefined' !== typeof jQuery && element instanceof jQuery) //jquery\r\n            || ('undefined' !== typeof Elements && element instanceof Elements) //mootools\r\n            ) {\r\n            var i = 0, j = element.length;\r\n            for (; i < j; i++) {\r\n                attachResizeEvent(element[i], callback);\r\n            }\r\n        } else {\r\n            attachResizeEvent(element, callback);\r\n        }\r\n\r\n        this.detach = function() {\r\n            ResizeSensor.detach(element);\r\n        };\r\n    };\r\n\r\n    this.ResizeSensor.detach = function(element) {\r\n        if (element.resizeSensor) {\r\n            element.removeChild(element.resizeSensor);\r\n            delete element.resizeSensor;\r\n            delete element.resizedAttached;\r\n        }\r\n    };\r\n\r\n})();"]}