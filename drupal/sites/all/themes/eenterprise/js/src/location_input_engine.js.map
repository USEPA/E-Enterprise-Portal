{"version":3,"sources":["location_input_engine.js"],"names":["$","Drupal","behaviors","locationInputEngine","attach","context","settings","lookUpLocation","location_input","deferred","Deferred","error_message","error","location_data_return","ajax","url","basePath","type","data","location","initial_login","success","parsed_data","parseJSON","name_city_state","city_count","city","length","zip","city_select","zip_codes","city_attr","zip_attr","each","index","zip_array","state","zip_select","previous_city","zip_code","zip_obj","reject","resolve","promise","jQuery"],"mappings":"CAAA,SAAWA,GACPC,OAAOC,UAAUC,qBACbC,OAAQ,SAAUC,EAASC,GAGvBA,EAASH,qBACLI,eAAgB,SAAUC,GAEtB,GAAIC,GAAWT,EAAEU,WACbC,EAAgB,GAChBC,GAAQ,EACRC,IA8EJ,OA5EAb,GAAEc,MACEC,IAAKd,OAAOK,SAASU,SAAW,uBAChCC,KAAM,OACNC,MAAOC,SAAUX,EAAgBY,eAAe,GAChDC,QAAS,SAAUH,GACf,GAAII,GAActB,EAAEuB,UAAUL,EAC9B,IAAII,EAAYE,gBAAiB,CAC7B,GAAIC,GAAaH,EAAYI,KAAKC,MAElC,IADAd,EAAqBa,KAAOJ,EAAYI,KACtB,GAAdD,EACAd,EAAgB,+CAChBC,GAAQ,MACL,IAAkB,GAAda,EACPZ,EAAqBe,IAAMN,EAAYM,IACvCf,EAAqBgB,aAAc,EACnChB,EAAqBiB,WAAY,EACjCjB,EAAqBkB,UAAYT,EAAYS,UAC7ClB,EAAqBmB,SAAWV,EAAYU,aACzC,CACH,GACIH,IADgBP,EAAYS,UACd,sCAClBlB,GAAqBe,IAAMN,EAAYM,IACvC5B,EAAEiC,KAAKX,EAAYI,KAAM,SAAUQ,EAAOR,GACtCG,EAAcA,EAAc,kBAAoBH,EAAO,KAAOA,EAAO,cAEzEG,GAA4B,YAC5BhB,EAAqBgB,YAAcA,EACnChB,EAAqBiB,WAAY,EACjCjB,EAAqBkB,UAAYT,EAAYS,UAC7ClB,EAAqBmB,SAAWV,EAAYU,cAKhD,IADAnB,EAAqBsB,UAAYb,EAAYa,UACA,GAAzCtB,EAAqBsB,UAAUR,OAC/BhB,EAAgB,yGAChBC,GAAQ,MAEP,CACDC,EAAqBa,KAAOJ,EAAYI,KACxCb,EAAqBuB,MAAQd,EAAYc,KACzC,IAAIC,GAAa,uCACbC,EAAgB,EAEhBhB,GAAYU,UACZhC,EAAEiC,KAAKX,EAAYU,SAAU,SAAUO,EAAUC,GACzCA,EAAQd,MAAQY,GAAsC,IAArBhB,EAAYc,QAM7CC,EAAaA,EAAa,6BAA+BG,EAAQd,KAAO,YACxEY,EAAgBE,EAAQd,MAE5BW,EAAaA,EAAa,kBAAoBE,EAAW,KAAOA,EAAW,cAGnFF,GAA0B,YAC1BxB,EAAqBwB,WAAaA,EAClCxB,EAAqBiB,WAAY,EACjCjB,EAAqBkB,UAAYT,EAAYS,UAC7ClB,EAAqBmB,SAAWV,EAAYU,SAIpDnB,EAAqBD,MAAQA,EAC7BC,EAAqBF,cAAgBA,EAEjCC,EACAH,EAASgC,OAAO5B,GAEhBJ,EAASiC,QAAQ7B,MAItBJ,EAASkC,eAKjCC","file":"location_input_engine.js","sourcesContent":["(function ($) {\r\n    Drupal.behaviors.locationInputEngine = {\r\n        attach: function (context, settings) {\r\n            // takes zip, or city, state\r\n            // returns location data object\r\n            settings.locationInputEngine = {\r\n                lookUpLocation: function (location_input) {\r\n\r\n                    var deferred = $.Deferred();\r\n                    var error_message = '';\r\n                    var error = false;\r\n                    var location_data_return = {};\r\n\r\n                    $.ajax({\r\n                        url: Drupal.settings.basePath + 'return_location_data',\r\n                        type: 'POST',\r\n                        data: {location: location_input, initial_login: true},\r\n                        success: function (data) {\r\n                            var parsed_data = $.parseJSON(data);\r\n                            if (parsed_data.name_city_state) { // zip code entered, returned city/state\r\n                                var city_count = parsed_data.city.length;\r\n                                location_data_return.city = parsed_data.city;\r\n                                if (city_count == 0) { //Unable to find data for that zip\r\n                                    error_message = 'The ZIP code you entered could not be found.';\r\n                                    error = true;\r\n                                } else if (city_count == 1) {\r\n                                    location_data_return.zip = parsed_data.zip;\r\n                                    location_data_return.city_select = false;\r\n                                    location_data_return.zip_codes = false; // not returning list of zip codes\r\n                                    location_data_return.city_attr = parsed_data.city_attr;\r\n                                    location_data_return.zip_attr = parsed_data.zip_attr;\r\n                                } else {\r\n                                    var all_city_attr = parsed_data.city_attr;\r\n                                    var city_select = '<select id=\"zip-lookup-city-state\">';\r\n                                    location_data_return.zip = parsed_data.zip;\r\n                                    $.each(parsed_data.city, function (index, city) {\r\n                                        city_select = city_select + '<option value=\"' + city + '\">' + city + '</option>';\r\n                                    });\r\n                                    city_select = city_select + '</select>';\r\n                                    location_data_return.city_select = city_select;\r\n                                    location_data_return.zip_codes = false; // not returning list of zip codes\r\n                                    location_data_return.city_attr = parsed_data.city_attr;\r\n                                    location_data_return.zip_attr = parsed_data.zip_attr;\r\n                                }\r\n                            }\r\n                            else {\r\n                                location_data_return.zip_array = parsed_data.zip_array;\r\n                                if (location_data_return.zip_array.length == 0) {\r\n                                    error_message = 'No ZIP codes returned. Are you sure the city and state code were entered correctly? (e.g., Durham, NC)';\r\n                                    error = true;\r\n                                }\r\n                                else {\r\n                                    location_data_return.city = parsed_data.city;\r\n                                    location_data_return.state = parsed_data.state;\r\n                                    var zip_select = '<select id=\"city-state-lookup-zips\">';\r\n                                    var previous_city = \"\";\r\n                                    var count = 0;\r\n                                    if (parsed_data.zip_attr) {\r\n                                        $.each(parsed_data.zip_attr, function (zip_code, zip_obj) {\r\n                                            if (zip_obj.city != previous_city && parsed_data.state == \"\") {\r\n                                                //if (count == 0) {\r\n                                                //    zip_select = zip_select + '<option value=\"\" disabled selected>' + zip_obj.city + '</option>';\r\n                                                //    count = count + 1;\r\n                                                //}\r\n                                                //else\r\n                                                zip_select = zip_select + '<option value=\"\" disabled>' + zip_obj.city + '</option>';\r\n                                                previous_city = zip_obj.city;\r\n                                            }\r\n                                            zip_select = zip_select + '<option value=\"' + zip_code + '\">' + zip_code + '</option>';\r\n                                        });\r\n                                    }\r\n                                    zip_select = zip_select + '</select>';\r\n                                    location_data_return.zip_select = zip_select;\r\n                                    location_data_return.zip_codes = true;\r\n                                    location_data_return.city_attr = parsed_data.city_attr;\r\n                                    location_data_return.zip_attr = parsed_data.zip_attr;\r\n                                }\r\n                            }\r\n\r\n                            location_data_return.error = error;\r\n                            location_data_return.error_message = error_message;\r\n\r\n                            if (error) {\r\n                                deferred.reject(location_data_return);\r\n                            } else {\r\n                                deferred.resolve(location_data_return);\r\n                            }\r\n                        }\r\n                    });\r\n                    return deferred.promise();\r\n                }\r\n            }\r\n        }\r\n    }\r\n})(jQuery);\r\n"]}