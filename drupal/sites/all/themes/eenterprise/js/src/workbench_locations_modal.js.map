{"version":3,"sources":["workbench_locations_modal.js"],"names":["$","document","ready","locationSelect","zipcode","name","max_allowed_locations","trim","select_title","$location_select","find","length","$new_option","attr","remove_option","remove","after","dialog","prop","trigger","matchSelectToRadio","setlocation_title","citystate","split","selectzip","select_radio","previous_selection","cancelling_input","modal","autoOpen","width","height","dialogClass","beforeClose","buttons","text","class","click","selection_array","val","selection_value","selection_name","removeClass","focus","on","e","preventDefault","addClass","each","radioInput","this","is","animate","scrollTop","position","top","parent","zip_val","location_name","post","Drupal","settings","basePath","zip","change","container","scroll_to","offset","window","resize","my","at","of","jQuery","fn","center","css","Math","max","outerHeight","outerWidth","scrollLeft","closest"],"mappings":"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","file":"workbench_locations_modal.js","sourcesContent":["(function ($) {\r\n\r\n  $(document).ready(function(){\r\n    // Instantiate previous with primary location\r\n    var previous_selection = $('#location-select option:selected');\r\n    // Flag for hitting cancel in modal, default is true\r\n    var cancelling_input = true;\r\n  \r\n    // If View all cities (#locations-modal) link exists, then instantiate dialog\r\n    // View all cities is added via eenterprise_utility.module\r\n    if ($('#locations-modal').length > 0) {\r\n      $('#dialog-all-locations').dialog({\r\n        modal: true,\r\n        autoOpen: false,\r\n        width: 'auto',\r\n        height: 400,\r\n        dialogClass: \"locations-modal\",\r\n        beforeClose: function() {\r\n          if (cancelling_input) {\r\n            var $location_select = $('#location-select');\r\n            // Select previously selected value by recapturing elements from previous selection elem\r\n            var select_title = previous_selection.attr('title');\r\n            $location_select.find('option[title=\"' + select_title + '\"]').prop('selected', 'selected');\r\n            $location_select.trigger('change');\r\n          } else { // Reset canceling input\r\n            cancelling_input = true;\r\n          }\r\n        },\r\n        buttons: [\r\n          {\r\n            text: 'Update',\r\n            class: ' usa-button',\r\n            click: function() {\r\n              cancelling_input = false;\r\n              var selection_array = $(':radio[name=location-radio]:checked').val().split('|');\r\n              var selection_value = selection_array[0];\r\n              var selection_name = selection_array[1];\r\n              locationSelect(selection_value, selection_name);              \r\n            }\r\n          },\r\n          {  text : \"Cancel\",\r\n            class: ' usa-button-outline',\r\n            click: function() {\r\n              $('#dialog-all-locations').dialog('close');\r\n              $('body').removeClass('modal-open');\r\n              $('#location-select').focus();\r\n            }  \r\n          }\r\n        ]\r\n      });\r\n      \r\n    }\r\n    \r\n    function locationSelect(zipcode, name) {\r\n      var max_allowed_locations =  9;\r\n      // If selected from modal and exists in select box change value\r\n      // Searching via select TITLE, not VALUE\r\n      name = $.trim(name);\r\n      var select_title = name + ' (' + zipcode + ')';\r\n      var $location_select = $('#location-select');\r\n      if ($location_select.find('option[title=\"' + select_title + '\"]').length > 0) {\r\n        //  Using first in case there are ever duplicates\r\n      }\r\n      else { // add value to select, remove last select value\r\n        var $new_option = $(\"<option title='\" + select_title + \"' value='\" + zipcode + \"'>\" + name + \" (\" + zipcode + \")</option>\");\r\n        // If last option isn't default location, remove it\r\n        // Otherwise, remove second to last\r\n        var $check_last_option = $location_select.find('option:nth-child(' + max_allowed_locations + ')');\r\n        if ($location_select.find('option:nth-child(9)').attr('data-ee-location') == 'primary') {\r\n          var remove_option = max_allowed_locations - 1;\r\n          $location_select.find('option:nth-child(' + remove_option + ')').remove();\r\n        }\r\n        else {\r\n        $location_select.find('option:nth-child(' + max_allowed_locations + ')').remove();\r\n        }\r\n        // Alphabetically place select option. Because already alphabetical, if not in\r\n        // select drop down, just make last choice (position 9)\r\n        $location_select.find('option:nth-child(' + (max_allowed_locations - 1) + ')').after($new_option);\r\n      }\r\n      $('#dialog-all-locations').dialog('close');\r\n      $location_select.find('option[title=\"' + select_title + '\"]').prop('selected', 'selected');      \r\n      $location_select.trigger('change');\r\n    }\r\n    \r\n    // Update Session\r\n    $('body').on('change', '#location-select', function(e) {\r\n      var setlocation_title = previous_selection.attr('title');\r\n      if ($('#location-select option:selected').text() == 'Show more...') {\r\n        e.preventDefault();\r\n        $('body').addClass('modal-open');\r\n        matchSelectToRadio(setlocation_title); // e.g., Centreville, VA (20121)        \r\n        $('#dialog-all-locations').dialog('open');\r\n        $('#dialog-all-locations :radio[name=location-radio]').each(function() {\r\n          var radioInput = $(this);\r\n          if(radioInput.is(':checked')) {\r\n            $('#dialog-all-locations').animate({\r\n              scrollTop: radioInput.position().top\r\n            }, 1500);\r\n          }\r\n        });\r\n        $('#dialog-all-locations').parent().focus();\r\n      }\r\n      else {\r\n        previous_selection = $('#location-select option:selected');\r\n        var zip_val = $(this).val();\r\n        var location_name = $(this).find('option:selected').text();\r\n        location_name = location_name.split('(')[0]; // ignore zip code\r\n        location_name = $.trim(location_name); // trim any leading, trailing whitespace.\r\n        $('input[type=radio][id=\"' + zip_val + '|' + location_name + '\"]').prop('checked', true);\r\n\t\t\t$.post(Drupal.settings.basePath + \"default_location_zip\", {zip: zip_val, name: location_name});\r\n      }\r\n    });\r\n  \r\n\t\t$(':radio[name=location-radio]').change(function() {\r\n\t\t\tvar container = $('#dialog-all-locations');\r\n\t\t\tvar scroll_to = $(this);\r\n\t\t\tcontainer.scrollTop(scroll_to.offset().top - container.offset().top + container.scrollTop());\r\n\t\t});    \r\n  \r\n    // Select title = city, state (zip) (e.g., Chicago, IL (60660))\r\n    // Dialog radio buttons use id and value = zip|city, state (e.g., 60660|Chicago, IL)\r\n    function matchSelectToRadio(setlocation_title) {\r\n      var citystate = setlocation_title.split('(')[0];\r\n      var selectzip = setlocation_title.split('(')[1];\r\n      selectzip = selectzip.split(')')[0];\r\n      var select_radio = selectzip + '|' + citystate;\r\n      \r\n      $('input[type=radio][id=\"' + select_radio + '\"]').prop('checked', true);\r\n      \r\n    }\r\n  \r\n    $(window).resize(function(){\r\n      $( \"#dialog-all-locations\" ).dialog( \"option\", \"position\", { my: \"center\", at: \"center\", of: window } );\r\n    });\r\n  \r\n  \r\n    /// Make prog-track and to do list dialogs responsive  \r\n    jQuery.fn.center = function () {\r\n      this.css(\"position\",\"absolute\");\r\n      this.css(\"top\", Math.max(0, (($(window).height() - $(this).outerHeight()) / 2) +\r\n      $(window).scrollTop()) + \"px\");\r\n      this.css(\"left\", Math.max(0, (($(window).width() - $(this).outerWidth()) / 2) +\r\n      $(window).scrollLeft()) + \"px\");         return this;\r\n    }\r\n    $(window).resize(function () {\r\n      var dialog = $('#ui-id-1').closest('.ui-dialog');\r\n      if($(window).width() < 900) {\r\n        dialog.css('width', 'auto');\r\n      }\r\n      else {\r\n        dialog.css('width', 900);\r\n      }\r\n      dialog.center();\r\n    });\r\n  });\r\n\r\n})(jQuery);\r\n"]}