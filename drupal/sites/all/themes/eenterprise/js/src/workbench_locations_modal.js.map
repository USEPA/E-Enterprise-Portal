{"version":3,"sources":["workbench_locations_modal.js"],"names":["$","document","ready","locationSelect","zipcode","name","max_allowed_locations","trim","select_title","$location_select","find","length","$new_option","attr","remove_option","remove","after","dialog","prop","trigger","matchSelectToRadio","setlocation_title","citystate","split","selectzip","select_radio","previous_selection","cancelling_input","modal","autoOpen","width","height","dialogClass","create","event","ui","hasClass","removeClass","beforeClose","buttons","text","class","click","selection_array","val","selection_value","selection_name","focus","on","e","preventDefault","addClass","each","radioInput","this","is","animate","scrollTop","position","top","parent","zip_val","location_name","post","Drupal","settings","basePath","zip","change","container","scroll_to","offset","window","resize","my","at","of","jQuery","fn","center","css","Math","max","outerHeight","outerWidth","scrollLeft","closest"],"mappings":"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","file":"workbench_locations_modal.js","sourcesContent":["(function ($) {\n\n  $(document).ready(function(){\n    // Instantiate previous with primary location\n    var previous_selection = $('#location-select option:selected');\n    // Flag for hitting cancel in modal, default is true\n    var cancelling_input = true;\n  \n    // If View all cities (#locations-modal) link exists, then instantiate dialog\n    // View all cities is added via eenterprise_utility.module\n    if ($('#locations-modal').length > 0) {\n      $('#dialog-all-locations')\n        .dialog({\n          modal: true,\n          autoOpen: false,\n          width: 'auto',\n          height: 400,\n          dialogClass: \"locations-modal\",\n          create: function( event, ui ) {\n            if ($('#dialog-all-locations fieldset').hasClass('hidden-at-start')) {\n              $('#dialog-all-locations fieldset').removeClass('hidden-at-start');              \n            }\n          },\n          beforeClose: function() {\n            if (cancelling_input) {\n              var $location_select = $('#location-select');\n              // Select previously selected value by recapturing elements from previous selection elem\n              var select_title = previous_selection.attr('title');\n              $location_select.find('option[title=\"' + select_title + '\"]').prop('selected', 'selected');\n              $location_select.trigger('change');\n            } else { // Reset canceling input\n              cancelling_input = true;\n            }\n          },\n          buttons: [\n            {\n              text: 'Update',\n              class: ' usa-button',\n              click: function() {\n                cancelling_input = false;\n                var selection_array = $(':radio[name=location-radio]:checked').val().split('|');\n                var selection_value = selection_array[0];\n                var selection_name = selection_array[1];\n                locationSelect(selection_value, selection_name);              \n              }\n            },\n            {  text : \"Cancel\",\n              class: ' usa-button-outline',\n              click: function() {\n                $('#dialog-all-locations').dialog('close');\n                $('body').removeClass('modal-open');\n                $('#location-select').focus();\n              }  \n            }\n          ]\n        });\n    }\n    \n    function locationSelect(zipcode, name) {\n      var max_allowed_locations =  9;\n      // If selected from modal and exists in select box change value\n      // Searching via select TITLE, not VALUE\n      name = $.trim(name);\n      var select_title = name + ' (' + zipcode + ')';\n      var $location_select = $('#location-select');\n      if ($location_select.find('option[title=\"' + select_title + '\"]').length > 0) {\n        //  Using first in case there are ever duplicates\n      }\n      else { // add value to select, remove last select value\n        var $new_option = $(\"<option title='\" + select_title + \"' value='\" + zipcode + \"'>\" + name + \" (\" + zipcode + \")</option>\");\n        // If last option isn't default location, remove it\n        // Otherwise, remove second to last\n        var $check_last_option = $location_select.find('option:nth-child(' + max_allowed_locations + ')');\n        if ($location_select.find('option:nth-child(9)').attr('data-ee-location') == 'primary') {\n          var remove_option = max_allowed_locations - 1;\n          $location_select.find('option:nth-child(' + remove_option + ')').remove();\n        }\n        else {\n        $location_select.find('option:nth-child(' + max_allowed_locations + ')').remove();\n        }\n        // Alphabetically place select option. Because already alphabetical, if not in\n        // select drop down, just make last choice (position 9)\n        $location_select.find('option:nth-child(' + (max_allowed_locations - 1) + ')').after($new_option);\n      }\n      $('#dialog-all-locations').dialog('close');\n      $location_select.find('option[title=\"' + select_title + '\"]').prop('selected', 'selected');      \n      $location_select.trigger('change');\n    }\n    \n    // Update Session\n    $('body').on('change', '#location-select', function(e) {\n      var setlocation_title = previous_selection.attr('title');\n      if ($('#location-select option:selected').text() == 'Show more...') {\n        e.preventDefault();\n        $('body').addClass('modal-open');\n        matchSelectToRadio(setlocation_title); // e.g., Centreville, VA (20121)        \n        $('#dialog-all-locations').dialog('open');\n        $('#dialog-all-locations :radio[name=location-radio]').each(function() {\n          var radioInput = $(this);\n          if(radioInput.is(':checked')) {\n            $('#dialog-all-locations').animate({\n              scrollTop: radioInput.position().top\n            }, 1500);\n          }\n        });\n        $('#dialog-all-locations').parent().focus();\n      }\n      else {\n        previous_selection = $('#location-select option:selected');\n        var zip_val = $(this).val();\n        var location_name = $(this).find('option:selected').text();\n        location_name = location_name.split('(')[0]; // ignore zip code\n        location_name = $.trim(location_name); // trim any leading, trailing whitespace.\n        $('input[type=radio][id=\"' + zip_val + '|' + location_name + '\"]').prop('checked', true);\n\t\t\t$.post(Drupal.settings.basePath + \"default_location_zip\", {zip: zip_val, name: location_name});\n      }\n    });\n  \n\t\t$(':radio[name=location-radio]').change(function() {\n\t\t\tvar container = $('#dialog-all-locations');\n\t\t\tvar scroll_to = $(this);\n\t\t\tcontainer.scrollTop(scroll_to.offset().top - container.offset().top + container.scrollTop());\n\t\t});    \n  \n    // Select title = city, state (zip) (e.g., Chicago, IL (60660))\n    // Dialog radio buttons use id and value = zip|city, state (e.g., 60660|Chicago, IL)\n    function matchSelectToRadio(setlocation_title) {\n      var citystate = setlocation_title.split('(')[0];\n      var selectzip = setlocation_title.split('(')[1];\n      selectzip = selectzip.split(')')[0];\n      var select_radio = selectzip + '|' + citystate;      \n      $('input[type=radio][id=\"' + select_radio + '\"]').prop('checked', true);\n      \n    }\n\n    $(window).resize(function(){\n      $( \"#dialog-all-locations\" ).dialog( \"option\", \"position\", { my: \"center\", at: \"center\", of: window } );\n    });\n  \n  \n    /// Make prog-track and to do list dialogs responsive  \n    jQuery.fn.center = function () {\n      this.css(\"position\",\"absolute\");\n      this.css(\"top\", Math.max(0, (($(window).height() - $(this).outerHeight()) / 2) +\n      $(window).scrollTop()) + \"px\");\n      this.css(\"left\", Math.max(0, (($(window).width() - $(this).outerWidth()) / 2) +\n      $(window).scrollLeft()) + \"px\");         return this;\n    }\n    $(window).resize(function () {\n      var dialog = $('#dialog-all-locations').closest('.ui-dialog');\n      if($(window).width() < 900) {\n        dialog.css('width', 'auto');\n      }\n      else {\n        dialog.css('width', 900);\n      }\n      dialog.center();\n    });\n  });\n\n})(jQuery);\n"]}