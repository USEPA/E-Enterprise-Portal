{"version":3,"sources":["mobile-menu.js"],"names":["$","Drupal","behaviors","mobileMenu","attach","context","settings","hasClass","$mobileLinks","$mainNav","$secondaryNav","$newMainMenu","find","clone","$newSecondaryMenu","attr","each","this","remove","ee_guest","length","$guestMenu","prop","class","append","wrap","guestMenuAdd","basePath","ee_user","menuToClone","addWorkbench","prepend","$newuserMenu","otherUser","appendTo","addClass","$mobileMenuWrapper","$mobileMenuLinks","on","toggleEvent","stopImmediatePropagation","preventDefault","toggleClass","removeClass","removeAttr","jQuery"],"mappings":"CAAA,SAAWA,GAGXC,OAAOC,UAAUC,YACfC,OAAQ,SAASC,EAASC,GACxB,IAAKN,EAAE,qBAAqBO,SAAS,uBAAwB,CAG3D,GAAIC,GAAeR,EAAE,qBACjBS,EAAWT,EAAE,aACbU,EAAgBV,EAAE,kBAClBW,EAAeF,EAASG,KAAK,SAASC,QACtCC,EAAoBJ,EAAcE,KAAK,SAASC,OAcpD,IAXAF,EAAaI,KAAK,QAAS,QAAQH,KAAK,MAAMI,KAAK,WACjDhB,EAAEiB,MAAMF,KAAK,QAAS,UAExBJ,EAAaC,KAAK,MAAMM,SAExBJ,EAAkBC,KAAK,QAAS,QAAQH,KAAK,MAAMI,KAAK,WACtDhB,EAAEiB,MAAMF,KAAK,QAAS,UAExBD,EAAkBF,KAAK,MAAMM,SAGzBjB,OAAOK,SAASa,SAClB,GAAInB,EAAE,iCAAiCoB,OAAS,EAAI,CAClD,GAAIC,GAAarB,EAAE,uCAAuCa,QAAQS,MAAMC,MAAO,YAC/EZ,GAAaa,OAAOH,GACpBV,EAAaC,KAAK,aAAaa,KAAK,mCAEjC,CACH,GAAIC,GAAe1B,EAAE,mDAAqDC,OAAOK,SAASqB,SAAW,oEAAsE1B,OAAOK,SAASqB,SAAW,mDAClMhB,GAAe,EACjBA,EAAaa,OAAOE,GAGpB1B,EAAE,qBAAqBwB,OAAOE,OAK/B,IAAIzB,OAAOK,SAASsB,QAAS,CAChC,GAAIC,GAAc,EAClB,IAAI7B,EAAE,iCAAiCoB,OAAS,EAC9CS,EAAc,0CAEX,IAAI7B,EAAE,iCAAiCoB,OAAS,EACnDS,EAAc,oCAEX,IAA6B,GAAzB7B,EAAE,aAAaoB,OAAa,CACnC,GAAIU,GAAe,sDACnBhB,GAAkBiB,QAAQD,GAE5B,GAAIE,GAAehC,EAAE6B,GAAahB,QAAQS,MAAMC,MAAO,YACvDZ,GAAaa,OAAOQ,GACpBrB,EAAaC,KAAK,aAAaa,KAAK,mCAGjC,CACHd,EAAeX,EAAE,oBACjB,IAAIiC,GAAYjC,EAAE,mDAAqDC,OAAOK,SAASqB,SAAW,iFAAmF1B,OAAOK,SAASqB,SAAW,wFAA0F1B,OAAOK,SAASqB,SAAW,8EAAgF1B,OAAOK,SAASqB,SAAW,2CAChbhB,GAAaa,OAAOS,GAGtBtB,EAAauB,SAAS1B,GACtBM,EAAkBoB,SAAS1B,GAC3BR,EAAE,qBAAqBmC,SAAS,uBAGlC,GAAIC,GAAqBpC,EAAE,eAAeY,KAAK,qBAC3CyB,EAAmBD,EAAmBxB,KAAK,IAE/CyB,GAAiBtB,KAAK,YAAY,GAElCf,EAAE,sBAAsBsC,GAAG,QAAS,SAASC,GAC3CA,EAAYC,2BACZD,EAAYE,iBACZzC,EAAE,sBAAsB0C,YAAY,sBAEhCN,EAAmB7B,SAAS,mBAC9B8B,EAAiBtB,KAAK,YAAY,GAClCf,EAAE,qBAAqB2C,YAAY,oBAGnCN,EAAiBO,WAAW,YAC5B5C,EAAE,qBAAqBmC,SAAS,wBAMrCU","file":"mobile-menu.js","sourcesContent":["(function ($) {\r\n\r\n// Convert main menu into a mobile menu and move original menu.\r\nDrupal.behaviors.mobileMenu = {\r\n  attach: function(context, settings) {\r\n    if (!$('.mobile-nav_links').hasClass('mobilenav-processed')) {\r\n      \r\n      // Create mobile menu container, create mobile bar, and clone the main menu.\r\n      var $mobileLinks = $('.mobile-nav_links');\r\n      var $mainNav = $('.main-nav');\r\n      var $secondaryNav = $('.secondary-nav');\r\n      var $newMainMenu = $mainNav.find('.menu').clone();\r\n      var $newSecondaryMenu = $secondaryNav.find('.menu').clone();\r\n  \r\n      // Insert the cloned menus into the mobile menu container.\r\n      $newMainMenu.attr('class', 'menu').find('ul').each(function() {\r\n        $(this).attr('class', 'menu');\r\n      });\r\n      $newMainMenu.find('ul').remove();\r\n  \r\n      $newSecondaryMenu.attr('class', 'menu').find('ul').each(function() {\r\n        $(this).attr('class', 'menu');\r\n      });\r\n      $newSecondaryMenu.find('ul').remove();\r\n      \r\n      // If the user is a guest user, then show them the FAQs, Login options\r\n      if (Drupal.settings.ee_guest) {\r\n        if ($('.block--login-from-guest-page').length > 0 ) {\r\n          var $guestMenu = $('.block--login-from-guest-page div a').clone().prop({class: \"newlinks\"});\r\n          $newMainMenu.append($guestMenu);\r\n          $newMainMenu.find('.newlinks').wrap('<li class=\"menu-item\"></li>');\r\n        }\r\n        else {\r\n          var guestMenuAdd = $('<ul class=\"menu\"><li class=\"menu-item\"><a href=\"' + Drupal.settings.basePath + 'faqs\" id=\"faqs-link\">FAQs</a></li><li class=\"menu-item\"><a href=\"' + Drupal.settings.basePath + 'guest_bye\" id=\"guest-login\">Log in</a></li></ul>');\r\n          if ($newMainMenu > 0) {\r\n            $newMainMenu.append(guestMenuAdd);\r\n          }\r\n          else {\r\n            $('.mobile-nav_links').append(guestMenuAdd);\r\n          }\r\n        }\r\n      }\r\n      // If the user isn't logged in and is viewing FAQs / Release Notes pages\r\n      else if (Drupal.settings.ee_user) {\r\n        var menuToClone = '';\r\n        if ($('.block--login-from-guest-page').length > 0 ) {\r\n          menuToClone = '.block--login-from-guest-page div a';\r\n        }\r\n        else if ($('.block--ee-bridge-login div a').length > 0) {\r\n          menuToClone = '.block--ee-bridge-login div a';\r\n        }\r\n        else if ($('.main-nav').length == 0) {\r\n          var addWorkbench = '<li class=\"menu-item\"><a href=\"/\">Workbench</a></li>';\r\n          $newSecondaryMenu.prepend(addWorkbench);\r\n        }\r\n        var $newuserMenu = $(menuToClone).clone().prop({class: \"newlinks\"});\r\n        $newMainMenu.append($newuserMenu);\r\n        $newMainMenu.find('.newlinks').wrap('<li class=\"menu-item\"></li>');\r\n      }\r\n      // If user is not a Guest user or an authenticated non-guest user\r\n      else {\r\n        $newMainMenu = $('.mobile-nav_links');\r\n        var otherUser = $('<ul class=\"menu\"><li class=\"menu-item\"><a href=\"' + Drupal.settings.basePath + 'bridge-landing\" id=\"user-login\">Log in</a></li><li class=\"menu-item\"><a href=\"' + Drupal.settings.basePath + 'guest_login\" id=\"guest-login\">Browse as Guest</a></li><li class=\"menu-item\"><a href=\"' + Drupal.settings.basePath + 'new-users\" id=\"new-users\">New User?</a></li><li class=\"menu-item\"><a href=\"' + Drupal.settings.basePath + 'faqs\" id=\"faqs-link\" >FAQs</a></li></ul>');\r\n        $newMainMenu.append(otherUser);\r\n      }\r\n      \r\n      $newMainMenu.appendTo($mobileLinks);\r\n      $newSecondaryMenu.appendTo($mobileLinks); \r\n      $('.mobile-nav_links').addClass('mobilenav-processed');\r\n    } \r\n    // Open/Close mobile menu when menu button is clicked.\r\n    var $mobileMenuWrapper = $('.mobile-nav').find('.mobile-nav_links');\r\n    var $mobileMenuLinks = $mobileMenuWrapper.find('a');\r\n\r\n    $mobileMenuLinks.attr('tabindex', -1);\r\n    \r\n    $('.mobile-nav_toggle').on('click', function(toggleEvent) {\r\n      toggleEvent.stopImmediatePropagation();\r\n      toggleEvent.preventDefault();        \r\n      $('.mobile-nav_toggle').toggleClass('menu-button-active');\r\n      // Take mobile menu links out of tab flow if hidden.\r\n      if ($mobileMenuWrapper.hasClass('element-hidden')) {\r\n        $mobileMenuLinks.attr('tabindex', -1);\r\n        $('.mobile-nav_links').removeClass('element-hidden');\r\n      }\r\n      else {\r\n        $mobileMenuLinks.removeAttr('tabindex');\r\n        $('.mobile-nav_links').addClass('element-hidden');\r\n      }\r\n    }); \r\n  }\r\n};\r\n\r\n})(jQuery);\r\n"]}