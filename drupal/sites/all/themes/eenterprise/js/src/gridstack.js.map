{"version":3,"sources":["gridstack.js"],"names":["factory","define","amd","jQuery","_","$","scope","window","Utils","is_intercepted","a","b","x","width","y","height","sort","nodes","dir","chain","map","node","max","value","sortBy","n","create_stylesheet","id","style","document","createElement","setAttribute","styleSheet","cssText","appendChild","createTextNode","getElementsByTagName","sheet","insert_css_rule","selector","rules","index","insertRule","addRule","toBool","v","toLowerCase","Boolean","id_seq","GridStackEngine","onchange","float","items","this","_update_counter","_float","prototype","batch_update","commit","_pack_nodes","_notify","_fix_collisions","_sort_nodes","nn","has_locked","find","locked","collision_node","move_node","is_area_empty","each","i","_updating","_orig_y","new_y","bn","_dirty","can_be_moved","take","_prepare_node","resizing","defaults","parseInt","auto_position","no_resize","no_move","deleted_nodes","Array","slice","call","arguments","concat","get_dirty_nodes","clean_nodes","filter","add_node","max_width","Math","min","max_height","min_width","min_height","_id","floor","push","remove_node","without","can_move_node","cloned_node","clone","extend","res","get_grid_height","can_be_placed_with_respect_to_height","no_pack","reduce","memo","begin_update","end_update","GridStack","el","opts","one_column_mode","self","container","item_class","is_nested","closest","size","attr","placeholder_class","handle","cell_height","vertical_margin","auto","_class","random","toFixed","animate","always_show_resize_handle","resizable","autoHide","handles","draggable","scroll","appendTo","addClass","_init_styles","grid","remove","_update_styles","elements","_this","children","_prepare_element","set_animation","placeholder","hide","append","on_resize_handler","_is_one_column_mode","resize","_styles_id","_styles","_max","prefix","_update_container_height","data","cell_width","on_start_moving","event","ui","o","ceil","outerWidth","show","on_end_moving","orig_x","orig_y","removeAttr","trigger","start","stop","drag","round","position","left","top","containment","parent","enable","removeClass","add_widget","will_it_fit","remove_widget","detach_node","removeData","remove_all","val","movable","disable","_update_element","callback","first","move","update","get_cell_from_pixel","containerPos","relativeLeft","relativeTop","column_width","row_height","GridStackUI","fn","gridstack"],"mappings":"CAKA,SAAWA,GACe,kBAAXC,SAAyBA,OAAOC,IACvCD,QAAQ,SAAU,UAAWD,GAG7BA,EAAQG,OAAQC,IAErB,SAAUC,EAAGD,GAEZ,GAAIE,GAAQC,OAERC,GACAC,eAAgB,SAAUC,EAAGC,GACzB,QAASD,EAAEE,EAAIF,EAAEG,OAASF,EAAEC,GAAKD,EAAEC,EAAID,EAAEE,OAASH,EAAEE,GAAKF,EAAEI,EAAIJ,EAAEK,QAAUJ,EAAEG,GAAKH,EAAEG,EAAIH,EAAEI,QAAUL,EAAEI,IAG1GE,KAAM,SAAUC,EAAOC,EAAKL,GAGxB,MAFAA,GAAQA,GAAST,EAAEe,MAAMF,GAAOG,IAAI,SAAUC,GAAQ,MAAOA,GAAKT,EAAIS,EAAKR,QAAUS,MAAMC,QAC3FL,EAAMA,IAAO,EAAK,GAAI,EACfd,EAAEoB,OAAOP,EAAO,SAAUQ,GAAK,MAAOP,IAAOO,EAAEb,EAAIa,EAAEX,EAAID,MAGpEa,kBAAmB,SAAUC,GACzB,GAAIC,GAAQC,SAASC,cAAc,QAUnC,OATAF,GAAMG,aAAa,OAAQ,YAC3BH,EAAMG,aAAa,aAAcJ,GAC7BC,EAAMI,WACNJ,EAAMI,WAAWC,QAAU,GAG3BL,EAAMM,YAAYL,SAASM,eAAe,KAE9CN,SAASO,qBAAqB,QAAQ,GAAGF,YAAYN,GAC9CA,EAAMS,OAGjBC,gBAAiB,SAAUD,EAAOE,EAAUC,EAAOC,GAChB,kBAArBJ,GAAMK,WACZL,EAAMK,WAAWH,EAAW,IAAMC,EAAQ,IAAKC,GAElB,kBAAlBJ,GAAMM,SACjBN,EAAMM,QAAQJ,EAAUC,EAAOC,IAIvCG,OAAQ,SAAUC,GACd,MAAgB,iBAALA,GACAA,EACK,gBAALA,IACPA,EAAIA,EAAEC,gBACQ,IAALD,GAAgB,MAALA,GAAkB,SAALA,GAAqB,KAALA,IAE9CE,QAAQF,KAInBG,EAAS,EAETC,EAAkB,SAAUpC,EAAOqC,EAAUC,EAAOpC,EAAQqC,GAC5DC,KAAKxC,MAAQA,EACbwC,KAAKF,MAAQA,IAAS,EACtBE,KAAKtC,OAASA,GAAU,EAExBsC,KAAKpC,MAAQmC,MACbC,KAAKH,SAAWA,GAAY,aAE5BG,KAAKC,gBAAkB,EACvBD,KAAKE,OAASF,KAAKF,MAGvBF,GAAgBO,UAAUC,aAAe,WACrCJ,KAAKC,gBAAkB,EACvBD,KAAKF,OAAQ,GAGjBF,EAAgBO,UAAUE,OAAS,WAC/BL,KAAKC,gBAAkB,EACK,GAAxBD,KAAKC,kBACLD,KAAKF,MAAQE,KAAKE,OAClBF,KAAKM,cACLN,KAAKO,YAIbX,EAAgBO,UAAUK,gBAAkB,SAAUxC,GAClDgC,KAAKS,aAAY,EAEjB,IAAIC,GAAK1C,EAAM2C,EAAajB,QAAQ3C,EAAE6D,KAAKZ,KAAKpC,MAAO,SAAUQ,GAAK,MAAOA,GAAEyC,SAK/E,KAJKb,KAAKF,OAAUa,IAChBD,GAAMnD,EAAG,EAAGE,EAAGO,EAAKP,EAAGD,MAAOwC,KAAKxC,MAAOE,OAAQM,EAAKN,WAG9C,CACT,GAAIoD,GAAiB/D,EAAE6D,KAAKZ,KAAKpC,MAAO,SAAUQ,GAC9C,MAAOA,IAAKJ,GAAQb,EAAMC,eAAegB,EAAGsC,IAC7CV,KACH,IAA6B,mBAAlBc,GACP,MAEJd,MAAKe,UAAUD,EAAgBA,EAAevD,EAAGS,EAAKP,EAAIO,EAAKN,OAC3DoD,EAAetD,MAAOsD,EAAepD,QAAQ,KAIzDkC,EAAgBO,UAAUa,cAAgB,SAAUzD,EAAGE,EAAGD,EAAOE,GAC7D,GAAIgD,IAAMnD,EAAGA,GAAK,EAAGE,EAAGA,GAAK,EAAGD,MAAOA,GAAS,EAAGE,OAAQA,GAAU,GACjEoD,EAAiB/D,EAAE6D,KAAKZ,KAAKpC,MAAO,SAAUQ,GAC9C,MAAOjB,GAAMC,eAAegB,EAAGsC,IAChCV,KACH,OAAyB,OAAlBc,GAGXlB,EAAgBO,UAAUM,YAAc,SAAU5C,GAC9CmC,KAAKpC,MAAQT,EAAMQ,KAAKqC,KAAKpC,MAAOC,EAAKmC,KAAKxC,QAGlDoC,EAAgBO,UAAUG,YAAc,WACpCN,KAAKS,cAEDT,KAAKF,MACL/C,EAAEkE,KAAKjB,KAAKpC,MAAO,SAAUQ,EAAG8C,GAC5B,IAAI9C,EAAE+C,WAAiC,mBAAb/C,GAAEgD,SAA0BhD,EAAEX,GAAKW,EAAEgD,QAI/D,IADA,GAAIC,GAAQjD,EAAEX,EACP4D,GAASjD,EAAEgD,SAAS,CACvB,GAAIN,GAAiB/D,EAAEe,MAAMkC,KAAKpC,OAC7BgD,KAAK,SAAUU,GACZ,MAAOlD,IAAKkD,GAAMnE,EAAMC,gBAAgBG,EAAGa,EAAEb,EAAGE,EAAG4D,EAAO7D,MAAOY,EAAEZ,MAAOE,OAAQU,EAAEV,QAAS4D,KAEhGpD,OAEA4C,KACD1C,EAAEmD,QAAS,EACXnD,EAAEX,EAAI4D,KAERA,IAEPrB,MAGHjD,EAAEkE,KAAKjB,KAAKpC,MAAO,SAAUQ,EAAG8C,GAC5B,IAAI9C,EAAEyC,OAEN,KAAOzC,EAAEX,EAAI,GAAG,CACZ,GAAI4D,GAAQjD,EAAEX,EAAI,EACd+D,EAAoB,GAALN,CAEnB,IAAIA,EAAI,EAAG,CACP,GAAIJ,GAAiB/D,EAAEe,MAAMkC,KAAKpC,OAC7B6D,KAAKP,GACLN,KAAK,SAAUU,GACZ,MAAOnE,GAAMC,gBAAgBG,EAAGa,EAAEb,EAAGE,EAAG4D,EAAO7D,MAAOY,EAAEZ,MAAOE,OAAQU,EAAEV,QAAS4D,KAErFpD,OACLsD,GAAwC,mBAAlBV,GAG1B,IAAKU,EACD,KAEJpD,GAAEmD,OAASnD,EAAEX,GAAK4D,EAClBjD,EAAEX,EAAI4D,IAEXrB,OAIXJ,EAAgBO,UAAUuB,cAAgB,SAAU1D,EAAM2D,GAuCtD,MAtCA3D,GAAOjB,EAAE6E,SAAS5D,OAAaR,MAAO,EAAGE,OAAQ,EAAGH,EAAG,EAAGE,EAAG,IAE7DO,EAAKT,EAAIsE,SAAS,GAAK7D,EAAKT,GAC5BS,EAAKP,EAAIoE,SAAS,GAAK7D,EAAKP,GAC5BO,EAAKR,MAAQqE,SAAS,GAAK7D,EAAKR,OAChCQ,EAAKN,OAASmE,SAAS,GAAK7D,EAAKN,QACjCM,EAAK8D,cAAgB9D,EAAK8D,gBAAiB,EAC3C9D,EAAK+D,UAAY/D,EAAK+D,YAAa,EACnC/D,EAAKgE,QAAUhE,EAAKgE,UAAW,EAE3BhE,EAAKR,MAAQwC,KAAKxC,MAClBQ,EAAKR,MAAQwC,KAAKxC,MAEbQ,EAAKR,MAAQ,IAClBQ,EAAKR,MAAQ,GAGbQ,EAAKN,OAAS,IACdM,EAAKN,OAAS,GAGdM,EAAKT,EAAI,IACTS,EAAKT,EAAI,GAGTS,EAAKT,EAAIS,EAAKR,MAAQwC,KAAKxC,QACvBmE,EACA3D,EAAKR,MAAQwC,KAAKxC,MAAQQ,EAAKT,EAG/BS,EAAKT,EAAIyC,KAAKxC,MAAQQ,EAAKR,OAI/BQ,EAAKP,EAAI,IACTO,EAAKP,EAAI,GAGNO,GAGX4B,EAAgBO,UAAUI,QAAU,WAChC,IAAIP,KAAKC,gBAAT,CAGA,GAAIgC,GAAgBC,MAAM/B,UAAUgC,MAAMC,KAAKC,UAAW,GAAGC,OAAOtC,KAAKuC,kBACzEN,GAAgBA,EAAcK,OAAOtC,KAAKuC,mBAC1CvC,KAAKH,SAASoC,KAGlBrC,EAAgBO,UAAUqC,YAAc,WACpCzF,EAAEkE,KAAKjB,KAAKpC,MAAO,SAAUQ,GAAIA,EAAEmD,QAAS,KAGhD3B,EAAgBO,UAAUoC,gBAAkB,WACxC,MAAOxF,GAAE0F,OAAOzC,KAAKpC,MAAO,SAAUQ,GAAK,MAAOA,GAAEmD,UAGxD3B,EAAgBO,UAAUuC,SAAW,SAAS1E,GAW1C,GAVAA,EAAOgC,KAAK0B,cAAc1D,GAEG,mBAAlBA,GAAK2E,YAA0B3E,EAAKR,MAAQoF,KAAKC,IAAI7E,EAAKR,MAAOQ,EAAK2E,YACnD,mBAAnB3E,GAAK8E,aAA2B9E,EAAKN,OAASkF,KAAKC,IAAI7E,EAAKN,OAAQM,EAAK8E,aACvD,mBAAlB9E,GAAK+E,YAA0B/E,EAAKR,MAAQoF,KAAK3E,IAAID,EAAKR,MAAOQ,EAAK+E,YACnD,mBAAnB/E,GAAKgF,aAA2BhF,EAAKN,OAASkF,KAAK3E,IAAID,EAAKN,OAAQM,EAAKgF,aAEpFhF,EAAKiF,MAAQtD,EACb3B,EAAKuD,QAAS,EAEVvD,EAAK8D,cAAe,CACpB9B,KAAKS,aAEL,KAAK,GAAIS,GAAI,KAAOA,EAAG,CACnB,GAAI3D,GAAI2D,EAAIlB,KAAKxC,MAAOC,EAAImF,KAAKM,MAAMhC,EAAIlB,KAAKxC,MAChD,MAAID,EAAIS,EAAKR,MAAQwC,KAAKxC,OAGrBT,EAAE6D,KAAKZ,KAAKpC,MAAO,SAAUQ,GAC9B,MAAOjB,GAAMC,gBAAgBG,EAAGA,EAAGE,EAAGA,EAAGD,MAAOQ,EAAKR,MAAOE,OAAQM,EAAKN,QAASU,MAClF,CACAJ,EAAKT,EAAIA,EACTS,EAAKP,EAAIA,CACT,SAUZ,MALAuC,MAAKpC,MAAMuF,KAAKnF,GAEhBgC,KAAKQ,gBAAgBxC,GACrBgC,KAAKM,cACLN,KAAKO,UACEvC,GAGX4B,EAAgBO,UAAUiD,YAAc,SAAUpF,GAC9CA,EAAKiF,IAAM,KACXjD,KAAKpC,MAAQb,EAAEsG,QAAQrD,KAAKpC,MAAOI,GACnCgC,KAAKM,cACLN,KAAKO,QAAQvC,IAGjB4B,EAAgBO,UAAUmD,cAAgB,SAAUtF,EAAMT,EAAGE,EAAGD,EAAOE,GACnE,GAAIiD,GAAajB,QAAQ3C,EAAE6D,KAAKZ,KAAKpC,MAAO,SAAUQ,GAAK,MAAOA,GAAEyC,SAEpE,KAAKb,KAAKtC,SAAWiD,EACjB,OAAO,CAEX,IAAI4C,GACAC,EAAQ,GAAI5D,GACZI,KAAKxC,MACL,KACAwC,KAAKF,MACL,EACA/C,EAAEgB,IAAIiC,KAAKpC,MAAO,SAAUQ,GAAK,MAAIA,IAAKJ,EAAQuF,EAAcvG,EAAEyG,UAAWrF,GAAiCpB,EAAEyG,UAAWrF,KAE/HoF,GAAMzC,UAAUwC,EAAahG,EAAGE,EAAGD,EAAOE,EAE1C,IAAIgG,IAAM,CAOV,OALI/C,KACA+C,IAAQhE,QAAQ3C,EAAE6D,KAAK4C,EAAM5F,MAAO,SAAUQ,GAAK,MAAOA,IAAKmF,GAAe7D,QAAQtB,EAAEyC,SAAWnB,QAAQtB,EAAEmD,YAC7GvB,KAAKtC,SACLgG,GAAOF,EAAMG,mBAAqB3D,KAAKtC,QAEpCgG,GAGX9D,EAAgBO,UAAUyD,qCAAuC,SAAU5F,GACvE,IAAKgC,KAAKtC,OACN,OAAO,CAEX,IAAI8F,GAAQ,GAAI5D,GACZI,KAAKxC,MACL,KACAwC,KAAKF,MACL,EACA/C,EAAEgB,IAAIiC,KAAKpC,MAAO,SAAUQ,GAAK,MAAOpB,GAAEyG,UAAWrF,KAEzD,OADAoF,GAAMd,SAAS1E,GACRwF,EAAMG,mBAAqB3D,KAAKtC,QAG3CkC,EAAgBO,UAAUY,UAAY,SAAU/C,EAAMT,EAAGE,EAAGD,EAAOE,EAAQmG,GAWvE,GAVgB,gBAALtG,KAAeA,EAAIS,EAAKT,GACnB,gBAALE,KAAeA,EAAIO,EAAKP,GACf,gBAATD,KAAmBA,EAAQQ,EAAKR,OACtB,gBAAVE,KAAoBA,EAASM,EAAKN,QAEhB,mBAAlBM,GAAK2E,YAA0BnF,EAAQoF,KAAKC,IAAIrF,EAAOQ,EAAK2E,YACzC,mBAAnB3E,GAAK8E,aAA2BpF,EAASkF,KAAKC,IAAInF,EAAQM,EAAK8E,aAC7C,mBAAlB9E,GAAK+E,YAA0BvF,EAAQoF,KAAK3E,IAAIT,EAAOQ,EAAK+E,YACzC,mBAAnB/E,GAAKgF,aAA2BtF,EAASkF,KAAK3E,IAAIP,EAAQM,EAAKgF,aAEtEhF,EAAKT,GAAKA,GAAKS,EAAKP,GAAKA,GAAKO,EAAKR,OAASA,GAASQ,EAAKN,QAAUA,EACpE,MAAOM,EAGX,IAAI2D,GAAW3D,EAAKR,OAASA,CAe7B,OAdAQ,GAAKuD,QAAS,EAEdvD,EAAKT,EAAIA,EACTS,EAAKP,EAAIA,EACTO,EAAKR,MAAQA,EACbQ,EAAKN,OAASA,EAEdM,EAAOgC,KAAK0B,cAAc1D,EAAM2D,GAEhC3B,KAAKQ,gBAAgBxC,GAChB6F,IACD7D,KAAKM,cACLN,KAAKO,WAEFvC,GAGX4B,EAAgBO,UAAUwD,gBAAkB,WACxC,MAAO5G,GAAE+G,OAAO9D,KAAKpC,MAAO,SAAUmG,EAAM3F,GAAK,MAAOwE,MAAK3E,IAAI8F,EAAM3F,EAAEX,EAAIW,EAAEV,SAAY,IAG/FkC,EAAgBO,UAAU6D,aAAe,SAAUhG,GAC/CjB,EAAEkE,KAAKjB,KAAKpC,MAAO,SAAUQ,GACzBA,EAAEgD,QAAUhD,EAAEX,IAElBO,EAAKmD,WAAY,GAGrBvB,EAAgBO,UAAU8D,WAAa,WACnClH,EAAEkE,KAAKjB,KAAKpC,MAAO,SAAUQ,GACzBA,EAAEgD,QAAUhD,EAAEX,GAElB,IAAIW,GAAIrB,EAAE6D,KAAKZ,KAAKpC,MAAO,SAAUQ,GAAK,MAAOA,GAAE+C,WAC/C/C,KACAA,EAAE+C,WAAY,GAItB,IAAI+C,GAAY,SAAUC,EAAIC,GAC1B,GAAiBC,GAAbC,EAAOtE,IAEXA,MAAKuE,UAAYvH,EAAEmH,GAEnBC,EAAKI,WAAaJ,EAAKI,YAAc,iBACrC,IAAIC,GAAYzE,KAAKuE,UAAUG,QAAQ,IAAMN,EAAKI,YAAYG,OAAS,CAqDvE,IAnDA3E,KAAKoE,KAAOrH,EAAE6E,SAASwC,OACnB5G,MAAOqE,SAAS7B,KAAKuE,UAAUK,KAAK,mBAAqB,GACzDlH,OAAQmE,SAAS7B,KAAKuE,UAAUK,KAAK,oBAAsB,EAC3DJ,WAAY,kBACZK,kBAAmB,yBACnBC,OAAQ,2BACRC,YAAa,GACbC,gBAAiB,GACjBC,MAAM,EACNlC,UAAW,IACXjD,OAAO,EACPoF,OAAQ,eAAiC,IAAhBtC,KAAKuC,UAAkBC,QAAQ,GACxDC,QAAS3F,QAAQM,KAAKuE,UAAUK,KAAK,sBAAuB,EAC5DU,0BAA2BlB,EAAKkB,4BAA6B,EAC7DC,UAAWxI,EAAE6E,SAASwC,EAAKmB,eACvBC,UAAYpB,EAAKkB,0BACjBG,QAAS,OAEbC,UAAW3I,EAAE6E,SAASwC,EAAKsB,eACvBZ,OAAQ,2BACRa,QAAQ,EACRC,SAAU,WAGlB5F,KAAKoE,KAAKK,UAAYA,EAEtBzE,KAAKuE,UAAUsB,SAAS7F,KAAKoE,KAAKc,QAC9BT,GACAzE,KAAKuE,UAAUsB,SAAS,qBAG5B7F,KAAK8F,eAEL9F,KAAK+F,KAAO,GAAInG,GAAgBI,KAAKoE,KAAK5G,MAAO,SAAUI,GACvD,GAAIkF,GAAa,CACjB/F,GAAEkE,KAAKrD,EAAO,SAAUQ,GACP,MAATA,EAAE6E,IACF7E,EAAE+F,GAAG6B,UAGL5H,EAAE+F,GACGS,KAAK,YAAaxG,EAAEb,GACpBqH,KAAK,YAAaxG,EAAEX,GACpBmH,KAAK,gBAAiBxG,EAAEZ,OACxBoH,KAAK,iBAAkBxG,EAAEV,QAC9BoF,EAAaF,KAAK3E,IAAI6E,EAAY1E,EAAEX,EAAIW,EAAEV,WAGlD4G,EAAK2B,eAAenD,EAAa,KAClC9C,KAAKoE,KAAKtE,MAAOE,KAAKoE,KAAK1G,QAE1BsC,KAAKoE,KAAKa,KAAM,CAChB,GAAIiB,MACAC,EAAQnG,IACZA,MAAKuE,UAAU6B,SAAS,IAAMpG,KAAKoE,KAAKI,YAAYvD,KAAK,SAAU7B,EAAO+E,GACtEA,EAAKnH,EAAEmH,GACP+B,EAAS/C,MACLgB,GAAIA,EACJjD,EAAGW,SAASsC,EAAGS,KAAK,cAAgB/C,SAASsC,EAAGS,KAAK,cAAgBuB,EAAM/B,KAAK5G,UAGxFT,EAAEe,MAAMoI,GAAU/H,OAAO,SAAUZ,GAAK,MAAOA,GAAE2D,IAAMD,KAAK,SAAUC,GAClEoD,EAAK+B,iBAAiBnF,EAAEiD,MACzBjG,QAGP8B,KAAKsG,cAActG,KAAKoE,KAAKiB,SAE7BrF,KAAKuG,YAAcvJ,EAAE,eAAiBgD,KAAKoE,KAAKS,kBAAoB,IAAM7E,KAAKoE,KAAKI,WAAa,+CAA+CgC,OAChJxG,KAAKuE,UAAUkC,OAAOzG,KAAKuG,aAC3BvG,KAAKuE,UAAU7G,OAAQsC,KAAK+F,KAAKpC,mBAAsB3D,KAAKoE,KAAKW,YAAc/E,KAAKoE,KAAKY,iBAAmBhF,KAAKoE,KAAKY,gBAEtH,IAAI0B,GAAoB,WACpB,GAAIpC,EAAKqC,sBAAuB,CAC5B,GAAItC,EACA,MAEJA,IAAkB,EAElBC,EAAKyB,KAAKtF,cACV1D,EAAEkE,KAAKqD,EAAKyB,KAAKnI,MAAO,SAAUI,GAC9BsG,EAAKC,UAAUkC,OAAOzI,EAAKmG,IAEtBnG,EAAKgE,SACNhE,EAAKmG,GAAGuB,UAAU,WAEjB1H,EAAK+D,WACN/D,EAAKmG,GAAGoB,UAAU,iBAIzB,CACD,IAAKlB,EACD,MAEJA,IAAkB,EAElBtH,EAAEkE,KAAKqD,EAAKyB,KAAKnI,MAAO,SAAUI,GACzBA,EAAKgE,SACNhE,EAAKmG,GAAGuB,UAAU,UAEjB1H,EAAK+D,WACN/D,EAAKmG,GAAGoB,UAAU,aAMlCvI,GAAEE,QAAQ0J,OAAOF,GACjBA,IAoYJ,OAjYAxC,GAAU/D,UAAU2F,aAAe,WAC3B9F,KAAK6G,YACL7J,EAAE,gBAAkBgD,KAAK6G,WAAa,MAAMb,SAEhDhG,KAAK6G,WAAa,oBAAsC,IAAhBjE,KAAKuC,UAAmBC,UAChEpF,KAAK8G,QAAU3J,EAAMkB,kBAAkB2B,KAAK6G,YACxB,MAAhB7G,KAAK8G,UACL9G,KAAK8G,QAAQC,KAAO,IAG5B7C,EAAU/D,UAAU8F,eAAiB,SAAUnD,GAC3C,GAAoB,MAAhB9C,KAAK8G,QAAT,CAIA,GAAIE,GAAS,IAAMhH,KAAKoE,KAAKc,OAAS,KAAOlF,KAAKoE,KAAKI,UAYvD,IAVyB,mBAAd1B,KACPA,EAAa9C,KAAK8G,QAAQC,KAC1B/G,KAAK8F,eACL9F,KAAKiH,4BAGgB,GAArBjH,KAAK8G,QAAQC,MACb5J,EAAM8B,gBAAgBe,KAAK8G,QAASE,EAAQ,eAAkBhH,KAAKoE,KAAgB,YAAI,MAAO,GAG9FtB,EAAa9C,KAAK8G,QAAQC,KAAM,CAChC,IAAK,GAAI7F,GAAIlB,KAAK8G,QAAQC,KAAM7F,EAAI4B,IAAc5B,EAC9C/D,EAAM8B,gBAAgBe,KAAK8G,QACvBE,EAAS,qBAAuB9F,EAAI,GAAK,KACzC,YAAclB,KAAKoE,KAAKW,aAAe7D,EAAI,GAAKlB,KAAKoE,KAAKY,gBAAkB9D,GAAK,MACjFA,GAEJ/D,EAAM8B,gBAAgBe,KAAK8G,QACvBE,EAAS,yBAA2B9F,EAAI,GAAK,KAC7C,gBAAkBlB,KAAKoE,KAAKW,aAAe7D,EAAI,GAAKlB,KAAKoE,KAAKY,gBAAkB9D,GAAK,MACrFA,GAEJ/D,EAAM8B,gBAAgBe,KAAK8G,QACvBE,EAAS,yBAA2B9F,EAAI,GAAK,KAC7C,gBAAkBlB,KAAKoE,KAAKW,aAAe7D,EAAI,GAAKlB,KAAKoE,KAAKY,gBAAkB9D,GAAK,MACrFA,GAEJ/D,EAAM8B,gBAAgBe,KAAK8G,QACvBE,EAAS,eAAiB9F,EAAI,KAC9B,SAAWlB,KAAKoE,KAAKW,YAAc7D,EAAIlB,KAAKoE,KAAKY,gBAAkB9D,GAAK,MACxEA,EAGRlB,MAAK8G,QAAQC,KAAOjE,KAI5BoB,EAAU/D,UAAU8G,yBAA2B,WACvCjH,KAAK+F,KAAK9F,iBAGdD,KAAKuE,UAAU7G,OAAOsC,KAAK+F,KAAKpC,mBAAqB3D,KAAKoE,KAAKW,YAAc/E,KAAKoE,KAAKY,iBAAmBhF,KAAKoE,KAAKY,kBAGxHd,EAAU/D,UAAUwG,oBAAsB,WACtC,MAAO3J,GAAEE,QAAQM,SAAWwC,KAAKoE,KAAKrB,WAG1CmB,EAAU/D,UAAUkG,iBAAmB,SAAUlC,GAC7C,GAAIG,GAAOtE,IACXmE,GAAKnH,EAAEmH,GAEPA,EAAG0B,SAAS7F,KAAKoE,KAAKI,WAEtB,IAAIxG,GAAOsG,EAAKyB,KAAKrD,UACjBnF,EAAG4G,EAAGS,KAAK,aACXnH,EAAG0G,EAAGS,KAAK,aACXpH,MAAO2G,EAAGS,KAAK,iBACflH,OAAQyG,EAAGS,KAAK,kBAChBjC,UAAWwB,EAAGS,KAAK,qBACnB7B,UAAWoB,EAAGS,KAAK,qBACnB9B,WAAYqB,EAAGS,KAAK,sBACpB5B,WAAYmB,EAAGS,KAAK,sBACpB9C,cAAe3E,EAAMoC,OAAO4E,EAAGS,KAAK,0BACpC7C,UAAW5E,EAAMoC,OAAO4E,EAAGS,KAAK,sBAChC5C,QAAS7E,EAAMoC,OAAO4E,EAAGS,KAAK,oBAC9B/D,OAAQ1D,EAAMoC,OAAO4E,EAAGS,KAAK,mBAC7BT,GAAIA,GAERA,GAAG+C,KAAK,kBAAmBlJ,EAE3B,IAAImJ,GAAYpC,EAEZqC,EAAkB,SAAUC,EAAOC,GACnC,GAAIC,GAAIvK,EAAEgD,KACVsE,GAAKyB,KAAKvD,cACV8B,EAAKyB,KAAK/B,aAAahG,GACvBmJ,EAAavE,KAAK4E,KAAKD,EAAEE,aAAeF,EAAE3C,KAAK,kBAC/CG,EAAcT,EAAKF,KAAKW,YAAcT,EAAKF,KAAKY,gBAChDV,EAAKiC,YACA3B,KAAK,YAAa2C,EAAE3C,KAAK,cACzBA,KAAK,YAAa2C,EAAE3C,KAAK,cACzBA,KAAK,gBAAiB2C,EAAE3C,KAAK,kBAC7BA,KAAK,iBAAkB2C,EAAE3C,KAAK,mBAC9B8C,OACL1J,EAAKmG,GAAKG,EAAKiC,YAEfpC,EAAGoB,UAAU,SAAU,WAAY4B,GAAcnJ,EAAK+E,WAAa,IACnEoB,EAAGoB,UAAU,SAAU,YAAajB,EAAKF,KAAKW,aAAe/G,EAAKgF,YAAc,KAGhF2E,EAAgB,SAAUN,EAAOC,GACjC,GAAIC,GAAIvK,EAAEgD,MAGN4H,EAASL,EAAE3C,KAAK,aAChBiD,EAASN,EAAE3C,KAAK,YACpB5G,GAAKmG,GAAKoD,EACVjD,EAAKiC,YAAYC,OACjBe,EACK3C,KAAK,YAAa5G,EAAKT,GACvBqH,KAAK,YAAa5G,EAAKP,GACvBmH,KAAK,gBAAiB5G,EAAKR,OAC3BoH,KAAK,iBAAkB5G,EAAKN,QAC5BoK,WAAW,SAEZ9J,EAAKT,GAAKqK,GAAW5J,EAAKP,GAAKoK,GAC/B7K,EAAE,QAAQ+K,QAAQ,gBAEtBzD,EAAK2C,2BACL3C,EAAKC,UAAUwD,QAAQ,UAAWzD,EAAKyB,KAAKxD,oBAE5C+B,EAAKyB,KAAK9B,aAGdE,GAAGuB,UAAU3I,EAAE0G,OAAOzD,KAAKoE,KAAKsB,WAC5BsC,MAAOZ,EACPa,KAAMN,EACNO,KAAM,SAAUb,EAAOC,GACnB,GAAI/J,GAAIqF,KAAKuF,MAAMb,EAAGc,SAASC,KAAOlB,GAClC1J,EAAImF,KAAKM,OAAOoE,EAAGc,SAASE,IAAMvD,EAAY,GAAKA,EAClDT,GAAKyB,KAAKzC,cAActF,EAAMT,EAAGE,EAAGO,EAAKR,MAAOQ,EAAKN,UAG1D4G,EAAKyB,KAAKhF,UAAU/C,EAAMT,EAAGE,GAC7B6G,EAAK2C,6BAETsB,YAAavI,KAAKoE,KAAKK,UAAYzE,KAAKuE,UAAUiE,SAAW,QAC7DjD,UAAUxI,EAAE0G,OAAOzD,KAAKoE,KAAKmB,WAC7ByC,MAAOZ,EACPa,KAAMN,EACNf,OAAQ,SAAUS,EAAOC,GACrB,GAAI/J,GAAIqF,KAAKuF,MAAMb,EAAGc,SAASC,KAAOlB,GAClC1J,EAAImF,KAAKM,OAAOoE,EAAGc,SAASE,IAAMvD,EAAY,GAAKA,GACnDvH,EAAQoF,KAAKuF,MAAMb,EAAG3C,KAAKnH,MAAQ2J,GACnCzJ,EAASkF,KAAKuF,MAAMb,EAAG3C,KAAKjH,OAASqH,EACpCT,GAAKyB,KAAKzC,cAActF,EAAMT,EAAGE,EAAGD,EAAOE,KAGhD4G,EAAKyB,KAAKhF,UAAU/C,EAAMT,EAAGE,EAAGD,EAAOE,GACvC4G,EAAK2C,iCAITjJ,EAAKgE,SAAWhC,KAAK2G,wBACrBxC,EAAGuB,UAAU,YAGb1H,EAAK+D,WAAa/B,KAAK2G,wBACvBxC,EAAGoB,UAAU,WAGjBpB,EAAGS,KAAK,iBAAkB5G,EAAK6C,OAAS,MAAQ,OAGpDqD,EAAU/D,UAAUmG,cAAgB,SAAUmC,GACtCA,EACAzI,KAAKuE,UAAUsB,SAAS,sBAGxB7F,KAAKuE,UAAUmE,YAAY,uBAInCxE,EAAU/D,UAAUwI,WAAa,SAAUxE,EAAI5G,EAAGE,EAAGD,EAAOE,EAAQoE,GAWhE,MAVAqC,GAAKnH,EAAEmH,GACS,mBAAL5G,IAAkB4G,EAAGS,KAAK,YAAarH,GAClC,mBAALE,IAAkB0G,EAAGS,KAAK,YAAanH,GAC9B,mBAATD,IAAsB2G,EAAGS,KAAK,gBAAiBpH,GACrC,mBAAVE,IAAuByG,EAAGS,KAAK,iBAAkBlH,GAChC,mBAAjBoE,IAA8BqC,EAAGS,KAAK,wBAAyB9C,EAAgB,MAAQ,MAClG9B,KAAKuE,UAAUkC,OAAOtC,GACtBnE,KAAKqG,iBAAiBlC,GACtBnE,KAAKiH,2BAEE9C,GAGXD,EAAU/D,UAAUyI,YAAc,SAAUrL,EAAGE,EAAGD,EAAOE,EAAQoE,GAC7D,GAAI9D,IAAQT,EAAGA,EAAGE,EAAGA,EAAGD,MAAOA,EAAOE,OAAQA,EAAQoE,cAAeA,EACrE,OAAO9B,MAAK+F,KAAKnC,qCAAqC5F,IAG1DkG,EAAU/D,UAAU0I,cAAgB,SAAU1E,EAAI2E,GAC9CA,EAAqC,mBAAhBA,IAAqCA,EAC1D3E,EAAKnH,EAAEmH,EACP,IAAInG,GAAOmG,EAAG+C,KAAK,kBACnBlH,MAAK+F,KAAK3C,YAAYpF,GACtBmG,EAAG4E,WAAW,mBACd/I,KAAKiH,2BACD6B,GACA3E,EAAG6B,UAGX9B,EAAU/D,UAAU6I,WAAa,SAAUF,GACvC/L,EAAEkE,KAAKjB,KAAK+F,KAAKnI,MAAO,SAAUI,GAC9BgC,KAAK6I,cAAc7K,EAAKmG,GAAI2E,IAC7B9I,MACHA,KAAK+F,KAAKnI,SACVoC,KAAKiH,4BAGT/C,EAAU/D,UAAUoF,UAAY,SAAUpB,EAAI8E,GAiB1C,MAhBA9E,GAAKnH,EAAEmH,GACPA,EAAGlD,KAAK,SAAU7B,EAAO+E,GACrBA,EAAKnH,EAAEmH,EACP,IAAInG,GAAOmG,EAAG+C,KAAK,kBACA,oBAARlJ,IAA+B,MAARA,IAIlCA,EAAK+D,WAAckH,EACfjL,EAAK+D,UACLoC,EAAGoB,UAAU,WAGbpB,EAAGoB,UAAU,aAGdvF,MAGXkE,EAAU/D,UAAU+I,QAAU,SAAU/E,EAAI8E,GAiBxC,MAhBA9E,GAAKnH,EAAEmH,GACPA,EAAGlD,KAAK,SAAU7B,EAAO+E,GACrBA,EAAKnH,EAAEmH,EACP,IAAInG,GAAOmG,EAAG+C,KAAK,kBACA,oBAARlJ,IAA+B,MAARA,IAIlCA,EAAKgE,SAAYiH,EACbjL,EAAKgE,QACLmC,EAAGuB,UAAU,WAGbvB,EAAGuB,UAAU,aAGd1F,MAGXkE,EAAU/D,UAAUgJ,QAAU,WAC1BnJ,KAAKkJ,QAAQlJ,KAAKuE,UAAU6B,SAAS,IAAMpG,KAAKoE,KAAKI,aAAa,GAClExE,KAAKuF,UAAUvF,KAAKuE,UAAU6B,SAAS,IAAMpG,KAAKoE,KAAKI,aAAa,IAGxEN,EAAU/D,UAAUsI,OAAS,WACzBzI,KAAKkJ,QAAQlJ,KAAKuE,UAAU6B,SAAS,IAAMpG,KAAKoE,KAAKI,aAAa,GAClExE,KAAKuF,UAAUvF,KAAKuE,UAAU6B,SAAS,IAAMpG,KAAKoE,KAAKI,aAAa,IAGxEN,EAAU/D,UAAUU,OAAS,SAAUsD,EAAI8E,GAYvC,MAXA9E,GAAKnH,EAAEmH,GACPA,EAAGlD,KAAK,SAAU7B,EAAO+E,GACrBA,EAAKnH,EAAEmH,EACP,IAAInG,GAAOmG,EAAG+C,KAAK,kBACA,oBAARlJ,IAA+B,MAARA,IAIlCA,EAAK6C,OAAUoI,IAAO,EACtB9E,EAAGS,KAAK,iBAAkB5G,EAAK6C,OAAS,MAAQ,SAE7Cb,MAGXkE,EAAU/D,UAAUiJ,gBAAkB,SAAUjF,EAAIkF,GAChDlF,EAAKnH,EAAEmH,GAAImF,OACX,IAAItL,GAAOmG,EAAG+C,KAAK,kBACnB,IAAmB,mBAARlJ,IAA+B,MAARA,EAAlC,CAIA,GAAIsG,GAAOtE,IAEXsE,GAAKyB,KAAKvD,cACV8B,EAAKyB,KAAK/B,aAAahG,GAEvBqL,EAASjH,KAAKpC,KAAMmE,EAAInG,GAExBsG,EAAK2C,2BACL3C,EAAKC,UAAUwD,QAAQ,UAAWzD,EAAKyB,KAAKxD,oBAE5C+B,EAAKyB,KAAK9B,eAGdC,EAAU/D,UAAUyG,OAAS,SAAUzC,EAAI3G,EAAOE,GAC9CsC,KAAKoJ,gBAAgBjF,EAAI,SAAUA,EAAInG,GACnCR,EAAkB,MAATA,GAAiC,mBAATA,GAAwBA,EAAQQ,EAAKR,MACtEE,EAAoB,MAAVA,GAAmC,mBAAVA,GAAyBA,EAASM,EAAKN,OAE1EsC,KAAK+F,KAAKhF,UAAU/C,EAAMA,EAAKT,EAAGS,EAAKP,EAAGD,EAAOE,MAIzDwG,EAAU/D,UAAUoJ,KAAO,SAAUpF,EAAI5G,EAAGE,GACxCuC,KAAKoJ,gBAAgBjF,EAAI,SAAUA,EAAInG,GACnCT,EAAU,MAALA,GAAyB,mBAALA,GAAoBA,EAAIS,EAAKT,EACtDE,EAAU,MAALA,GAAyB,mBAALA,GAAoBA,EAAIO,EAAKP,EAEtDuC,KAAK+F,KAAKhF,UAAU/C,EAAMT,EAAGE,EAAGO,EAAKR,MAAOQ,EAAKN,WAIzDwG,EAAU/D,UAAUqJ,OAAS,SAAUrF,EAAI5G,EAAGE,EAAGD,EAAOE,GACpDsC,KAAKoJ,gBAAgBjF,EAAI,SAAUA,EAAInG,GACnCT,EAAU,MAALA,GAAyB,mBAALA,GAAoBA,EAAIS,EAAKT,EACtDE,EAAU,MAALA,GAAyB,mBAALA,GAAoBA,EAAIO,EAAKP,EACtDD,EAAkB,MAATA,GAAiC,mBAATA,GAAwBA,EAAQQ,EAAKR,MACtEE,EAAoB,MAAVA,GAAmC,mBAAVA,GAAyBA,EAASM,EAAKN,OAE1EsC,KAAK+F,KAAKhF,UAAU/C,EAAMT,EAAGE,EAAGD,EAAOE,MAI/CwG,EAAU/D,UAAU4E,YAAc,SAAUkE,GACxC,MAAkB,mBAAPA,GACAjJ,KAAKoE,KAAKW,aAErBkE,EAAMpH,SAASoH,QACXA,GAAOjJ,KAAKoE,KAAKW,cAErB/E,KAAKoE,KAAKW,YAAckE,GAAOjJ,KAAKoE,KAAKW,YACzC/E,KAAKiG,qBAGT/B,EAAU/D,UAAUgH,WAAa,WAC7B,GAAII,GAAIvH,KAAKuE,UAAU6B,SAAS,IAAMpG,KAAKoE,KAAKI,YAAY8E,OAC5D,OAAO1G,MAAK4E,KAAKD,EAAEE,aAAeF,EAAE3C,KAAK,mBAG7CV,EAAU/D,UAAUsJ,oBAAsB,SAASrB,GAC/C,GAAIsB,GAAe1J,KAAKuE,UAAU6D,WAC9BuB,EAAevB,EAASC,KAAOqB,EAAarB,KAC5CuB,EAAcxB,EAASE,IAAMoB,EAAapB,IAE1CuB,EAAejH,KAAKM,MAAMlD,KAAKuE,UAAU/G,QAAUwC,KAAKoE,KAAK5G,OAC7DsM,EAAa9J,KAAKoE,KAAKW,YAAc/E,KAAKoE,KAAKY,eAEnD,QAAQzH,EAAGqF,KAAKM,MAAMyG,EAAeE,GAAepM,EAAGmF,KAAKM,MAAM0G,EAAcE,KAGpF5F,EAAU/D,UAAUC,aAAe,WAC/BJ,KAAK+F,KAAK3F,gBAGd8D,EAAU/D,UAAUE,OAAS,WACzBL,KAAK+F,KAAK1F,SACVL,KAAKiH,4BAGT/C,EAAU/D,UAAUa,cAAgB,SAAUzD,EAAGE,EAAGD,EAAOE,GACvD,MAAOsC,MAAK+F,KAAK/E,cAAczD,EAAGE,EAAGD,EAAOE,IAGhDT,EAAM8M,YAAc7F,EAEpBjH,EAAM8M,YAAY5M,MAAQA,EAE1BH,EAAEgN,GAAGC,UAAY,SAAU7F,GACvB,MAAOpE,MAAKiB,KAAK,WACRjE,EAAEgD,MAAMkH,KAAK,cACdlK,EAAEgD,MAAMkH,KAAK,YAAa,GAAIhD,GAAUlE,KAAMoE,OAKnDnH,EAAM8M","file":"gridstack.js","sourcesContent":["//     gridstack.js 0.2.3-dev\r\n//     http://troolee.github.io/gridstack.js/\r\n//     (c) 2014-2015 Pavel Reznikov\r\n//     gridstack.js may be freely distributed under the MIT license.\r\n\r\n(function (factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define(['jquery', 'lodash'], factory);\r\n    }\r\n    else {\r\n        factory(jQuery, _);\r\n    }\r\n})(function ($, _) {\r\n\r\n    var scope = window;\r\n\r\n    var Utils = {\r\n        is_intercepted: function (a, b) {\r\n            return !(a.x + a.width <= b.x || b.x + b.width <= a.x || a.y + a.height <= b.y || b.y + b.height <= a.y);\r\n        },\r\n\r\n        sort: function (nodes, dir, width) {\r\n            width = width || _.chain(nodes).map(function (node) { return node.x + node.width; }).max().value();\r\n            dir = dir != -1 ? 1 : -1;\r\n            return _.sortBy(nodes, function (n) { return dir * (n.x + n.y * width); });\r\n        },\r\n\r\n        create_stylesheet: function (id) {\r\n            var style = document.createElement(\"style\");\r\n            style.setAttribute(\"type\", \"text/css\");\r\n            style.setAttribute(\"data-gs-id\", id);\r\n            if (style.styleSheet) {\r\n                style.styleSheet.cssText = \"\";\r\n            }\r\n            else {\r\n                style.appendChild(document.createTextNode(\"\"));\r\n            }\r\n            document.getElementsByTagName('head')[0].appendChild(style);\r\n            return style.sheet;\r\n        },\r\n\r\n        insert_css_rule: function (sheet, selector, rules, index) {\r\n            if(typeof sheet.insertRule === 'function') {\r\n                sheet.insertRule(selector + \"{\" + rules + \"}\", index);\r\n            }\r\n            else if(typeof sheet.addRule === 'function') {\r\n                sheet.addRule(selector, rules, index);\r\n            }\r\n        },\r\n\r\n        toBool: function (v) {\r\n            if (typeof v == 'boolean')\r\n                return v;\r\n            if (typeof v == 'string') {\r\n                v = v.toLowerCase();\r\n                return !(v == '' || v == 'no' || v == 'false' || v == '0');\r\n            }\r\n            return Boolean(v);\r\n        }\r\n    };\r\n\r\n    var id_seq = 0;\r\n\r\n    var GridStackEngine = function (width, onchange, float, height, items) {\r\n        this.width = width;\r\n        this.float = float || false;\r\n        this.height = height || 0;\r\n\r\n        this.nodes = items || [];\r\n        this.onchange = onchange || function () {};\r\n\r\n        this._update_counter = 0;\r\n        this._float = this.float;\r\n    };\r\n\r\n    GridStackEngine.prototype.batch_update = function () {\r\n        this._update_counter = 1;\r\n        this.float = true;\r\n    };\r\n\r\n    GridStackEngine.prototype.commit = function () {\r\n        this._update_counter = 0;\r\n        if (this._update_counter == 0) {\r\n            this.float = this._float;\r\n            this._pack_nodes();\r\n            this._notify();\r\n        }\r\n    };\r\n\r\n    GridStackEngine.prototype._fix_collisions = function (node) {\r\n        this._sort_nodes(-1);\r\n\r\n        var nn = node, has_locked = Boolean(_.find(this.nodes, function (n) { return n.locked }));\r\n        if (!this.float && !has_locked) {\r\n            nn = {x: 0, y: node.y, width: this.width, height: node.height};\r\n        }\r\n\r\n        while (true) {\r\n            var collision_node = _.find(this.nodes, function (n) {\r\n                return n != node && Utils.is_intercepted(n, nn);\r\n            }, this);\r\n            if (typeof collision_node == 'undefined') {\r\n                return;\r\n            }\r\n            this.move_node(collision_node, collision_node.x, node.y + node.height,\r\n                collision_node.width, collision_node.height, true);\r\n        }\r\n    };\r\n\r\n    GridStackEngine.prototype.is_area_empty = function (x, y, width, height) {\r\n        var nn = {x: x || 0, y: y || 0, width: width || 1, height: height || 1};\r\n        var collision_node = _.find(this.nodes, function (n) {\r\n            return Utils.is_intercepted(n, nn);\r\n        }, this);\r\n        return collision_node == null;\r\n    };\r\n\r\n    GridStackEngine.prototype._sort_nodes = function (dir) {\r\n        this.nodes = Utils.sort(this.nodes, dir, this.width);\r\n    };\r\n\r\n    GridStackEngine.prototype._pack_nodes = function () {\r\n        this._sort_nodes();\r\n\r\n        if (this.float) {\r\n            _.each(this.nodes, function (n, i) {\r\n                if (n._updating || typeof n._orig_y == 'undefined' || n.y == n._orig_y)\r\n                    return;\r\n\r\n                var new_y = n.y;\r\n                while (new_y >= n._orig_y) {\r\n                    var collision_node = _.chain(this.nodes)\r\n                        .find(function (bn) {\r\n                            return n != bn && Utils.is_intercepted({x: n.x, y: new_y, width: n.width, height: n.height}, bn);\r\n                        })\r\n                        .value();\r\n\r\n                    if (!collision_node) {\r\n                        n._dirty = true;\r\n                        n.y = new_y;\r\n                    }\r\n                    --new_y;\r\n                }\r\n            }, this);\r\n        }\r\n        else {\r\n            _.each(this.nodes, function (n, i) {\r\n                if (n.locked)\r\n                    return;\r\n                while (n.y > 0) {\r\n                    var new_y = n.y - 1;\r\n                    var can_be_moved = i == 0;\r\n\r\n                    if (i > 0) {\r\n                        var collision_node = _.chain(this.nodes)\r\n                            .take(i)\r\n                            .find(function (bn) {\r\n                                return Utils.is_intercepted({x: n.x, y: new_y, width: n.width, height: n.height}, bn);\r\n                            })\r\n                            .value();\r\n                        can_be_moved = typeof collision_node == 'undefined';\r\n                    }\r\n\r\n                    if (!can_be_moved) {\r\n                        break;\r\n                    }\r\n                    n._dirty = n.y != new_y;\r\n                    n.y = new_y;\r\n                }\r\n            }, this);\r\n        }\r\n    };\r\n\r\n    GridStackEngine.prototype._prepare_node = function (node, resizing) {\r\n        node = _.defaults(node || {}, {width: 1, height: 1, x: 0, y: 0 });\r\n\r\n        node.x = parseInt('' + node.x);\r\n        node.y = parseInt('' + node.y);\r\n        node.width = parseInt('' + node.width);\r\n        node.height = parseInt('' + node.height);\r\n        node.auto_position = node.auto_position || false;\r\n        node.no_resize = node.no_resize || false;\r\n        node.no_move = node.no_move || false;\r\n\r\n        if (node.width > this.width) {\r\n            node.width = this.width;\r\n        }\r\n        else if (node.width < 1) {\r\n            node.width = 1;\r\n        }\r\n\r\n        if (node.height < 1) {\r\n            node.height = 1;\r\n        }\r\n\r\n        if (node.x < 0) {\r\n            node.x = 0;\r\n        }\r\n\r\n        if (node.x + node.width > this.width) {\r\n            if (resizing) {\r\n                node.width = this.width - node.x;\r\n            }\r\n            else {\r\n                node.x = this.width - node.width;\r\n            }\r\n        }\r\n\r\n        if (node.y < 0) {\r\n            node.y = 0;\r\n        }\r\n\r\n        return node;\r\n    };\r\n\r\n    GridStackEngine.prototype._notify = function () {\r\n        if (this._update_counter) {\r\n            return;\r\n        }\r\n        var deleted_nodes = Array.prototype.slice.call(arguments, 1).concat(this.get_dirty_nodes());\r\n        deleted_nodes = deleted_nodes.concat(this.get_dirty_nodes());\r\n        this.onchange(deleted_nodes);\r\n    };\r\n\r\n    GridStackEngine.prototype.clean_nodes = function () {\r\n        _.each(this.nodes, function (n) {n._dirty = false });\r\n    };\r\n\r\n    GridStackEngine.prototype.get_dirty_nodes = function () {\r\n        return _.filter(this.nodes, function (n) { return n._dirty; });\r\n    };\r\n\r\n    GridStackEngine.prototype.add_node = function(node) {\r\n        node = this._prepare_node(node);\r\n\r\n        if (typeof node.max_width != 'undefined') node.width = Math.min(node.width, node.max_width);\r\n        if (typeof node.max_height != 'undefined') node.height = Math.min(node.height, node.max_height);\r\n        if (typeof node.min_width != 'undefined') node.width = Math.max(node.width, node.min_width);\r\n        if (typeof node.min_height != 'undefined') node.height = Math.max(node.height, node.min_height);\r\n\r\n        node._id = ++id_seq;\r\n        node._dirty = true;\r\n\r\n        if (node.auto_position) {\r\n            this._sort_nodes();\r\n\r\n            for (var i = 0; ; ++i) {\r\n                var x = i % this.width, y = Math.floor(i / this.width);\r\n                if (x + node.width > this.width) {\r\n                    continue;\r\n                }\r\n                if (!_.find(this.nodes, function (n) {\r\n                    return Utils.is_intercepted({x: x, y: y, width: node.width, height: node.height}, n);\r\n                })) {\r\n                    node.x = x;\r\n                    node.y = y;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.nodes.push(node);\r\n\r\n        this._fix_collisions(node);\r\n        this._pack_nodes();\r\n        this._notify();\r\n        return node;\r\n    };\r\n\r\n    GridStackEngine.prototype.remove_node = function (node) {\r\n        node._id = null;\r\n        this.nodes = _.without(this.nodes, node);\r\n        this._pack_nodes();\r\n        this._notify(node);\r\n    };\r\n\r\n    GridStackEngine.prototype.can_move_node = function (node, x, y, width, height) {\r\n        var has_locked = Boolean(_.find(this.nodes, function (n) { return n.locked }));\r\n\r\n        if (!this.height && !has_locked)\r\n            return true;\r\n\r\n        var cloned_node;\r\n        var clone = new GridStackEngine(\r\n            this.width,\r\n            null,\r\n            this.float,\r\n            0,\r\n            _.map(this.nodes, function (n) { if (n == node) { cloned_node = $.extend({}, n); return cloned_node; } return $.extend({}, n) }));\r\n\r\n        clone.move_node(cloned_node, x, y, width, height);\r\n\r\n        var res = true;\r\n\r\n        if (has_locked)\r\n            res &= !Boolean(_.find(clone.nodes, function (n) { return n != cloned_node && Boolean(n.locked) && Boolean(n._dirty); }));\r\n        if (this.height)\r\n            res &= clone.get_grid_height() <= this.height;\r\n\r\n        return res;\r\n    };\r\n\r\n    GridStackEngine.prototype.can_be_placed_with_respect_to_height = function (node) {\r\n        if (!this.height)\r\n            return true;\r\n\r\n        var clone = new GridStackEngine(\r\n            this.width,\r\n            null,\r\n            this.float,\r\n            0,\r\n            _.map(this.nodes, function (n) { return $.extend({}, n) }));\r\n        clone.add_node(node);\r\n        return clone.get_grid_height() <= this.height;\r\n    };\r\n\r\n    GridStackEngine.prototype.move_node = function (node, x, y, width, height, no_pack) {\r\n        if (typeof x != 'number') x = node.x;\r\n        if (typeof y != 'number') y = node.y;\r\n        if (typeof width != 'number') width = node.width;\r\n        if (typeof height != 'number') height = node.height;\r\n\r\n        if (typeof node.max_width != 'undefined') width = Math.min(width, node.max_width);\r\n        if (typeof node.max_height != 'undefined') height = Math.min(height, node.max_height);\r\n        if (typeof node.min_width != 'undefined') width = Math.max(width, node.min_width);\r\n        if (typeof node.min_height != 'undefined') height = Math.max(height, node.min_height);\r\n\r\n        if (node.x == x && node.y == y && node.width == width && node.height == height) {\r\n            return node;\r\n        }\r\n\r\n        var resizing = node.width != width;\r\n        node._dirty = true;\r\n\r\n        node.x = x;\r\n        node.y = y;\r\n        node.width = width;\r\n        node.height = height;\r\n\r\n        node = this._prepare_node(node, resizing);\r\n\r\n        this._fix_collisions(node);\r\n        if (!no_pack) {\r\n            this._pack_nodes();\r\n            this._notify();\r\n        }\r\n        return node;\r\n    };\r\n\r\n    GridStackEngine.prototype.get_grid_height = function () {\r\n        return _.reduce(this.nodes, function (memo, n) { return Math.max(memo, n.y + n.height); }, 0);\r\n    };\r\n\r\n    GridStackEngine.prototype.begin_update = function (node) {\r\n        _.each(this.nodes, function (n) {\r\n            n._orig_y = n.y;\r\n        });\r\n        node._updating = true;\r\n    };\r\n\r\n    GridStackEngine.prototype.end_update = function () {\r\n        _.each(this.nodes, function (n) {\r\n            n._orig_y = n.y;\r\n        });\r\n        var n = _.find(this.nodes, function (n) { return n._updating; });\r\n        if (n) {\r\n            n._updating = false;\r\n        }\r\n    };\r\n\r\n    var GridStack = function (el, opts) {\r\n        var self = this, one_column_mode;\r\n\r\n        this.container = $(el);\r\n\r\n        opts.item_class = opts.item_class || 'grid-stack-item';\r\n        var is_nested = this.container.closest('.' + opts.item_class).size() > 0;\r\n\r\n        this.opts = _.defaults(opts || {}, {\r\n            width: parseInt(this.container.attr('data-gs-width')) || 12,\r\n            height: parseInt(this.container.attr('data-gs-height')) || 0,\r\n            item_class: 'grid-stack-item',\r\n            placeholder_class: 'grid-stack-placeholder',\r\n            handle: '.grid-stack-item-content',\r\n            cell_height: 60,\r\n            vertical_margin: 20,\r\n            auto: true,\r\n            min_width: 768,\r\n            float: false,\r\n            _class: 'grid-stack-' + (Math.random() * 10000).toFixed(0),\r\n            animate: Boolean(this.container.attr('data-gs-animate')) || false,\r\n            always_show_resize_handle: opts.always_show_resize_handle || false,\r\n            resizable: _.defaults(opts.resizable || {}, {\r\n                autoHide: !(opts.always_show_resize_handle || false),\r\n                handles: 'se'\r\n            }),\r\n            draggable: _.defaults(opts.draggable || {}, {\r\n                handle: '.grid-stack-item-content',\r\n                scroll: false,\r\n                appendTo: 'body'\r\n            })\r\n        });\r\n        this.opts.is_nested = is_nested;\r\n\r\n        this.container.addClass(this.opts._class);\r\n        if (is_nested) {\r\n            this.container.addClass('grid-stack-nested');\r\n        }\r\n\r\n        this._init_styles();\r\n\r\n        this.grid = new GridStackEngine(this.opts.width, function (nodes) {\r\n            var max_height = 0;\r\n            _.each(nodes, function (n) {\r\n                if (n._id == null) {\r\n                    n.el.remove();\r\n                }\r\n                else {\r\n                    n.el\r\n                        .attr('data-gs-x', n.x)\r\n                        .attr('data-gs-y', n.y)\r\n                        .attr('data-gs-width', n.width)\r\n                        .attr('data-gs-height', n.height);\r\n                    max_height = Math.max(max_height, n.y + n.height);\r\n                }\r\n            });\r\n            self._update_styles(max_height + 10);\r\n        }, this.opts.float, this.opts.height);\r\n\r\n        if (this.opts.auto) {\r\n            var elements = [];\r\n            var _this = this;\r\n            this.container.children('.' + this.opts.item_class).each(function (index, el) {\r\n                el = $(el);\r\n                elements.push({\r\n                    el: el,\r\n                    i: parseInt(el.attr('data-gs-x')) + parseInt(el.attr('data-gs-y')) * _this.opts.width // Use opts.width as weight for Y\r\n                });\r\n            });\r\n            _.chain(elements).sortBy(function (x) { return x.i; }).each(function (i) {\r\n                self._prepare_element(i.el);\r\n            }).value();\r\n        }\r\n\r\n        this.set_animation(this.opts.animate);\r\n\r\n        this.placeholder = $('<div class=\"' + this.opts.placeholder_class + ' ' + this.opts.item_class + '\"><div class=\"placeholder-content\" /></div>').hide();\r\n        this.container.append(this.placeholder);\r\n        this.container.height((this.grid.get_grid_height()) * (this.opts.cell_height + this.opts.vertical_margin) - this.opts.vertical_margin);\r\n\r\n        var on_resize_handler = function () {\r\n            if (self._is_one_column_mode()) {\r\n                if (one_column_mode)\r\n                    return;\r\n\r\n                one_column_mode = true;\r\n\r\n                self.grid._sort_nodes();\r\n                _.each(self.grid.nodes, function (node) {\r\n                    self.container.append(node.el);\r\n\r\n                    if (!node.no_move) {\r\n                        node.el.draggable('disable');\r\n                    }\r\n                    if (!node.no_resize) {\r\n                        node.el.resizable('disable');\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (!one_column_mode)\r\n                    return;\r\n\r\n                one_column_mode = false;\r\n\r\n                _.each(self.grid.nodes, function (node) {\r\n                    if (!node.no_move) {\r\n                        node.el.draggable('enable');\r\n                    }\r\n                    if (!node.no_resize) {\r\n                        node.el.resizable('enable');\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        $(window).resize(on_resize_handler);\r\n        on_resize_handler();\r\n    };\r\n\r\n    GridStack.prototype._init_styles = function () {\r\n        if (this._styles_id) {\r\n            $('[data-gs-id=\"' + this._styles_id + '\"]').remove();\r\n        }\r\n        this._styles_id = 'gridstack-style-' + (Math.random() * 100000).toFixed();\r\n        this._styles = Utils.create_stylesheet(this._styles_id);\r\n        if (this._styles != null)\r\n            this._styles._max = 0;\r\n    };\r\n\r\n    GridStack.prototype._update_styles = function (max_height) {\r\n        if (this._styles == null) {\r\n            return;\r\n        }\r\n\r\n        var prefix = '.' + this.opts._class + ' .' + this.opts.item_class;\r\n\r\n        if (typeof max_height == 'undefined') {\r\n            max_height = this._styles._max;\r\n            this._init_styles();\r\n            this._update_container_height();\r\n        }\r\n\r\n        if (this._styles._max == 0) {\r\n            Utils.insert_css_rule(this._styles, prefix, 'min-height: ' + (this.opts.cell_height) + 'px;', 0);\r\n        }\r\n\r\n        if (max_height > this._styles._max) {\r\n            for (var i = this._styles._max; i < max_height; ++i) {\r\n                Utils.insert_css_rule(this._styles,\r\n                    prefix + '[data-gs-height=\"' + (i + 1) + '\"]',\r\n                    'height: ' + (this.opts.cell_height * (i + 1) + this.opts.vertical_margin * i) + 'px;',\r\n                    i\r\n                );\r\n                Utils.insert_css_rule(this._styles,\r\n                    prefix + '[data-gs-min-height=\"' + (i + 1) + '\"]',\r\n                    'min-height: ' + (this.opts.cell_height * (i + 1) + this.opts.vertical_margin * i) + 'px;',\r\n                    i\r\n                );\r\n                Utils.insert_css_rule(this._styles,\r\n                    prefix + '[data-gs-max-height=\"' + (i + 1) + '\"]',\r\n                    'max-height: ' + (this.opts.cell_height * (i + 1) + this.opts.vertical_margin * i) + 'px;',\r\n                    i\r\n                );\r\n                Utils.insert_css_rule(this._styles,\r\n                    prefix + '[data-gs-y=\"' + i + '\"]',\r\n                    'top: ' + (this.opts.cell_height * i + this.opts.vertical_margin * i) + 'px;',\r\n                    i\r\n                );\r\n            }\r\n            this._styles._max = max_height;\r\n        }\r\n    };\r\n\r\n    GridStack.prototype._update_container_height = function () {\r\n        if (this.grid._update_counter) {\r\n            return;\r\n        }\r\n        this.container.height(this.grid.get_grid_height() * (this.opts.cell_height + this.opts.vertical_margin) - this.opts.vertical_margin);\r\n    };\r\n\r\n    GridStack.prototype._is_one_column_mode = function () {\r\n        return $(window).width() <= this.opts.min_width;\r\n    };\r\n\r\n    GridStack.prototype._prepare_element = function (el) {\r\n        var self = this;\r\n        el = $(el);\r\n\r\n        el.addClass(this.opts.item_class);\r\n\r\n        var node = self.grid.add_node({\r\n            x: el.attr('data-gs-x'),\r\n            y: el.attr('data-gs-y'),\r\n            width: el.attr('data-gs-width'),\r\n            height: el.attr('data-gs-height'),\r\n            max_width: el.attr('data-gs-max-width'),\r\n            min_width: el.attr('data-gs-min-width'),\r\n            max_height: el.attr('data-gs-max-height'),\r\n            min_height: el.attr('data-gs-min-height'),\r\n            auto_position: Utils.toBool(el.attr('data-gs-auto-position')),\r\n            no_resize: Utils.toBool(el.attr('data-gs-no-resize')),\r\n            no_move: Utils.toBool(el.attr('data-gs-no-move')),\r\n            locked: Utils.toBool(el.attr('data-gs-locked')),\r\n            el: el\r\n        });\r\n        el.data('_gridstack_node', node);\r\n\r\n        var cell_width, cell_height;\r\n\r\n        var on_start_moving = function (event, ui) {\r\n            var o = $(this);\r\n            self.grid.clean_nodes();\r\n            self.grid.begin_update(node);\r\n            cell_width = Math.ceil(o.outerWidth() / o.attr('data-gs-width'));\r\n            cell_height = self.opts.cell_height + self.opts.vertical_margin;\r\n            self.placeholder\r\n                .attr('data-gs-x', o.attr('data-gs-x'))\r\n                .attr('data-gs-y', o.attr('data-gs-y'))\r\n                .attr('data-gs-width', o.attr('data-gs-width'))\r\n                .attr('data-gs-height', o.attr('data-gs-height'))\r\n                .show();\r\n            node.el = self.placeholder;\r\n\r\n            el.resizable('option', 'minWidth', cell_width * (node.min_width || 1));\r\n            el.resizable('option', 'minHeight', self.opts.cell_height * (node.min_height || 1));\r\n        };\r\n\r\n        var on_end_moving = function (event, ui) {\r\n            var o = $(this);\r\n\r\n            /// Ben Matkin's custom swap listener to determin if a swap was actually made 12/29/2015\r\n            var orig_x = o.attr('data-gs-x');\r\n            var orig_y = o.attr('data-gs-y');\r\n            node.el = o;\r\n            self.placeholder.hide();\r\n            o\r\n                .attr('data-gs-x', node.x)\r\n                .attr('data-gs-y', node.y)\r\n                .attr('data-gs-width', node.width)\r\n                .attr('data-gs-height', node.height)\r\n                .removeAttr('style');\r\n\r\n            if (node.x != orig_x  || node.y != orig_y) {\r\n                $('body').trigger('swapped_grid');\r\n            }\r\n            self._update_container_height();\r\n            self.container.trigger('change', [self.grid.get_dirty_nodes()]);\r\n\r\n            self.grid.end_update();\r\n        };\r\n\r\n        el.draggable(_.extend(this.opts.draggable, {\r\n            start: on_start_moving,\r\n            stop: on_end_moving,\r\n            drag: function (event, ui) {\r\n                var x = Math.round(ui.position.left / cell_width),\r\n                    y = Math.floor((ui.position.top + cell_height/2) / cell_height);\r\n                if (!self.grid.can_move_node(node, x, y, node.width, node.height)) {\r\n                    return;\r\n                }\r\n                self.grid.move_node(node, x, y);\r\n                self._update_container_height();\r\n            },\r\n            containment: this.opts.is_nested ? this.container.parent() : null\r\n        })).resizable(_.extend(this.opts.resizable, {\r\n            start: on_start_moving,\r\n            stop: on_end_moving,\r\n            resize: function (event, ui) {\r\n                var x = Math.round(ui.position.left / cell_width),\r\n                    y = Math.floor((ui.position.top + cell_height/2) / cell_height),\r\n                    width = Math.round(ui.size.width / cell_width),\r\n                    height = Math.round(ui.size.height / cell_height);\r\n                if (!self.grid.can_move_node(node, x, y, width, height)) {\r\n                    return;\r\n                }\r\n                self.grid.move_node(node, x, y, width, height);\r\n                self._update_container_height();\r\n            }\r\n        }));\r\n\r\n        if (node.no_move || this._is_one_column_mode()) {\r\n            el.draggable('disable');\r\n        }\r\n\r\n        if (node.no_resize || this._is_one_column_mode()) {\r\n            el.resizable('disable');\r\n        }\r\n\r\n        el.attr('data-gs-locked', node.locked ? 'yes' : null);\r\n    };\r\n\r\n    GridStack.prototype.set_animation = function (enable) {\r\n        if (enable) {\r\n            this.container.addClass('grid-stack-animate');\r\n        }\r\n        else {\r\n            this.container.removeClass('grid-stack-animate');\r\n        }\r\n    };\r\n\r\n    GridStack.prototype.add_widget = function (el, x, y, width, height, auto_position) {\r\n        el = $(el);\r\n        if (typeof x != 'undefined') el.attr('data-gs-x', x);\r\n        if (typeof y != 'undefined') el.attr('data-gs-y', y);\r\n        if (typeof width != 'undefined') el.attr('data-gs-width', width);\r\n        if (typeof height != 'undefined') el.attr('data-gs-height', height);\r\n        if (typeof auto_position != 'undefined') el.attr('data-gs-auto-position', auto_position ? 'yes' : null);\r\n        this.container.append(el);\r\n        this._prepare_element(el);\r\n        this._update_container_height();\r\n\r\n        return el;\r\n    };\r\n\r\n    GridStack.prototype.will_it_fit = function (x, y, width, height, auto_position) {\r\n        var node = {x: x, y: y, width: width, height: height, auto_position: auto_position};\r\n        return this.grid.can_be_placed_with_respect_to_height(node);\r\n    };\r\n\r\n    GridStack.prototype.remove_widget = function (el, detach_node) {\r\n        detach_node = typeof detach_node === 'undefined' ? true : detach_node;\r\n        el = $(el);\r\n        var node = el.data('_gridstack_node');\r\n        this.grid.remove_node(node);\r\n        el.removeData('_gridstack_node');\r\n        this._update_container_height();\r\n        if (detach_node)\r\n            el.remove();\r\n    };\r\n\r\n    GridStack.prototype.remove_all = function (detach_node) {\r\n        _.each(this.grid.nodes, function (node) {\r\n            this.remove_widget(node.el, detach_node);\r\n        }, this);\r\n        this.grid.nodes = [];\r\n        this._update_container_height();\r\n    };\r\n\r\n    GridStack.prototype.resizable = function (el, val) {\r\n        el = $(el);\r\n        el.each(function (index, el) {\r\n            el = $(el);\r\n            var node = el.data('_gridstack_node');\r\n            if (typeof node == 'undefined' || node == null) {\r\n                return;\r\n            }\r\n\r\n            node.no_resize = !(val || false);\r\n            if (node.no_resize) {\r\n                el.resizable('disable');\r\n            }\r\n            else {\r\n                el.resizable('enable');\r\n            }\r\n        });\r\n        return this;\r\n    };\r\n\r\n    GridStack.prototype.movable = function (el, val) {\r\n        el = $(el);\r\n        el.each(function (index, el) {\r\n            el = $(el);\r\n            var node = el.data('_gridstack_node');\r\n            if (typeof node == 'undefined' || node == null) {\r\n                return;\r\n            }\r\n\r\n            node.no_move = !(val || false);\r\n            if (node.no_move) {\r\n                el.draggable('disable');\r\n            }\r\n            else {\r\n                el.draggable('enable');\r\n            }\r\n        });\r\n        return this;\r\n    };\r\n\r\n    GridStack.prototype.disable = function () {\r\n        this.movable(this.container.children('.' + this.opts.item_class), false);\r\n        this.resizable(this.container.children('.' + this.opts.item_class), false);\r\n    };\r\n\r\n    GridStack.prototype.enable = function () {\r\n        this.movable(this.container.children('.' + this.opts.item_class), true);\r\n        this.resizable(this.container.children('.' + this.opts.item_class), true);\r\n    };\r\n\r\n    GridStack.prototype.locked = function (el, val) {\r\n        el = $(el);\r\n        el.each(function (index, el) {\r\n            el = $(el);\r\n            var node = el.data('_gridstack_node');\r\n            if (typeof node == 'undefined' || node == null) {\r\n                return;\r\n            }\r\n\r\n            node.locked = (val || false);\r\n            el.attr('data-gs-locked', node.locked ? 'yes' : null);\r\n        });\r\n        return this;\r\n    };\r\n\r\n    GridStack.prototype._update_element = function (el, callback) {\r\n        el = $(el).first();\r\n        var node = el.data('_gridstack_node');\r\n        if (typeof node == 'undefined' || node == null) {\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n\r\n        self.grid.clean_nodes();\r\n        self.grid.begin_update(node);\r\n\r\n        callback.call(this, el, node);\r\n\r\n        self._update_container_height();\r\n        self.container.trigger('change', [self.grid.get_dirty_nodes()]);\r\n\r\n        self.grid.end_update();\r\n    };\r\n\r\n    GridStack.prototype.resize = function (el, width, height) {\r\n        this._update_element(el, function (el, node) {\r\n            width = (width != null && typeof width != 'undefined') ? width : node.width;\r\n            height = (height != null && typeof height != 'undefined') ? height : node.height;\r\n\r\n            this.grid.move_node(node, node.x, node.y, width, height);\r\n        });\r\n    };\r\n\r\n    GridStack.prototype.move = function (el, x, y) {\r\n        this._update_element(el, function (el, node) {\r\n            x = (x != null && typeof x != 'undefined') ? x : node.x;\r\n            y = (y != null && typeof y != 'undefined') ? y : node.y;\r\n\r\n            this.grid.move_node(node, x, y, node.width, node.height);\r\n        });\r\n    };\r\n\r\n    GridStack.prototype.update = function (el, x, y, width, height) {\r\n        this._update_element(el, function (el, node) {\r\n            x = (x != null && typeof x != 'undefined') ? x : node.x;\r\n            y = (y != null && typeof y != 'undefined') ? y : node.y;\r\n            width = (width != null && typeof width != 'undefined') ? width : node.width;\r\n            height = (height != null && typeof height != 'undefined') ? height : node.height;\r\n\r\n            this.grid.move_node(node, x, y, width, height);\r\n        });\r\n    };\r\n\r\n    GridStack.prototype.cell_height = function (val) {\r\n        if (typeof val == 'undefined') {\r\n            return this.opts.cell_height;\r\n        }\r\n        val = parseInt(val);\r\n        if (val == this.opts.cell_height)\r\n            return;\r\n        this.opts.cell_height = val || this.opts.cell_height;\r\n        this._update_styles();\r\n    };\r\n\r\n    GridStack.prototype.cell_width = function () {\r\n        var o = this.container.children('.' + this.opts.item_class).first();\r\n        return Math.ceil(o.outerWidth() / o.attr('data-gs-width'));\r\n    };\r\n\r\n    GridStack.prototype.get_cell_from_pixel = function(position) {\r\n        var containerPos = this.container.position();\r\n        var relativeLeft = position.left - containerPos.left;\r\n        var relativeTop = position.top - containerPos.top;\r\n\r\n        var column_width = Math.floor(this.container.width() / this.opts.width);\r\n        var row_height = this.opts.cell_height + this.opts.vertical_margin;\r\n\r\n        return {x: Math.floor(relativeLeft / column_width), y: Math.floor(relativeTop / row_height)};\r\n    };\r\n\r\n    GridStack.prototype.batch_update = function () {\r\n        this.grid.batch_update();\r\n    };\r\n\r\n    GridStack.prototype.commit = function () {\r\n        this.grid.commit();\r\n        this._update_container_height()\r\n    };\r\n\r\n    GridStack.prototype.is_area_empty = function (x, y, width, height) {\r\n        return this.grid.is_area_empty(x, y, width, height);\r\n    };\r\n\r\n    scope.GridStackUI = GridStack;\r\n\r\n    scope.GridStackUI.Utils = Utils;\r\n\r\n    $.fn.gridstack = function (opts) {\r\n        return this.each(function () {\r\n            if (!$(this).data('gridstack')) {\r\n                $(this).data('gridstack', new GridStack(this, opts));\r\n            }\r\n        });\r\n    };\r\n\r\n    return scope.GridStackUI;\r\n});\r\n"]}